{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"react-native-screens","data":{"isAsync":false}},{"name":"../routers/DrawerActions","data":{"isAsync":false}},{"name":"./DrawerSidebar","data":{"isAsync":false}},{"name":"../utils/DrawerGestureContext","data":{"isAsync":false}},{"name":"./ResourceSavingScene","data":{"isAsync":false}},{"name":"./Drawer","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[11], \"react-navigation\");\n\n  var _reactNativeScreens = _$$_REQUIRE(_dependencyMap[12], \"react-native-screens\");\n\n  var DrawerActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"../routers/DrawerActions\"));\n\n  var _DrawerSidebar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./DrawerSidebar\"));\n\n  var _DrawerGestureContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"../utils/DrawerGestureContext\"));\n\n  var _ResourceSavingScene = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./ResourceSavingScene\"));\n\n  var _Drawer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./Drawer\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var DrawerView = function (_React$PureComponent) {\n    (0, _inherits2.default)(DrawerView, _React$PureComponent);\n\n    var _super = _createSuper(DrawerView);\n\n    function DrawerView() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerView);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n        loaded: [_this.props.navigation.state.index],\n        drawerWidth: typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"context\", void 0);\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"drawerGestureRef\", React.createRef());\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"getLockMode\", function (_ref) {\n        var navigation = _ref.navigation,\n            descriptors = _ref.descriptors;\n        var activeKey = navigation.state.routes[navigation.state.index].key;\n        var drawerLockMode = descriptors[activeKey].options.drawerLockMode;\n        return drawerLockMode;\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleDrawerOpen\", function () {\n        var navigation = _this.props.navigation;\n        navigation.dispatch(DrawerActions.openDrawer({\n          key: navigation.state.key\n        }));\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleDrawerClose\", function () {\n        var navigation = _this.props.navigation;\n        navigation.dispatch(DrawerActions.closeDrawer({\n          key: navigation.state.key\n        }));\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"updateWidth\", function () {\n        var drawerWidth = typeof _this.props.navigationConfig.drawerWidth === 'function' ? _this.props.navigationConfig.drawerWidth() : _this.props.navigationConfig.drawerWidth;\n\n        if (_this.state.drawerWidth !== drawerWidth) {\n          _this.setState({\n            drawerWidth: drawerWidth\n          });\n        }\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderNavigationView\", function (_ref2) {\n        var progress = _ref2.progress;\n        return React.createElement(_DrawerSidebar.default, _extends({\n          screenProps: _this.props.screenProps,\n          drawerOpenProgress: progress,\n          navigation: _this.props.navigation,\n          descriptors: _this.props.descriptors\n        }, _this.props.navigationConfig));\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderContent\", function () {\n        var _this$props = _this.props,\n            lazy = _this$props.lazy,\n            navigation = _this$props.navigation;\n        var loaded = _this.state.loaded;\n        var routes = navigation.state.routes;\n\n        if (_this.props.navigationConfig.unmountInactiveRoutes) {\n          var activeKey = navigation.state.routes[navigation.state.index].key;\n          var descriptor = _this.props.descriptors[activeKey];\n          return React.createElement(_reactNavigation.SceneView, {\n            navigation: descriptor.navigation,\n            screenProps: _this.props.screenProps,\n            component: descriptor.getComponent()\n          });\n        } else {\n          return React.createElement(_reactNativeScreens.ScreenContainer, {\n            style: styles.content\n          }, routes.map(function (route, index) {\n            if (lazy && !loaded.includes(index)) {\n              return null;\n            }\n\n            var isFocused = navigation.state.index === index;\n            var descriptor = _this.props.descriptors[route.key];\n            return React.createElement(_ResourceSavingScene.default, {\n              key: route.key,\n              style: [_reactNative.StyleSheet.absoluteFill, {\n                opacity: isFocused ? 1 : 0\n              }],\n              isVisible: isFocused\n            }, React.createElement(_reactNavigation.SceneView, {\n              navigation: descriptor.navigation,\n              screenProps: _this.props.screenProps,\n              component: descriptor.getComponent()\n            }));\n          }));\n        }\n      });\n\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"setDrawerGestureRef\", function (ref) {\n        _this.drawerGestureRef.current = ref;\n      });\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerView, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this.getLockMode(this.props) === 'locked-open') {\n          this.handleDrawerOpen();\n        }\n\n        _reactNative.Dimensions.addEventListener('change', this.updateWidth);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var prevLockMode = this.getLockMode(prevProps);\n        var nextLockMode = this.getLockMode(this.props);\n\n        if (prevLockMode !== nextLockMode) {\n          if (nextLockMode === 'locked-open') {\n            this.handleDrawerOpen();\n          } else {\n            this.handleDrawerClose();\n          }\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _reactNative.Dimensions.removeEventListener('change', this.updateWidth);\n      }\n    }, {\n      key: \"getDrawerBackgroundColor\",\n      value: function getDrawerBackgroundColor() {\n        var drawerBackgroundColor = this.props.navigationConfig.drawerBackgroundColor;\n\n        if (drawerBackgroundColor) {\n          return typeof drawerBackgroundColor === 'string' ? drawerBackgroundColor : drawerBackgroundColor[this.context];\n        } else {\n          return _reactNavigation.ThemeColors[this.context].bodyContent;\n        }\n      }\n    }, {\n      key: \"getOverlayColor\",\n      value: function getOverlayColor() {\n        var overlayColor = this.props.navigationConfig.overlayColor;\n\n        if (overlayColor) {\n          return typeof overlayColor === 'string' ? overlayColor : overlayColor[this.context];\n        } else {\n          return 'rgba(0,0,0,0.5)';\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n            navigation = _this$props2.navigation,\n            navigationConfig = _this$props2.navigationConfig;\n        var drawerType = navigationConfig.drawerType,\n            sceneContainerStyle = navigationConfig.sceneContainerStyle,\n            edgeWidth = navigationConfig.edgeWidth,\n            minSwipeDistance = navigationConfig.minSwipeDistance,\n            hideStatusBar = navigationConfig.hideStatusBar,\n            statusBarAnimation = navigationConfig.statusBarAnimation,\n            gestureHandlerProps = navigationConfig.gestureHandlerProps;\n        var drawerLockMode = this.getLockMode(this.props);\n        var drawerBackgroundColor = this.getDrawerBackgroundColor();\n        var overlayColor = this.getOverlayColor();\n        return React.createElement(_DrawerGestureContext.default.Provider, {\n          value: this.drawerGestureRef\n        }, React.createElement(_Drawer.default, {\n          open: navigation.state.isDrawerOpen,\n          gestureEnabled: drawerLockMode !== 'locked-open' && drawerLockMode !== 'locked-closed',\n          onOpen: this.handleDrawerOpen,\n          onClose: this.handleDrawerClose,\n          onGestureRef: this.setDrawerGestureRef,\n          gestureHandlerProps: gestureHandlerProps,\n          drawerType: drawerType,\n          drawerPosition: this.props.navigationConfig.drawerPosition,\n          sceneContainerStyle: sceneContainerStyle,\n          drawerStyle: {\n            backgroundColor: drawerBackgroundColor,\n            width: this.state.drawerWidth\n          },\n          overlayStyle: {\n            backgroundColor: overlayColor\n          },\n          swipeEdgeWidth: edgeWidth,\n          swipeDistanceThreshold: minSwipeDistance,\n          hideStatusBar: hideStatusBar,\n          statusBarAnimation: statusBarAnimation,\n          renderDrawerContent: this.renderNavigationView,\n          renderSceneContent: this.renderContent\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        var index = nextProps.navigation.state.index;\n        return {\n          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat((0, _toConsumableArray2.default)(prevState.loaded), [index])\n        };\n      }\n    }]);\n    return DrawerView;\n  }(React.PureComponent);\n\n  exports.default = DrawerView;\n\n  _defineProperty(DrawerView, \"contextType\", _reactNavigation.ThemeContext);\n\n  _defineProperty(DrawerView, \"defaultProps\", {\n    lazy: true\n  });\n\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      flex: 1\n    }\n  });\n});","lineCount":312,"map":[[25,0,5,0],[27,0,6,0],[29,0,7,0],[31,0,8,0],[33,0,9,0],[35,0,10,0],[37,0,11,0],[39,0,12,0],[41,0,13,0],[47,0,1,0],[47,11,1,9,"_extends"],[47,19,1,0],[47,22,1,20],[48,0,1,22,"_extends"],[48,4,1,22,"_extends"],[48,12,1,30],[48,15,1,33,"Object"],[48,21,1,39],[48,22,1,40,"assign"],[48,28,1,33],[48,32,1,50],[48,42,1,60,"target"],[48,48,1,50],[48,50,1,68],[49,0,1,70],[49,11,1,75],[49,15,1,79,"i"],[49,16,1,80],[49,19,1,83],[49,20,1,70],[49,22,1,86,"i"],[49,23,1,87],[49,26,1,90,"arguments"],[49,35,1,99],[49,36,1,100,"length"],[49,42,1,70],[49,44,1,108,"i"],[49,45,1,109],[49,47,1,70],[49,49,1,113],[50,0,1,115],[50,12,1,119,"source"],[50,18,1,125],[50,21,1,128,"arguments"],[50,30,1,137],[50,31,1,138,"i"],[50,32,1,137],[50,33,1,115],[52,0,1,142],[52,13,1,147],[52,17,1,151,"key"],[52,20,1,142],[52,24,1,158,"source"],[52,30,1,142],[52,32,1,166],[53,0,1,168],[53,14,1,172,"Object"],[53,20,1,178],[53,21,1,179,"prototype"],[53,30,1,172],[53,31,1,189,"hasOwnProperty"],[53,45,1,172],[53,46,1,204,"call"],[53,50,1,172],[53,51,1,209,"source"],[53,57,1,172],[53,59,1,217,"key"],[53,62,1,172],[53,63,1,168],[53,65,1,223],[54,0,1,225,"target"],[54,12,1,225,"target"],[54,18,1,231],[54,19,1,232,"key"],[54,22,1,231],[54,23,1,225],[54,26,1,239,"source"],[54,32,1,245],[54,33,1,246,"key"],[54,36,1,245],[54,37,1,225],[55,0,1,253],[56,0,1,255],[57,0,1,257],[59,0,1,258],[59,13,1,265,"target"],[59,19,1,258],[60,0,1,274],[60,5,1,22],[62,0,1,276],[62,11,1,283,"_extends"],[62,19,1,291],[62,20,1,292,"apply"],[62,25,1,283],[62,26,1,298],[62,30,1,283],[62,32,1,304,"arguments"],[62,41,1,283],[62,42,1,276],[63,0,1,317],[65,0,3,0],[65,11,3,9,"_defineProperty"],[65,26,3,0],[65,27,3,25,"obj"],[65,30,3,0],[65,32,3,30,"key"],[65,35,3,0],[65,37,3,35,"value"],[65,42,3,0],[65,44,3,42],[66,0,3,44],[66,8,3,48,"key"],[66,11,3,51],[66,15,3,55,"obj"],[66,18,3,44],[66,20,3,60],[67,0,3,62,"Object"],[67,6,3,62,"Object"],[67,12,3,68],[67,13,3,69,"defineProperty"],[67,27,3,62],[67,28,3,84,"obj"],[67,31,3,62],[67,33,3,89,"key"],[67,36,3,62],[67,38,3,94],[68,0,3,96,"value"],[68,8,3,96,"value"],[68,13,3,101],[68,15,3,103,"value"],[68,20,3,94],[69,0,3,110,"enumerable"],[69,8,3,110,"enumerable"],[69,18,3,120],[69,20,3,122],[69,24,3,94],[70,0,3,128,"configurable"],[70,8,3,128,"configurable"],[70,20,3,140],[70,22,3,142],[70,26,3,94],[71,0,3,148,"writable"],[71,8,3,148,"writable"],[71,16,3,156],[71,18,3,158],[72,0,3,94],[72,7,3,62],[73,0,3,168],[73,5,3,44],[73,11,3,174],[74,0,3,176,"obj"],[74,6,3,176,"obj"],[74,9,3,179],[74,10,3,180,"key"],[74,13,3,179],[74,14,3,176],[74,17,3,187,"value"],[74,22,3,176],[75,0,3,195],[77,0,3,196],[77,11,3,203,"obj"],[77,14,3,196],[78,0,3,209],[80,6,18,21,"DrawerView"],[80,16],[85,0,19,2],[85,26,19,23],[86,0,19,23],[88,0,19,23],[90,0,19,23],[90,40,19,17,"args"],[90,44,19,23],[91,0,19,17,"args"],[91,8,19,17,"args"],[91,12,19,23],[92,0,19,23],[94,0,20,4],[94,54,20,13,"args"],[94,58,20,4],[96,0,22,4,"_defineProperty"],[96,6,22,4,"_defineProperty"],[96,21,22,19],[96,67,22,26],[96,74,22,19],[96,76,22,35],[97,0,23,6,"loaded"],[97,8,23,6,"loaded"],[97,14,23,12],[97,16,23,14],[97,17,23,15],[97,23,23,20,"props"],[97,28,23,15],[97,29,23,26,"navigation"],[97,39,23,15],[97,40,23,37,"state"],[97,45,23,15],[97,46,23,43,"index"],[97,51,23,14],[97,52,22,35],[98,0,24,6,"drawerWidth"],[98,8,24,6,"drawerWidth"],[98,19,24,17],[98,21,24,19],[98,28,24,26],[98,34,24,31,"props"],[98,39,24,26],[98,40,24,37,"navigationConfig"],[98,56,24,26],[98,57,24,54,"drawerWidth"],[98,68,24,19],[98,73,24,70],[98,83,24,19],[98,86,24,83],[98,92,24,88,"props"],[98,97,24,83],[98,98,24,94,"navigationConfig"],[98,114,24,83],[98,115,24,111,"drawerWidth"],[98,126,24,83],[98,128,24,19],[98,131,24,127],[98,137,24,132,"props"],[98,142,24,127],[98,143,24,138,"navigationConfig"],[98,159,24,127],[98,160,24,155,"drawerWidth"],[99,0,22,35],[99,7,22,19],[99,8,22,4],[101,0,27,4,"_defineProperty"],[101,6,27,4,"_defineProperty"],[101,21,27,19],[101,67,27,26],[101,76,27,19],[101,78,27,37],[101,83,27,42],[101,84,27,19],[101,85,27,4],[103,0,29,4,"_defineProperty"],[103,6,29,4,"_defineProperty"],[103,21,29,19],[103,67,29,26],[103,85,29,19],[103,87,29,59,"React"],[103,92,29,64],[103,93,29,65,"createRef"],[103,102,29,59],[103,104,29,19],[103,105,29,4],[105,0,31,4,"_defineProperty"],[105,6,31,4,"_defineProperty"],[105,21,31,19],[105,67,31,26],[105,80,31,19],[105,82,31,41],[105,98,34,10],[106,0,34,10],[106,12,32,6,"navigation"],[106,22,34,10],[106,30,32,6,"navigation"],[106,40,34,10],[107,0,34,10],[107,12,33,6,"descriptors"],[107,23,34,10],[107,31,33,6,"descriptors"],[107,42,34,10],[108,0,35,6],[108,12,35,12,"activeKey"],[108,21,35,21],[108,24,35,24,"navigation"],[108,34,35,34],[108,35,35,35,"state"],[108,40,35,24],[108,41,35,41,"routes"],[108,47,35,24],[108,48,35,48,"navigation"],[108,58,35,58],[108,59,35,59,"state"],[108,64,35,48],[108,65,35,65,"index"],[108,70,35,24],[108,72,35,72,"key"],[108,75,35,6],[109,0,34,10],[109,12,37,8,"drawerLockMode"],[109,26,34,10],[109,29,38,10,"descriptors"],[109,40,38,21],[109,41,38,22,"activeKey"],[109,50,38,21],[109,51,38,10],[109,52,38,33,"options"],[109,59,34,10],[109,60,37,8,"drawerLockMode"],[109,74,34,10],[110,0,39,6],[110,15,39,13,"drawerLockMode"],[110,29,39,6],[111,0,40,5],[111,7,31,19],[111,8,31,4],[113,0,42,4,"_defineProperty"],[113,6,42,4,"_defineProperty"],[113,21,42,19],[113,67,42,26],[113,85,42,19],[113,87,42,46],[113,99,42,52],[114,0,42,52],[114,12,44,8,"navigation"],[114,22,42,52],[114,25,45,10],[114,31,45,15,"props"],[114,36,42,52],[114,37,44,8,"navigation"],[114,47,42,52],[115,0,46,6,"navigation"],[115,8,46,6,"navigation"],[115,18,46,16],[115,19,46,17,"dispatch"],[115,27,46,6],[115,28,46,26,"DrawerActions"],[115,41,46,39],[115,42,46,40,"openDrawer"],[115,52,46,26],[115,53,46,51],[116,0,47,8,"key"],[116,10,47,8,"key"],[116,13,47,11],[116,15,47,13,"navigation"],[116,25,47,23],[116,26,47,24,"state"],[116,31,47,13],[116,32,47,30,"key"],[117,0,46,51],[117,9,46,26],[117,10,46,6],[118,0,49,5],[118,7,42,19],[118,8,42,4],[120,0,51,4,"_defineProperty"],[120,6,51,4,"_defineProperty"],[120,21,51,19],[120,67,51,26],[120,86,51,19],[120,88,51,47],[120,100,51,53],[121,0,51,53],[121,12,53,8,"navigation"],[121,22,51,53],[121,25,54,10],[121,31,54,15,"props"],[121,36,51,53],[121,37,53,8,"navigation"],[121,47,51,53],[122,0,55,6,"navigation"],[122,8,55,6,"navigation"],[122,18,55,16],[122,19,55,17,"dispatch"],[122,27,55,6],[122,28,55,26,"DrawerActions"],[122,41,55,39],[122,42,55,40,"closeDrawer"],[122,53,55,26],[122,54,55,52],[123,0,56,8,"key"],[123,10,56,8,"key"],[123,13,56,11],[123,15,56,13,"navigation"],[123,25,56,23],[123,26,56,24,"state"],[123,31,56,13],[123,32,56,30,"key"],[124,0,55,52],[124,9,55,26],[124,10,55,6],[125,0,58,5],[125,7,51,19],[125,8,51,4],[127,0,60,4,"_defineProperty"],[127,6,60,4,"_defineProperty"],[127,21,60,19],[127,67,60,26],[127,80,60,19],[127,82,60,41],[127,94,60,47],[128,0,61,6],[128,12,61,12,"drawerWidth"],[128,23,61,23],[128,26,61,26],[128,33,61,33],[128,39,61,38,"props"],[128,44,61,33],[128,45,61,44,"navigationConfig"],[128,61,61,33],[128,62,61,61,"drawerWidth"],[128,73,61,26],[128,78,61,77],[128,88,61,26],[128,91,61,90],[128,97,61,95,"props"],[128,102,61,90],[128,103,61,101,"navigationConfig"],[128,119,61,90],[128,120,61,118,"drawerWidth"],[128,131,61,90],[128,133,61,26],[128,136,61,134],[128,142,61,139,"props"],[128,147,61,134],[128,148,61,145,"navigationConfig"],[128,164,61,134],[128,165,61,162,"drawerWidth"],[128,176,61,6],[130,0,63,6],[130,12,63,10],[130,18,63,15,"state"],[130,23,63,10],[130,24,63,21,"drawerWidth"],[130,35,63,10],[130,40,63,37,"drawerWidth"],[130,51,63,6],[130,53,63,50],[131,0,64,8],[131,16,64,13,"setState"],[131,24,64,8],[131,25,64,22],[132,0,65,10,"drawerWidth"],[132,12,65,10,"drawerWidth"],[132,23,65,21],[132,25,65,10,"drawerWidth"],[133,0,64,22],[133,11,64,8],[134,0,67,7],[135,0,68,5],[135,7,60,19],[135,8,60,4],[137,0,70,4,"_defineProperty"],[137,6,70,4,"_defineProperty"],[137,21,70,19],[137,67,70,26],[137,89,70,19],[137,91,70,50],[137,108,72,10],[138,0,72,10],[138,12,71,6,"progress"],[138,20,72,10],[138,29,71,6,"progress"],[138,37,72,10],[139,0,73,6],[139,15,73,26,"React"],[139,20,73,31],[139,21,73,32,"createElement"],[139,34,73,26],[139,35,73,46,"DrawerSidebar"],[139,57,73,26],[139,59,73,61,"_extends"],[139,67,73,69],[139,68,73,70],[140,0,74,8,"screenProps"],[140,10,74,8,"screenProps"],[140,21,74,19],[140,23,74,21],[140,29,74,26,"props"],[140,34,74,21],[140,35,74,32,"screenProps"],[140,46,73,70],[141,0,75,8,"drawerOpenProgress"],[141,10,75,8,"drawerOpenProgress"],[141,28,75,26],[141,30,75,28,"progress"],[141,38,73,70],[142,0,76,8,"navigation"],[142,10,76,8,"navigation"],[142,20,76,18],[142,22,76,20],[142,28,76,25,"props"],[142,33,76,20],[142,34,76,31,"navigation"],[142,44,73,70],[143,0,77,8,"descriptors"],[143,10,77,8,"descriptors"],[143,21,77,19],[143,23,77,21],[143,29,77,26,"props"],[143,34,77,21],[143,35,77,32,"descriptors"],[144,0,73,70],[144,9,73,69],[144,11,78,9],[144,17,78,14,"props"],[144,22,78,9],[144,23,78,20,"navigationConfig"],[144,39,73,69],[144,40,73,26],[144,41,73,6],[145,0,79,5],[145,7,70,19],[145,8,70,4],[147,0,81,4,"_defineProperty"],[147,6,81,4,"_defineProperty"],[147,21,81,19],[147,67,81,26],[147,82,81,19],[147,84,81,43],[147,96,81,49],[148,0,81,49],[148,26,85,10],[148,32,85,15,"props"],[148,37,81,49],[149,0,81,49],[149,12,83,8,"lazy"],[149,16,81,49],[149,31,83,8,"lazy"],[149,35,81,49],[150,0,81,49],[150,12,84,8,"navigation"],[150,22,81,49],[150,37,84,8,"navigation"],[150,47,81,49],[151,0,81,49],[151,12,87,8,"loaded"],[151,18,81,49],[151,21,88,10],[151,27,88,15,"state"],[151,32,81,49],[151,33,87,8,"loaded"],[151,39,81,49],[152,0,81,49],[152,12,90,8,"routes"],[152,18,81,49],[152,21,91,10,"navigation"],[152,31,91,20],[152,32,91,21,"state"],[152,37,81,49],[152,38,90,8,"routes"],[152,44,81,49],[154,0,93,6],[154,12,93,10],[154,18,93,15,"props"],[154,23,93,10],[154,24,93,21,"navigationConfig"],[154,40,93,10],[154,41,93,38,"unmountInactiveRoutes"],[154,62,93,6],[154,64,93,61],[155,0,94,8],[155,14,94,12,"activeKey"],[155,23,94,21],[155,26,94,24,"navigation"],[155,36,94,34],[155,37,94,35,"state"],[155,42,94,24],[155,43,94,41,"routes"],[155,49,94,24],[155,50,94,48,"navigation"],[155,60,94,58],[155,61,94,59,"state"],[155,66,94,48],[155,67,94,65,"index"],[155,72,94,24],[155,74,94,72,"key"],[155,77,94,8],[156,0,95,8],[156,14,95,12,"descriptor"],[156,24,95,22],[156,27,95,25],[156,33,95,30,"props"],[156,38,95,25],[156,39,95,36,"descriptors"],[156,50,95,25],[156,51,95,48,"activeKey"],[156,60,95,25],[156,61,95,8],[157,0,96,8],[157,17,96,28,"React"],[157,22,96,33],[157,23,96,34,"createElement"],[157,36,96,28],[157,37,96,48,"SceneView"],[157,63,96,28],[157,65,96,59],[158,0,97,10,"navigation"],[158,12,97,10,"navigation"],[158,22,97,20],[158,24,97,22,"descriptor"],[158,34,97,32],[158,35,97,33,"navigation"],[158,45,96,59],[159,0,98,10,"screenProps"],[159,12,98,10,"screenProps"],[159,23,98,21],[159,25,98,23],[159,31,98,28,"props"],[159,36,98,23],[159,37,98,34,"screenProps"],[159,48,96,59],[160,0,99,10,"component"],[160,12,99,10,"component"],[160,21,99,19],[160,23,99,21,"descriptor"],[160,33,99,31],[160,34,99,32,"getComponent"],[160,46,99,21],[161,0,96,59],[161,11,96,28],[161,12,96,8],[162,0,101,7],[162,9,93,6],[162,15,101,13],[163,0,102,8],[163,17,102,28,"React"],[163,22,102,33],[163,23,102,34,"createElement"],[163,36,102,28],[163,37,102,48,"ScreenContainer"],[163,72,102,28],[163,74,102,65],[164,0,103,10,"style"],[164,12,103,10,"style"],[164,17,103,15],[164,19,103,17,"styles"],[164,25,103,23],[164,26,103,24,"content"],[165,0,102,65],[165,11,102,28],[165,13,104,11,"routes"],[165,19,104,17],[165,20,104,18,"map"],[165,23,104,11],[165,24,104,22],[165,34,104,23,"route"],[165,39,104,22],[165,41,104,30,"index"],[165,46,104,22],[165,48,104,40],[166,0,105,10],[166,16,105,14,"lazy"],[166,20,105,18],[166,24,105,22],[166,25,105,23,"loaded"],[166,31,105,29],[166,32,105,30,"includes"],[166,40,105,23],[166,41,105,39,"index"],[166,46,105,23],[166,47,105,10],[166,49,105,47],[167,0,107,12],[167,21,107,19],[167,25,107,12],[168,0,108,11],[170,0,110,10],[170,16,110,14,"isFocused"],[170,25,110,23],[170,28,110,26,"navigation"],[170,38,110,36],[170,39,110,37,"state"],[170,44,110,26],[170,45,110,43,"index"],[170,50,110,26],[170,55,110,53,"index"],[170,60,110,10],[171,0,111,10],[171,16,111,14,"descriptor"],[171,26,111,24],[171,29,111,27],[171,35,111,32,"props"],[171,40,111,27],[171,41,111,38,"descriptors"],[171,52,111,27],[171,53,111,50,"route"],[171,58,111,55],[171,59,111,56,"key"],[171,62,111,27],[171,63,111,10],[172,0,112,10],[172,19,112,30,"React"],[172,24,112,35],[172,25,112,36,"createElement"],[172,38,112,30],[172,39,112,50,"ResourceSavingScene"],[172,67,112,30],[172,69,112,71],[173,0,113,12,"key"],[173,14,113,12,"key"],[173,17,113,15],[173,19,113,17,"route"],[173,24,113,22],[173,25,113,23,"key"],[173,28,112,71],[174,0,114,12,"style"],[174,14,114,12,"style"],[174,19,114,17],[174,21,114,19],[174,22,114,20,"StyleSheet"],[174,46,114,31,"absoluteFill"],[174,58,114,19],[174,60,114,45],[175,0,115,14,"opacity"],[175,16,115,14,"opacity"],[175,23,115,21],[175,25,115,23,"isFocused"],[175,34,115,32],[175,37,115,35],[175,38,115,32],[175,41,115,39],[176,0,114,45],[176,15,114,19],[176,16,112,71],[177,0,117,12,"isVisible"],[177,14,117,12,"isVisible"],[177,23,117,21],[177,25,117,23,"isFocused"],[178,0,112,71],[178,13,112,30],[178,15,118,26,"React"],[178,20,118,31],[178,21,118,32,"createElement"],[178,34,118,26],[178,35,118,46,"SceneView"],[178,61,118,26],[178,63,118,57],[179,0,119,12,"navigation"],[179,14,119,12,"navigation"],[179,24,119,22],[179,26,119,24,"descriptor"],[179,36,119,34],[179,37,119,35,"navigation"],[179,47,118,57],[180,0,120,12,"screenProps"],[180,14,120,12,"screenProps"],[180,25,120,23],[180,27,120,25],[180,33,120,30,"props"],[180,38,120,25],[180,39,120,36,"screenProps"],[180,50,118,57],[181,0,121,12,"component"],[181,14,121,12,"component"],[181,23,121,21],[181,25,121,23,"descriptor"],[181,35,121,33],[181,36,121,34,"getComponent"],[181,48,121,23],[182,0,118,57],[182,13,118,26],[182,14,112,30],[182,15,112,10],[183,0,123,9],[183,11,104,11],[183,12,102,28],[183,13,102,8],[184,0,124,7],[185,0,125,5],[185,7,81,19],[185,8,81,4],[187,0,127,4,"_defineProperty"],[187,6,127,4,"_defineProperty"],[187,21,127,19],[187,67,127,26],[187,88,127,19],[187,90,127,49],[187,100,127,49,"ref"],[187,103,127,52],[187,105,127,56],[188,0,129,6],[188,14,129,11,"drawerGestureRef"],[188,30,129,6],[188,31,129,28,"current"],[188,38,129,6],[188,41,129,38,"ref"],[188,44,129,6],[189,0,130,5],[189,7,127,19],[189,8,127,4],[191,0,19,23],[192,0,131,3],[196,42,143,22],[197,0,145,4],[197,12,145,8],[197,17,145,13,"getLockMode"],[197,28,145,8],[197,29,145,25],[197,34,145,30,"props"],[197,39,145,8],[197,45,145,41],[197,58,145,4],[197,60,145,56],[198,0,146,6],[198,15,146,11,"handleDrawerOpen"],[198,31,146,6],[199,0,147,5],[201,0,149,4,"Dimensions"],[201,32,149,15,"addEventListener"],[201,48,149,4],[201,49,149,32],[201,57,149,4],[201,59,149,42],[201,64,149,47,"updateWidth"],[201,75,149,4],[202,0,150,3],[205,41,152,21,"prevProps"],[205,50],[205,52,152,32],[206,0,153,4],[206,12,153,10,"prevLockMode"],[206,24,153,22],[206,27,153,25],[206,32,153,30,"getLockMode"],[206,43,153,25],[206,44,153,42,"prevProps"],[206,53,153,25],[206,54,153,4],[207,0,154,4],[207,12,154,10,"nextLockMode"],[207,24,154,22],[207,27,154,25],[207,32,154,30,"getLockMode"],[207,43,154,25],[207,44,154,42],[207,49,154,47,"props"],[207,54,154,25],[207,55,154,4],[209,0,156,4],[209,12,156,8,"prevLockMode"],[209,24,156,20],[209,29,156,25,"nextLockMode"],[209,41,156,4],[209,43,156,39],[210,0,157,6],[210,14,157,10,"nextLockMode"],[210,26,157,22],[210,31,157,27],[210,44,157,6],[210,46,157,42],[211,0,158,8],[211,17,158,13,"handleDrawerOpen"],[211,33,158,8],[212,0,159,7],[212,11,157,6],[212,17,159,13],[213,0,160,8],[213,17,160,13,"handleDrawerClose"],[213,34,160,8],[214,0,161,7],[215,0,162,5],[216,0,163,3],[219,45,165,25],[220,0,166,4,"Dimensions"],[220,32,166,15,"removeEventListener"],[220,51,166,4],[220,52,166,35],[220,60,166,4],[220,62,166,45],[220,67,166,50,"updateWidth"],[220,78,166,4],[221,0,167,3],[224,49,169,29],[225,0,169,29],[225,12,171,6,"drawerBackgroundColor"],[225,33,169,29],[225,36,172,8],[225,41,172,13,"props"],[225,46,172,8],[225,47,172,19,"navigationConfig"],[225,63,169,29],[225,64,171,6,"drawerBackgroundColor"],[225,85,169,29],[227,0,174,4],[227,12,174,8,"drawerBackgroundColor"],[227,33,174,4],[227,35,174,31],[228,0,175,6],[228,17,175,13],[228,24,175,20,"drawerBackgroundColor"],[228,45,175,13],[228,50,175,46],[228,58,175,13],[228,61,175,57,"drawerBackgroundColor"],[228,82,175,13],[228,85,175,81,"drawerBackgroundColor"],[228,106,175,102],[228,107,175,103],[228,112,175,108,"context"],[228,119,175,102],[228,120,175,6],[229,0,176,5],[229,9,174,4],[229,15,176,11],[230,0,177,6],[230,17,177,13,"ThemeColors"],[230,46,177,25],[230,51,177,30,"context"],[230,58,177,13],[230,60,177,39,"bodyContent"],[230,71,177,6],[231,0,178,5],[232,0,179,3],[235,40,181,20],[236,0,181,20],[236,12,183,6,"overlayColor"],[236,24,181,20],[236,27,184,8],[236,32,184,13,"props"],[236,37,184,8],[236,38,184,19,"navigationConfig"],[236,54,181,20],[236,55,183,6,"overlayColor"],[236,67,181,20],[238,0,186,4],[238,12,186,8,"overlayColor"],[238,24,186,4],[238,26,186,22],[239,0,187,6],[239,17,187,13],[239,24,187,20,"overlayColor"],[239,36,187,13],[239,41,187,37],[239,49,187,13],[239,52,187,48,"overlayColor"],[239,64,187,13],[239,67,187,63,"overlayColor"],[239,79,187,75],[239,80,187,76],[239,85,187,81,"context"],[239,92,187,75],[239,93,187,6],[240,0,188,5],[240,9,186,4],[240,15,188,11],[241,0,189,6],[241,17,189,13],[241,34,189,6],[242,0,190,5],[243,0,191,3],[246,31,193,11],[247,0,193,11],[247,27,197,8],[247,32,197,13,"props"],[247,37,193,11],[248,0,193,11],[248,12,195,6,"navigation"],[248,22,193,11],[248,38,195,6,"navigation"],[248,48,193,11],[249,0,193,11],[249,12,196,6,"navigationConfig"],[249,28,193,11],[249,44,196,6,"navigationConfig"],[249,60,193,11],[250,0,193,11],[250,12,199,6,"drawerType"],[250,22,193,11],[250,25,206,8,"navigationConfig"],[250,41,193,11],[250,42,199,6,"drawerType"],[250,52,193,11],[251,0,193,11],[251,12,200,6,"sceneContainerStyle"],[251,31,193,11],[251,34,206,8,"navigationConfig"],[251,50,193,11],[251,51,200,6,"sceneContainerStyle"],[251,70,193,11],[252,0,193,11],[252,12,201,6,"edgeWidth"],[252,21,193,11],[252,24,206,8,"navigationConfig"],[252,40,193,11],[252,41,201,6,"edgeWidth"],[252,50,193,11],[253,0,193,11],[253,12,202,6,"minSwipeDistance"],[253,28,193,11],[253,31,206,8,"navigationConfig"],[253,47,193,11],[253,48,202,6,"minSwipeDistance"],[253,64,193,11],[254,0,193,11],[254,12,203,6,"hideStatusBar"],[254,25,193,11],[254,28,206,8,"navigationConfig"],[254,44,193,11],[254,45,203,6,"hideStatusBar"],[254,58,193,11],[255,0,193,11],[255,12,204,6,"statusBarAnimation"],[255,30,193,11],[255,33,206,8,"navigationConfig"],[255,49,193,11],[255,50,204,6,"statusBarAnimation"],[255,68,193,11],[256,0,193,11],[256,12,205,6,"gestureHandlerProps"],[256,31,193,11],[256,34,206,8,"navigationConfig"],[256,50,193,11],[256,51,205,6,"gestureHandlerProps"],[256,70,193,11],[257,0,207,4],[257,12,207,10,"drawerLockMode"],[257,26,207,24],[257,29,207,27],[257,34,207,32,"getLockMode"],[257,45,207,27],[257,46,207,44],[257,51,207,49,"props"],[257,56,207,27],[257,57,207,4],[258,0,208,4],[258,12,208,10,"drawerBackgroundColor"],[258,33,208,31],[258,36,208,34],[258,41,208,39,"getDrawerBackgroundColor"],[258,65,208,34],[258,67,208,4],[259,0,209,4],[259,12,209,10,"overlayColor"],[259,24,209,22],[259,27,209,25],[259,32,209,30,"getOverlayColor"],[259,47,209,25],[259,49,209,4],[260,0,210,4],[260,15,210,24,"React"],[260,20,210,29],[260,21,210,30,"createElement"],[260,34,210,24],[260,35,210,44,"DrawerGestureContext"],[260,65,210,65,"Provider"],[260,73,210,24],[260,75,210,75],[261,0,211,6,"value"],[261,10,211,6,"value"],[261,15,211,11],[261,17,211,13],[261,22,211,18,"drawerGestureRef"],[262,0,210,75],[262,9,210,24],[262,11,212,20,"React"],[262,16,212,25],[262,17,212,26,"createElement"],[262,30,212,20],[262,31,212,40,"Drawer"],[262,46,212,20],[262,48,212,48],[263,0,213,6,"open"],[263,10,213,6,"open"],[263,14,213,10],[263,16,213,12,"navigation"],[263,26,213,22],[263,27,213,23,"state"],[263,32,213,12],[263,33,213,29,"isDrawerOpen"],[263,45,212,48],[264,0,214,6,"gestureEnabled"],[264,10,214,6,"gestureEnabled"],[264,24,214,20],[264,26,214,22,"drawerLockMode"],[264,40,214,36],[264,45,214,41],[264,58,214,22],[264,62,214,58,"drawerLockMode"],[264,76,214,72],[264,81,214,77],[264,96,212,48],[265,0,215,6,"onOpen"],[265,10,215,6,"onOpen"],[265,16,215,12],[265,18,215,14],[265,23,215,19,"handleDrawerOpen"],[265,39,212,48],[266,0,216,6,"onClose"],[266,10,216,6,"onClose"],[266,17,216,13],[266,19,216,15],[266,24,216,20,"handleDrawerClose"],[266,41,212,48],[267,0,217,6,"onGestureRef"],[267,10,217,6,"onGestureRef"],[267,22,217,18],[267,24,217,20],[267,29,217,25,"setDrawerGestureRef"],[267,48,212,48],[268,0,218,6,"gestureHandlerProps"],[268,10,218,6,"gestureHandlerProps"],[268,29,218,25],[268,31,218,27,"gestureHandlerProps"],[268,50,212,48],[269,0,219,6,"drawerType"],[269,10,219,6,"drawerType"],[269,20,219,16],[269,22,219,18,"drawerType"],[269,32,212,48],[270,0,220,6,"drawerPosition"],[270,10,220,6,"drawerPosition"],[270,24,220,20],[270,26,220,22],[270,31,220,27,"props"],[270,36,220,22],[270,37,220,33,"navigationConfig"],[270,53,220,22],[270,54,220,50,"drawerPosition"],[270,68,212,48],[271,0,221,6,"sceneContainerStyle"],[271,10,221,6,"sceneContainerStyle"],[271,29,221,25],[271,31,221,27,"sceneContainerStyle"],[271,50,212,48],[272,0,222,6,"drawerStyle"],[272,10,222,6,"drawerStyle"],[272,21,222,17],[272,23,222,19],[273,0,223,8,"backgroundColor"],[273,12,223,8,"backgroundColor"],[273,27,223,23],[273,29,223,25,"drawerBackgroundColor"],[273,50,222,19],[274,0,224,8,"width"],[274,12,224,8,"width"],[274,17,224,13],[274,19,224,15],[274,24,224,20,"state"],[274,29,224,15],[274,30,224,26,"drawerWidth"],[275,0,222,19],[275,11,212,48],[276,0,226,6,"overlayStyle"],[276,10,226,6,"overlayStyle"],[276,22,226,18],[276,24,226,20],[277,0,227,8,"backgroundColor"],[277,12,227,8,"backgroundColor"],[277,27,227,23],[277,29,227,25,"overlayColor"],[278,0,226,20],[278,11,212,48],[279,0,229,6,"swipeEdgeWidth"],[279,10,229,6,"swipeEdgeWidth"],[279,24,229,20],[279,26,229,22,"edgeWidth"],[279,35,212,48],[280,0,230,6,"swipeDistanceThreshold"],[280,10,230,6,"swipeDistanceThreshold"],[280,32,230,28],[280,34,230,30,"minSwipeDistance"],[280,50,212,48],[281,0,231,6,"hideStatusBar"],[281,10,231,6,"hideStatusBar"],[281,23,231,19],[281,25,231,21,"hideStatusBar"],[281,38,212,48],[282,0,232,6,"statusBarAnimation"],[282,10,232,6,"statusBarAnimation"],[282,28,232,24],[282,30,232,26,"statusBarAnimation"],[282,48,212,48],[283,0,233,6,"renderDrawerContent"],[283,10,233,6,"renderDrawerContent"],[283,29,233,25],[283,31,233,27],[283,36,233,32,"renderNavigationView"],[283,56,212,48],[284,0,234,6,"renderSceneContent"],[284,10,234,6,"renderSceneContent"],[284,28,234,24],[284,30,234,26],[284,35,234,31,"renderContent"],[285,0,212,48],[285,9,212,20],[285,10,210,24],[285,11,210,4],[286,0,236,3],[289,47,133,34,"nextProps"],[289,56],[289,58,133,45,"prevState"],[289,67],[289,69,133,56],[290,0,133,56],[290,12,135,6,"index"],[290,17,133,56],[290,20,136,8,"nextProps"],[290,29,136,17],[290,30,136,18,"navigation"],[290,40,136,8],[290,41,136,29,"state"],[290,46,133,56],[290,47,135,6,"index"],[290,52,133,56],[291,0,137,4],[291,15,137,11],[292,0,139,6,"loaded"],[292,10,139,6,"loaded"],[292,16,139,12],[292,18,139,14,"prevState"],[292,27,139,23],[292,28,139,24,"loaded"],[292,34,139,14],[292,35,139,31,"includes"],[292,43,139,14],[292,44,139,40,"index"],[292,49,139,14],[292,53,139,49,"prevState"],[292,62,139,58],[292,63,139,59,"loaded"],[292,69,139,14],[292,115,139,72,"prevState"],[292,124,139,81],[292,125,139,82,"loaded"],[292,131,139,14],[292,135,139,90,"index"],[292,140,139,14],[293,0,137,11],[293,9,137,4],[294,0,141,3],[297,4,18,40,"React"],[297,9,18,45],[297,10,18,46,"PureComponent"],[297,23],[301,0,240,0,"_defineProperty"],[301,2,240,0,"_defineProperty"],[301,17,240,15],[301,18,240,16,"DrawerView"],[301,28,240,15],[301,30,240,28],[301,43,240,15],[301,45,240,43,"ThemeContext"],[301,74,240,15],[301,75,240,0],[303,0,242,0,"_defineProperty"],[303,2,242,0,"_defineProperty"],[303,17,242,15],[303,18,242,16,"DrawerView"],[303,28,242,15],[303,30,242,28],[303,44,242,15],[303,46,242,44],[304,0,243,2,"lazy"],[304,4,243,2,"lazy"],[304,8,243,6],[304,10,243,8],[305,0,242,44],[305,3,242,15],[305,4,242,0],[307,0,246,0],[307,6,246,6,"styles"],[307,12,246,12],[307,15,246,15,"StyleSheet"],[307,39,246,26,"create"],[307,45,246,15],[307,46,246,33],[308,0,247,2,"content"],[308,4,247,2,"content"],[308,11,247,9],[308,13,247,11],[309,0,248,4,"flex"],[309,6,248,4,"flex"],[309,10,248,8],[309,12,248,10],[310,0,247,11],[311,0,246,33],[311,3,246,15],[311,4,246,0]],"functionMap":{"names":["_extends","<anonymous>","<global>","_defineProperty","DrawerView","constructor","_defineProperty$argument_2","routes.map$argument_0","getDerivedStateFromProps","componentDidMount","componentDidUpdate","componentWillUnmount","getDrawerBackgroundColor","getOverlayColor","render"],"mappings":"AAA,kDC,gOD,2CE;ACE,iND;eEe;ECC;yCCY;KDS;8CCE;KDO;+CCE;KDO;yCCE;KDQ;kDCE;KDS;2CCE;sBCuB;SDmB;KDE;iDCE;KDG;GDC;EIE;GJQ;EKE;GLO;EME;GNW;EOE;GPE;EQE;GRU;ESE;GTU;EUE;GV2C;CFE"}},"type":"js/module"}]}