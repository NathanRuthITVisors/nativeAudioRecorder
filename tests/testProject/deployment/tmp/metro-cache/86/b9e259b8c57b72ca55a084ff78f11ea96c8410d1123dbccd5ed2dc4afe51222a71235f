{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react-navigation","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[3], \"react-navigation\");\n\n  var DrawerActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"./DrawerActions\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && typeof route.index === 'number' && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _reactNavigation.SwitchRouter)(routeConfigs, config);\n    return _objectSpread(_objectSpread({}, switchRouter), {}, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return DrawerActions.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return DrawerActions.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return DrawerActions.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread(_objectSpread({}, switchRouter.getStateForAction(action, undefined)), {}, {\n            isDrawerOpen: false\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === DrawerActions.CLOSE_DRAWER || action.type === _reactNavigation.NavigationActions.BACK && state.isDrawerOpen) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              isDrawerOpen: false\n            });\n          }\n\n          if (action.type === DrawerActions.OPEN_DRAWER) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              isDrawerOpen: true\n            });\n          }\n\n          if (action.type === DrawerActions.TOGGLE_DRAWER) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              isDrawerOpen: !state.isDrawerOpen\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && state.isDrawerOpen) {\n            return _objectSpread(_objectSpread({}, switchedState), {}, {\n              isDrawerOpen: false\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","lineCount":115,"map":[[13,0,1,0],[15,0,2,0],[21,0,4,0],[21,11,4,9,"withDefaultValue"],[21,27,4,0],[21,28,4,26,"obj"],[21,31,4,0],[21,33,4,31,"key"],[21,36,4,0],[21,38,4,36,"defaultValue"],[21,50,4,0],[21,52,4,50],[22,0,6,2],[22,8,6,6,"obj"],[22,11,6,9],[22,12,6,10,"hasOwnProperty"],[22,26,6,6],[22,27,6,25,"key"],[22,30,6,6],[22,35,6,33],[22,42,6,40,"obj"],[22,45,6,43],[22,46,6,44,"key"],[22,49,6,43],[22,50,6,33],[22,55,6,53],[22,66,6,2],[22,68,6,66],[23,0,7,4],[23,13,7,11,"obj"],[23,16,7,4],[24,0,8,3],[26,0,11,2,"obj"],[26,4,11,2,"obj"],[26,7,11,5],[26,8,11,6,"key"],[26,11,11,5],[26,12,11,2],[26,15,11,13,"defaultValue"],[26,27,11,2],[27,0,12,2],[27,11,12,9,"obj"],[27,14,12,2],[28,0,13,1],[30,0,15,0],[30,6,15,6,"getActiveRouteKey"],[30,23,15,23],[30,26,15,26],[30,35,15,6,"getActiveRouteKey"],[30,52,15,26],[30,53,15,26,"route"],[30,58,15,31],[30,60,15,35],[31,0,16,2],[31,8,16,6,"route"],[31,13,16,11],[31,14,16,12,"routes"],[31,20,16,6],[31,24,16,22],[31,31,16,29,"route"],[31,36,16,34],[31,37,16,35,"index"],[31,42,16,22],[31,47,16,45],[31,55,16,6],[31,59,16,57,"route"],[31,64,16,62],[31,65,16,63,"routes"],[31,71,16,57],[31,72,16,70,"route"],[31,77,16,75],[31,78,16,76,"index"],[31,83,16,57],[31,84,16,2],[31,86,16,84],[32,0,17,4],[32,13,17,11,"getActiveRouteKey"],[32,30,17,28],[32,31,17,29,"route"],[32,36,17,34],[32,37,17,35,"routes"],[32,43,17,29],[32,44,17,42,"route"],[32,49,17,47],[32,50,17,48,"index"],[32,55,17,29],[32,56,17,28],[32,57,17,4],[33,0,18,3],[35,0,20,2],[35,11,20,9,"route"],[35,16,20,14],[35,17,20,15,"key"],[35,20,20,2],[36,0,21,1],[36,3,15,0],[38,17,23,16],[38,35,23,17,"routeConfigs"],[38,47,23,16],[38,49,23,47],[39,0,23,47],[39,8,23,31,"config"],[39,14,23,47],[39,85,23,40],[39,87,23,47],[40,0,24,2,"config"],[40,4,24,2,"config"],[40,10,24,8],[40,31,24,16,"config"],[40,37,24,8],[40,38,24,2],[41,0,26,2,"config"],[41,4,26,2,"config"],[41,10,26,8],[41,13,26,11,"withDefaultValue"],[41,29,26,27],[41,30,26,28,"config"],[41,36,26,27],[41,38,26,36],[41,51,26,27],[41,53,26,51,"config"],[41,59,26,57],[41,60,26,58,"unmountInactiveRoutes"],[41,81,26,51],[41,84,26,82],[41,88,26,51],[41,91,26,89],[41,92,26,90],[41,93,26,91,"config"],[41,99,26,97],[41,100,26,98,"resetOnBlur"],[41,111,26,27],[41,112,26,2],[42,0,27,2,"config"],[42,4,27,2,"config"],[42,10,27,8],[42,13,27,11,"withDefaultValue"],[42,29,27,27],[42,30,27,28,"config"],[42,36,27,27],[42,38,27,36],[42,52,27,27],[42,54,27,52],[42,68,27,27],[42,69,27,2],[43,0,28,2],[43,8,28,8,"switchRouter"],[43,20,28,20],[43,23,28,23],[43,58,28,36,"routeConfigs"],[43,70,28,23],[43,72,28,50,"config"],[43,78,28,23],[43,79,28,2],[44,0,29,2],[44,43,29,14,"switchRouter"],[44,55,29,2],[45,0,31,4,"getActionCreators"],[45,6,31,4,"getActionCreators"],[45,23,29,2],[45,52,31,22,"route"],[45,57,29,2],[45,59,31,29,"navStateKey"],[45,70,29,2],[45,72,31,42],[46,0,32,6],[47,0,33,8,"openDrawer"],[47,10,33,8,"openDrawer"],[47,20,33,18],[47,22,33,20],[48,0,33,20],[48,19,33,26,"DrawerActions"],[48,32,33,39],[48,33,33,40,"openDrawer"],[48,43,33,26],[48,44,33,51],[49,0,34,10,"key"],[49,14,34,10,"key"],[49,17,34,13],[49,19,34,15,"navStateKey"],[50,0,33,51],[50,13,33,26],[50,14,33,20],[51,0,33,20],[51,11,32,6],[52,0,36,8,"closeDrawer"],[52,10,36,8,"closeDrawer"],[52,21,36,19],[52,23,36,21],[53,0,36,21],[53,19,36,27,"DrawerActions"],[53,32,36,40],[53,33,36,41,"closeDrawer"],[53,44,36,27],[53,45,36,53],[54,0,37,10,"key"],[54,14,37,10,"key"],[54,17,37,13],[54,19,37,15,"navStateKey"],[55,0,36,53],[55,13,36,27],[55,14,36,21],[56,0,36,21],[56,11,32,6],[57,0,39,8,"toggleDrawer"],[57,10,39,8,"toggleDrawer"],[57,22,39,20],[57,24,39,22],[58,0,39,22],[58,19,39,28,"DrawerActions"],[58,32,39,41],[58,33,39,42,"toggleDrawer"],[58,45,39,28],[58,46,39,55],[59,0,40,10,"key"],[59,14,40,10,"key"],[59,17,40,13],[59,19,40,15,"navStateKey"],[60,0,39,55],[60,13,39,28],[60,14,39,22],[61,0,39,22],[62,0,32,6],[62,11,42,11,"switchRouter"],[62,23,42,23],[62,24,42,24,"getActionCreators"],[62,41,42,11],[62,42,42,42,"route"],[62,47,42,11],[62,49,42,49,"navStateKey"],[62,60,42,11],[62,61,32,6],[63,0,44,5],[63,7,29,2],[64,0,46,4,"getStateForAction"],[64,6,46,4,"getStateForAction"],[64,23,29,2],[64,52,46,22,"action"],[64,58,29,2],[64,60,46,30,"state"],[64,65,29,2],[64,67,46,37],[65,0,48,6],[65,12,48,10],[65,13,48,11,"state"],[65,18,48,6],[65,20,48,18],[66,0,49,8],[66,49,49,20,"switchRouter"],[66,61,49,32],[66,62,49,33,"getStateForAction"],[66,79,49,20],[66,80,49,51,"action"],[66,86,49,20],[66,88,49,59,"undefined"],[66,97,49,20],[66,98,49,8],[67,0,50,10,"isDrawerOpen"],[67,12,50,10,"isDrawerOpen"],[67,24,50,22],[67,26,50,24],[68,0,49,8],[69,0,52,7],[71,0,54,6],[71,12,54,12,"isRouterTargeted"],[71,28,54,28],[71,31,54,31,"action"],[71,37,54,37],[71,38,54,38,"key"],[71,41,54,31],[71,45,54,45],[71,49,54,31],[71,53,54,53,"action"],[71,59,54,59],[71,60,54,60,"key"],[71,63,54,53],[71,68,54,68,"state"],[71,73,54,73],[71,74,54,74,"key"],[71,77,54,6],[73,0,56,6],[73,12,56,10,"isRouterTargeted"],[73,28,56,6],[73,30,56,28],[74,0,58,8],[74,14,58,12,"action"],[74,20,58,18],[74,21,58,19,"type"],[74,25,58,12],[74,30,58,28,"DrawerActions"],[74,43,58,41],[74,44,58,42,"CLOSE_DRAWER"],[74,56,58,12],[74,60,58,58,"action"],[74,66,58,64],[74,67,58,65,"type"],[74,71,58,58],[74,76,58,74,"NavigationActions"],[74,111,58,92,"BACK"],[74,115,58,58],[74,119,58,100,"state"],[74,124,58,105],[74,125,58,106,"isDrawerOpen"],[74,137,58,8],[74,139,58,120],[75,0,59,10],[75,51,59,22,"state"],[75,56,59,10],[76,0,60,12,"isDrawerOpen"],[76,14,60,12,"isDrawerOpen"],[76,26,60,24],[76,28,60,26],[77,0,59,10],[78,0,62,9],[80,0,64,8],[80,14,64,12,"action"],[80,20,64,18],[80,21,64,19,"type"],[80,25,64,12],[80,30,64,28,"DrawerActions"],[80,43,64,41],[80,44,64,42,"OPEN_DRAWER"],[80,55,64,8],[80,57,64,55],[81,0,65,10],[81,51,65,22,"state"],[81,56,65,10],[82,0,66,12,"isDrawerOpen"],[82,14,66,12,"isDrawerOpen"],[82,26,66,24],[82,28,66,26],[83,0,65,10],[84,0,68,9],[86,0,70,8],[86,14,70,12,"action"],[86,20,70,18],[86,21,70,19,"type"],[86,25,70,12],[86,30,70,28,"DrawerActions"],[86,43,70,41],[86,44,70,42,"TOGGLE_DRAWER"],[86,57,70,8],[86,59,70,57],[87,0,71,10],[87,51,71,22,"state"],[87,56,71,10],[88,0,72,12,"isDrawerOpen"],[88,14,72,12,"isDrawerOpen"],[88,26,72,24],[88,28,72,26],[88,29,72,27,"state"],[88,34,72,32],[88,35,72,33,"isDrawerOpen"],[89,0,71,10],[90,0,74,9],[91,0,75,7],[93,0,78,6],[93,12,78,12,"switchedState"],[93,25,78,25],[93,28,78,28,"switchRouter"],[93,40,78,40],[93,41,78,41,"getStateForAction"],[93,58,78,28],[93,59,78,59,"action"],[93,65,78,28],[93,67,78,67,"state"],[93,72,78,28],[93,73,78,6],[95,0,80,6],[95,12,80,10,"switchedState"],[95,25,80,23],[95,30,80,28],[95,34,80,6],[95,36,80,34],[96,0,82,8],[96,17,82,15],[96,21,82,8],[97,0,83,7],[99,0,86,6],[99,12,86,10,"switchedState"],[99,25,86,23],[99,30,86,28,"state"],[99,35,86,6],[99,37,86,35],[100,0,88,8],[100,14,88,12,"getActiveRouteKey"],[100,31,88,29],[100,32,88,30,"switchedState"],[100,45,88,29],[100,46,88,12],[100,51,88,49,"getActiveRouteKey"],[100,68,88,66],[100,69,88,67,"state"],[100,74,88,66],[100,75,88,12],[100,79,88,77,"state"],[100,84,88,82],[100,85,88,83,"isDrawerOpen"],[100,97,88,8],[100,99,88,97],[101,0,89,10],[101,51,89,22,"switchedState"],[101,64,89,10],[102,0,90,12,"isDrawerOpen"],[102,14,90,12,"isDrawerOpen"],[102,26,90,24],[102,28,90,26],[103,0,89,10],[104,0,92,9],[106,0,97,8],[106,17,97,15,"switchedState"],[106,30,97,8],[107,0,98,7],[109,0,100,6],[109,15,100,13,"state"],[109,20,100,6],[110,0,101,5],[111,0,29,2],[112,0,104,1],[112,3]],"functionMap":{"names":["<global>","withDefaultValue","getActiveRouteKey","<anonymous>","getActionCreators","openDrawer","closeDrawer","toggleDrawer","getStateForAction"],"mappings":"AAA;ACG;CDS;0BEE;CFM;gBGE;ICQ;oBCE;UDE;qBEC;UFE;sBGC;UHE;KDG;IKE;KLuD;CHG"}},"type":"js/module"}]}