{"dependencies":[],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){var t=Object.prototype.hasOwnProperty,n=function(){};function l(t){return'function'==typeof t?t:n}function u(t,n){return function(l,u,o){l.type===n&&t.call(this,l,u,o)}}function o(n,l){var u=l.structure,o=[];for(var c in u)if(!1!==t.call(u,c)){var f=u[c],s={name:c,type:!1,nullable:!1};Array.isArray(u[c])||(f=[u[c]]);for(var v=0;v<f.length;v++){var h=f[v];null===h?s.nullable=!0:'string'==typeof h?s.type='node':Array.isArray(h)&&(s.type='list')}s.type&&o.push(s)}return o.length?{context:l.walkContext,fields:o}:null}function c(n){var l={};for(var u in n.node)if(t.call(n.node,u)){var c=n.node[u];if(!c.structure)throw new Error('Missed `structure` field in `'+u+'` node type definition');l[u]=o(0,c)}return l}function f(t,n){var l=t.fields.slice(),u=t.context,o='string'==typeof u;return n&&l.reverse(),function(t,c,f){var s;o&&(s=c[u],c[u]=t);for(var v=0;v<l.length;v++){var h=l[v],y=t[h.name];h.nullable&&!y||('list'===h.type?n?y.forEachRight(f):y.forEach(f):f(y))}o&&(c[u]=s)}}function s(t){return{Atrule:{StyleSheet:t.StyleSheet,Atrule:t.Atrule,Rule:t.Rule,Block:t.Block},Rule:{StyleSheet:t.StyleSheet,Atrule:t.Atrule,Rule:t.Rule,Block:t.Block},Declaration:{StyleSheet:t.StyleSheet,Atrule:t.Atrule,Rule:t.Rule,Block:t.Block,DeclarationList:t.DeclarationList}}}m.exports=function(o){var v=c(o),h={},y={};for(var p in v)t.call(v,p)&&null!==v[p]&&(h[p]=f(v[p],!1),y[p]=f(v[p],!0));var w=s(h),A=s(y),S=function(t,o){var c=n,f=n,s=h,p={root:t,stylesheet:null,atrule:null,atrulePrelude:null,rule:null,selector:null,block:null,declaration:null,function:null};if('function'==typeof o)c=o;else if(o&&(c=l(o.enter),f=l(o.leave),o.reverse&&(s=y),o.visit)){if(w.hasOwnProperty(o.visit))s=o.reverse?A[o.visit]:w[o.visit];else if(!v.hasOwnProperty(o.visit))throw new Error('Bad value `'+o.visit+'` for `visit` option (should be: '+Object.keys(v).join(', ')+')');c=u(c,o.visit),f=u(f,o.visit)}if(c===n&&f===n)throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');if(o.reverse){var S=c;c=f,f=S}!(function t(n,l,u){c.call(p,n,l,u),s.hasOwnProperty(n.type)&&s[n.type](n,p,t),f.call(p,n,l,u)})(t)};return S.find=function(t,n){var l=null;return S(t,function(t,u,o){null===l&&n.call(this,t,u,o)&&(l=t)}),l},S.findLast=function(t,n){var l=null;return S(t,{reverse:!0,enter:function(t,u,o){null===l&&n.call(this,t,u,o)&&(l=t)}}),l},S.findAll=function(t,n){var l=[];return S(t,function(t,u,o){n.call(this,t,u,o)&&l.push(t)}),l},S}});","lineCount":1,"map":[[1,28,1,0],[1,32,1,4,"hasOwnProperty"],[1,34,1,21,"Object"],[1,41,1,28,"prototype"],[1,51,1,38,"hasOwnProperty"],[1,66,2,4,"noop"],[1,68,2,11],[1,81,4,0],[1,90,4,9,"ensureFunction"],[1,92,4,24,"value"],[1,95,5,4],[1,101,5,28],[1,120,5,18,"value"],[1,122,5,41,"value"],[1,124,5,49,"noop"],[1,126,8,0],[1,135,8,9,"invokeForType"],[1,137,8,23,"fn"],[1,139,8,27,"type"],[1,142,9,4],[1,149,9,11],[1,158,9,20,"node"],[1,160,9,26,"item"],[1,162,9,32,"list"],[1,165,10,12,"node"],[1,167,10,17,"type"],[1,174,10,26,"type"],[1,177,11,12,"fn"],[1,179,11,15,"call"],[1,184,11,20,"this"],[1,189,11,26,"node"],[1,191,11,32,"item"],[1,193,11,38,"list"],[1,197,16,0],[1,206,16,9,"getWalkersFromStructure"],[1,208,16,33,"name"],[1,210,16,39,"nodeType"],[1,213,17,4],[1,217,17,8,"structure"],[1,219,17,20,"nodeType"],[1,221,17,29,"structure"],[1,231,18,8,"walkers"],[1,236,20,4],[1,240,20,9],[1,244,20,13,"key"],[1,249,20,20,"structure"],[1,251,21,8],[1,255,21,52],[1,259,21,12,"hasOwnProperty"],[1,261,21,27,"call"],[1,266,21,32,"structure"],[1,268,21,43,"key"],[1,271,21,8],[1,272,25,8],[1,276,25,12,"fieldTypes"],[1,278,25,25,"structure"],[1,280,25,35,"key"],[1,283,26,12,"walker"],[1,286,27,12,"name"],[1,291,27,18,"key"],[1,293,28,12,"type"],[1,299,28,18],[1,301,29,12,"nullable"],[1,311,29,22],[1,314,32,13,"Array"],[1,320,32,19,"isArray"],[1,328,32,27,"structure"],[1,330,32,37,"key"],[1,336,33,12,"fieldTypes"],[1,339,33,26,"structure"],[1,341,33,36,"key"],[1,346,36,8],[1,350,36,13],[1,354,36,17,"i"],[1,356,36,21],[1,358,36,24,"i"],[1,360,36,28,"fieldTypes"],[1,362,36,39,"length"],[1,369,36,47,"i"],[1,373,36,52],[1,374,37,12],[1,378,37,16,"fieldType"],[1,380,37,28,"fieldTypes"],[1,382,37,39,"i"],[1,385,38,30],[1,392,38,16,"fieldType"],[1,394,39,16,"walker"],[1,396,39,23,"nullable"],[1,406,39,34],[1,408,40,44],[1,425,40,30,"fieldType"],[1,427,41,16,"walker"],[1,429,41,23,"type"],[1,434,41,30],[1,441,42,23,"Array"],[1,447,42,29,"isArray"],[1,455,42,37,"fieldType"],[1,460,43,16,"walker"],[1,462,43,23,"type"],[1,467,43,30],[1,475,47,12,"walker"],[1,477,47,19,"type"],[1,483,48,12,"walkers"],[1,485,48,20,"push"],[1,490,48,25,"walker"],[1,493,52,4],[1,500,52,8,"walkers"],[1,502,52,16,"length"],[1,510,54,12,"context"],[1,518,54,21,"nodeType"],[1,520,54,30,"walkContext"],[1,532,55,12,"fields"],[1,539,55,20,"walkers"],[1,542,59,11],[1,547,62,0],[1,556,62,9,"getTypesFromConfig"],[1,558,62,28,"config"],[1,561,63,4],[1,565,63,8,"types"],[1,570,65,4],[1,574,65,9],[1,578,65,13,"name"],[1,583,65,21,"config"],[1,585,65,28,"node"],[1,590,66,8],[1,593,66,12,"hasOwnProperty"],[1,595,66,27,"call"],[1,600,66,32,"config"],[1,602,66,39,"node"],[1,607,66,45,"name"],[1,610,66,52],[1,611,67,12],[1,615,67,16,"nodeType"],[1,617,67,27,"config"],[1,619,67,34,"node"],[1,624,67,39,"name"],[1,627,69,12],[1,631,69,17,"nodeType"],[1,633,69,26,"structure"],[1,643,70,16],[1,649,70,22],[1,653,70,26,"Error"],[1,659,70,32],[1,691,70,66,"name"],[1,693,70,73],[1,719,73,12,"types"],[1,721,73,18,"name"],[1,724,73,26,"getWalkersFromStructure"],[1,726,73,50,"name"],[1,728,73,56,"nodeType"],[1,731,77,4],[1,738,77,11,"types"],[1,740,80,0],[1,749,80,9,"createTypeIterator"],[1,751,80,28,"config"],[1,753,80,36,"reverse"],[1,756,81,4],[1,760,81,8,"fields"],[1,762,81,17,"config"],[1,764,81,24,"fields"],[1,771,81,31,"slice"],[1,779,82,8,"contextName"],[1,781,82,22,"config"],[1,783,82,29,"context"],[1,791,83,8,"useContext"],[1,793,83,44],[1,810,83,28,"contextName"],[1,812,89,4],[1,819,85,8,"reverse"],[1,822,86,8,"fields"],[1,824,86,15,"reverse"],[1,834,89,11],[1,843,89,20,"node"],[1,845,89,26,"context"],[1,847,89,35,"walk"],[1,850,90,8],[1,854,90,12,"prevContextValue"],[1,856,92,12,"useContext"],[1,860,93,12,"prevContextValue"],[1,862,93,31,"context"],[1,864,93,39,"contextName"],[1,867,94,12,"context"],[1,869,94,20,"contextName"],[1,872,94,35,"node"],[1,875,97,8],[1,879,97,13],[1,883,97,17,"i"],[1,885,97,21],[1,887,97,24,"i"],[1,889,97,28,"fields"],[1,891,97,35,"length"],[1,898,97,43,"i"],[1,902,97,48],[1,903,98,12],[1,907,98,16,"field"],[1,909,98,24,"fields"],[1,911,98,31,"i"],[1,914,99,16,"ref"],[1,916,99,22,"node"],[1,918,99,27,"field"],[1,920,99,33,"name"],[1,926,101,17,"field"],[1,928,101,23,"nullable"],[1,939,101,35,"ref"],[1,943,102,35],[1,952,102,20,"field"],[1,954,102,26,"type"],[1,959,103,24,"reverse"],[1,961,104,24,"ref"],[1,963,104,28,"forEachRight"],[1,976,104,41,"walk"],[1,979,106,24,"ref"],[1,981,106,28,"forEach"],[1,989,106,36,"walk"],[1,992,109,20,"walk"],[1,994,109,25,"ref"],[1,998,114,12,"useContext"],[1,1002,115,12,"context"],[1,1004,115,20,"contextName"],[1,1007,115,35,"prevContextValue"],[1,1011,120,0],[1,1020,120,9,"createFastTraveralMap"],[1,1022,120,31,"iterators"],[1,1025,121,4],[1,1032,122,8,"Atrule"],[1,1040,123,12,"StyleSheet"],[1,1051,123,24,"iterators"],[1,1053,123,34,"StyleSheet"],[1,1064,124,12,"Atrule"],[1,1071,124,20,"iterators"],[1,1073,124,30,"Atrule"],[1,1080,125,12,"Rule"],[1,1085,125,18,"iterators"],[1,1087,125,28,"Rule"],[1,1092,126,12,"Block"],[1,1098,126,19,"iterators"],[1,1100,126,29,"Block"],[1,1107,128,8,"Rule"],[1,1113,129,12,"StyleSheet"],[1,1124,129,24,"iterators"],[1,1126,129,34,"StyleSheet"],[1,1137,130,12,"Atrule"],[1,1144,130,20,"iterators"],[1,1146,130,30,"Atrule"],[1,1153,131,12,"Rule"],[1,1158,131,18,"iterators"],[1,1160,131,28,"Rule"],[1,1165,132,12,"Block"],[1,1171,132,19,"iterators"],[1,1173,132,29,"Block"],[1,1180,134,8,"Declaration"],[1,1193,135,12,"StyleSheet"],[1,1204,135,24,"iterators"],[1,1206,135,34,"StyleSheet"],[1,1217,136,12,"Atrule"],[1,1224,136,20,"iterators"],[1,1226,136,30,"Atrule"],[1,1233,137,12,"Rule"],[1,1238,137,18,"iterators"],[1,1240,137,28,"Rule"],[1,1245,138,12,"Block"],[1,1251,138,19,"iterators"],[1,1253,138,29,"Block"],[1,1259,139,12,"DeclarationList"],[1,1275,139,29,"iterators"],[1,1277,139,39,"DeclarationList"],[1,1295,144,0,"module"],[1,1297,144,7,"exports"],[1,1305,144,17],[1,1314,144,39,"config"],[1,1317,145,4],[1,1321,145,8,"types"],[1,1323,145,16,"getTypesFromConfig"],[1,1325,145,35,"config"],[1,1328,146,8,"iteratorsNatural"],[1,1333,147,8,"iteratorsReverse"],[1,1338,149,4],[1,1342,149,9],[1,1346,149,13,"name"],[1,1351,149,21,"types"],[1,1353,150,12,"hasOwnProperty"],[1,1355,150,27,"call"],[1,1360,150,32,"types"],[1,1362,150,39,"name"],[1,1366,150,64],[1,1373,150,48,"types"],[1,1375,150,54,"name"],[1,1380,151,12,"iteratorsNatural"],[1,1382,151,29,"name"],[1,1385,151,37,"createTypeIterator"],[1,1387,151,56,"types"],[1,1389,151,62,"name"],[1,1393,151,69],[1,1396,152,12,"iteratorsReverse"],[1,1398,152,29,"name"],[1,1401,152,37,"createTypeIterator"],[1,1403,152,56,"types"],[1,1405,152,62,"name"],[1,1409,152,69],[1,1413,156,4],[1,1417,156,8,"fastTraversalIteratorsNatural"],[1,1419,156,40,"createFastTraveralMap"],[1,1421,156,62,"iteratorsNatural"],[1,1424,157,8,"fastTraversalIteratorsReverse"],[1,1426,157,40,"createFastTraveralMap"],[1,1428,157,62,"iteratorsReverse"],[1,1431,159,8,"walk"],[1,1433,159,15],[1,1442,159,24,"root"],[1,1444,159,30,"options"],[1,1447,170,8],[1,1451,170,12,"enter"],[1,1453,170,20,"noop"],[1,1455,171,12,"leave"],[1,1457,171,20,"noop"],[1,1459,172,12,"iterators"],[1,1461,172,24,"iteratorsNatural"],[1,1463,173,12,"context"],[1,1466,174,12,"root"],[1,1471,174,18,"root"],[1,1473,175,12,"stylesheet"],[1,1484,175,24],[1,1489,176,12,"atrule"],[1,1496,176,20],[1,1501,177,12,"atrulePrelude"],[1,1515,177,27],[1,1520,178,12,"rule"],[1,1525,178,18],[1,1530,179,12,"selector"],[1,1539,179,22],[1,1544,180,12,"block"],[1,1550,180,19],[1,1555,181,12,"declaration"],[1,1567,181,25],[1,1572,182,12,"function"],[1,1581,182,22],[1,1587,185,8],[1,1590,185,31],[1,1609,185,19,"options"],[1,1611,186,12,"enter"],[1,1613,186,20,"options"],[1,1620,187,15],[1,1623,187,19,"options"],[1,1627,188,12,"enter"],[1,1629,188,20,"ensureFunction"],[1,1631,188,35,"options"],[1,1633,188,43,"enter"],[1,1640,189,12,"leave"],[1,1642,189,20,"ensureFunction"],[1,1644,189,35,"options"],[1,1646,189,43,"leave"],[1,1653,191,16,"options"],[1,1655,191,24,"reverse"],[1,1665,192,16,"iterators"],[1,1667,192,28,"iteratorsReverse"],[1,1670,195,16,"options"],[1,1672,195,24,"visit"],[1,1679,195,31],[1,1680,196,16],[1,1683,196,20,"fastTraversalIteratorsNatural"],[1,1685,196,50,"hasOwnProperty"],[1,1700,196,65,"options"],[1,1702,196,73,"visit"],[1,1709,197,20,"iterators"],[1,1711,197,32,"options"],[1,1713,197,40,"reverse"],[1,1721,198,26,"fastTraversalIteratorsReverse"],[1,1723,198,56,"options"],[1,1725,198,64,"visit"],[1,1732,199,26,"fastTraversalIteratorsNatural"],[1,1734,199,56,"options"],[1,1736,199,64,"visit"],[1,1748,200,23],[1,1752,200,28,"types"],[1,1754,200,34,"hasOwnProperty"],[1,1769,200,49,"options"],[1,1771,200,57,"visit"],[1,1778,201,20],[1,1784,201,26],[1,1788,201,30,"Error"],[1,1794,201,36],[1,1808,201,52,"options"],[1,1810,201,60,"visit"],[1,1816,201,68],[1,1852,201,106,"Object"],[1,1859,201,113,"keys"],[1,1864,201,118,"types"],[1,1867,201,125,"join"],[1,1872,201,130],[1,1878,201,138],[1,1883,204,16,"enter"],[1,1885,204,24,"invokeForType"],[1,1887,204,38,"enter"],[1,1889,204,45,"options"],[1,1891,204,53,"visit"],[1,1898,205,16,"leave"],[1,1900,205,24,"invokeForType"],[1,1902,205,38,"leave"],[1,1904,205,45,"options"],[1,1906,205,53,"visit"],[1,1913,209,8],[1,1916,209,12,"enter"],[1,1920,209,22,"noop"],[1,1923,209,30,"leave"],[1,1927,209,40,"noop"],[1,1929,210,12],[1,1935,210,18],[1,1939,210,22,"Error"],[1,1945,210,28],[1,2025,214,8],[1,2028,214,12,"options"],[1,2030,214,20,"reverse"],[1,2038,214,29],[1,2039,215,12],[1,2043,215,16,"tmp"],[1,2045,215,22,"enter"],[1,2047,216,12,"enter"],[1,2049,216,20,"leave"],[1,2051,217,12,"leave"],[1,2053,217,20,"tmp"],[1,2057,160,8],[1,2066,160,17,"walkNode"],[1,2068,160,26,"node"],[1,2070,160,32,"item"],[1,2072,160,38,"list"],[1,2075,161,12,"enter"],[1,2077,161,18,"call"],[1,2082,161,23,"context"],[1,2084,161,32,"node"],[1,2086,161,38,"item"],[1,2088,161,44,"list"],[1,2091,163,16,"iterators"],[1,2093,163,26,"hasOwnProperty"],[1,2108,163,41,"node"],[1,2110,163,46,"type"],[1,2117,164,16,"iterators"],[1,2119,164,26,"node"],[1,2121,164,31,"type"],[1,2127,164,37,"node"],[1,2129,164,43,"context"],[1,2131,164,52,"walkNode"],[1,2134,167,12,"leave"],[1,2136,167,18,"call"],[1,2141,167,23,"context"],[1,2143,167,32,"node"],[1,2145,167,38,"item"],[1,2147,167,44,"list"],[1,2151,220,8,"walkNode"],[1,2152,220,17,"root"],[1,2156,262,4],[1,2163,223,4,"walk"],[1,2165,223,9,"find"],[1,2170,223,16],[1,2179,223,25,"ast"],[1,2181,223,30,"fn"],[1,2184,224,8],[1,2188,224,12,"found"],[1,2190,224,20],[1,2195,232,8],[1,2202,226,8,"walk"],[1,2204,226,13,"ast"],[1,2206,226,18],[1,2215,226,27,"node"],[1,2217,226,33,"item"],[1,2219,226,39,"list"],[1,2222,227,26],[1,2229,227,16,"found"],[1,2232,227,34,"fn"],[1,2234,227,37,"call"],[1,2239,227,42,"this"],[1,2244,227,48,"node"],[1,2246,227,54,"item"],[1,2248,227,60,"list"],[1,2253,228,16,"found"],[1,2255,228,24,"node"],[1,2260,232,15,"found"],[1,2263,235,4,"walk"],[1,2265,235,9,"findLast"],[1,2274,235,20],[1,2283,235,29,"ast"],[1,2285,235,34,"fn"],[1,2288,236,8],[1,2292,236,12,"found"],[1,2294,236,20],[1,2299,247,8],[1,2306,238,8,"walk"],[1,2308,238,13,"ast"],[1,2311,239,12,"reverse"],[1,2320,239,21],[1,2322,240,12,"enter"],[1,2328,240,19],[1,2337,240,28,"node"],[1,2339,240,34,"item"],[1,2341,240,40,"list"],[1,2344,241,30],[1,2351,241,20,"found"],[1,2354,241,38,"fn"],[1,2356,241,41,"call"],[1,2361,241,46,"this"],[1,2366,241,52,"node"],[1,2368,241,58,"item"],[1,2370,241,64,"list"],[1,2375,242,20,"found"],[1,2377,242,28,"node"],[1,2383,247,15,"found"],[1,2386,250,4,"walk"],[1,2388,250,9,"findAll"],[1,2396,250,19],[1,2405,250,28,"ast"],[1,2407,250,33,"fn"],[1,2410,251,8],[1,2414,251,12,"found"],[1,2419,259,8],[1,2426,253,8,"walk"],[1,2428,253,13,"ast"],[1,2430,253,18],[1,2439,253,27,"node"],[1,2441,253,33,"item"],[1,2443,253,39,"list"],[1,2446,254,16,"fn"],[1,2448,254,19,"call"],[1,2453,254,24,"this"],[1,2458,254,30,"node"],[1,2460,254,36,"item"],[1,2462,254,42,"list"],[1,2466,255,16,"found"],[1,2468,255,22,"push"],[1,2473,255,27,"node"],[1,2478,259,15,"found"],[1,2481,262,11,"walk"]],"functionMap":{"names":["<global>","noop","ensureFunction","invokeForType","<anonymous>","getWalkersFromStructure","getTypesFromConfig","createTypeIterator","createFastTraveralMap","createWalker","walk","walkNode","walk.find","walk$argument_1","walk.findLast","walk$argument_1.enter","walk.findAll"],"mappings":"AAA;WCC,aD;AEE;CFE;AGE;WCC;KDI;CHC;AKE;CL4C;AME;CNgB;AOE;WHS;KG4B;CPC;AQE;CRsB;iBSE;eCe;QCC;SDQ;KDqD;gBGE;kBCG;SDI;KHG;oBKE;mBCK;aDI;KLI;mBOE;kBHG;SGI;KPG;CTG"}},"type":"js/module"}]}