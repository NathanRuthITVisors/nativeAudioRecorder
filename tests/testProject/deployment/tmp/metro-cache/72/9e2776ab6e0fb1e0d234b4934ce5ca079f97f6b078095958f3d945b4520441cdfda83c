{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./StackActions","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"../StateUtils","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./KeyGenerator","data":{"isAsync":false}},{"name":"./pathUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"../NavigationActions\"));\n\n  var StackActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"./StackActions\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./createConfigGetter\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./getScreenForRouteName\"));\n\n  var _StateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../StateUtils\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./validateRouteConfigMap\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../utils/invariant\"));\n\n  var _KeyGenerator = _$$_REQUIRE(_dependencyMap[11], \"./KeyGenerator\");\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[12], \"./pathUtils\");\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function behavesLikePushAction(action) {\n    return action.type === NavigationActions.NAVIGATE || action.type === StackActions.PUSH;\n  }\n\n  var defaultActionCreators = function defaultActionCreators() {\n    return {};\n  };\n\n  function isResetToRootStack(action) {\n    return action.type === StackActions.RESET && action.key === null;\n  }\n\n  var _default = function _default(routeConfigs) {\n    var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var childRouters = {};\n    var routeNames = Object.keys(routeConfigs);\n    routeNames.forEach(function (routeName) {\n      var routeConfig = routeConfigs[routeName];\n      var screen = routeConfig && routeConfig.screen ? routeConfig.screen : routeConfig;\n\n      if (screen && screen.router) {\n        childRouters[routeName] = screen.router;\n      } else {\n        childRouters[routeName] = null;\n      }\n    });\n    var initialRouteParams = stackConfig.initialRouteParams;\n    var getCustomActionCreators = stackConfig.getCustomActionCreators || defaultActionCreators;\n    var initialRouteName = stackConfig.initialRouteName || routeNames[0];\n    var initialChildRouter = childRouters[initialRouteName];\n\n    function getInitialState(action) {\n      var route = {};\n      var childRouter = childRouters[action.routeName];\n\n      if (behavesLikePushAction(action) && childRouter !== undefined) {\n        var childState = {};\n\n        if (childRouter !== null) {\n          var childAction = action.action || NavigationActions.init({\n            params: action.params\n          });\n          childState = childRouter.getStateForAction(childAction);\n        }\n\n        return {\n          key: 'StackRouterRoot',\n          isTransitioning: false,\n          index: 0,\n          routes: [_objectSpread(_objectSpread({\n            params: action.params\n          }, childState), {}, {\n            key: action.key || (0, _KeyGenerator.generateKey)(),\n            routeName: action.routeName\n          })]\n        };\n      }\n\n      if (initialChildRouter) {\n        route = initialChildRouter.getStateForAction(NavigationActions.navigate({\n          routeName: initialRouteName,\n          params: initialRouteParams\n        }));\n      }\n\n      var params = (routeConfigs[initialRouteName].params || route.params || action.params || initialRouteParams) && _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, routeConfigs[initialRouteName].params || {}), route.params || {}), action.params || {}), initialRouteParams || {});\n\n      var initialRouteKey = stackConfig.initialRouteKey;\n      route = _objectSpread(_objectSpread(_objectSpread({}, route), params ? {\n        params: params\n      } : {}), {}, {\n        routeName: initialRouteName,\n        key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()\n      });\n      return {\n        key: 'StackRouterRoot',\n        isTransitioning: false,\n        index: 0,\n        routes: [route]\n      };\n    }\n\n    function getParamsForRouteAndAction(routeName, action) {\n      var routeConfig = routeConfigs[routeName];\n\n      if (routeConfig && routeConfig.params) {\n        return _objectSpread(_objectSpread({}, routeConfig.params), action.params);\n      } else {\n        return action.params;\n      }\n    }\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, stackConfig),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    return {\n      childRouters: childRouters,\n      getComponentForState: function getComponentForState(state) {\n        var activeChildRoute = state.routes[state.index];\n        var routeName = activeChildRoute.routeName;\n\n        if (childRouters[routeName]) {\n          return childRouters[routeName].getComponentForState(activeChildRoute);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread(_objectSpread({}, getCustomActionCreators(route, navStateKey)), {}, {\n          pop: function pop(n, params) {\n            return StackActions.pop(_objectSpread({\n              n: n\n            }, params));\n          },\n          popToTop: function popToTop(params) {\n            return StackActions.popToTop(params);\n          },\n          push: function push(routeName, params, action) {\n            return StackActions.push({\n              routeName: routeName,\n              params: params,\n              action: action\n            });\n          },\n          replace: function replace(replaceWith, params, action, newKey) {\n            if (typeof replaceWith === 'string') {\n              return StackActions.replace({\n                routeName: replaceWith,\n                params: params,\n                action: action,\n                key: route.key,\n                newKey: newKey\n              });\n            }\n\n            (0, _invariant.default)(typeof replaceWith === 'object', 'Must replaceWith an object or a string');\n            (0, _invariant.default)(params == null, 'Params must not be provided to .replace() when specifying an object');\n            (0, _invariant.default)(action == null, 'Child action must not be provided to .replace() when specifying an object');\n            (0, _invariant.default)(newKey == null, 'Child action must not be provided to .replace() when specifying an object');\n            return StackActions.replace(replaceWith);\n          },\n          reset: function reset(actions, index) {\n            return StackActions.reset({\n              actions: actions,\n              index: index == null ? actions.length - 1 : index,\n              key: navStateKey\n            });\n          },\n          dismiss: function dismiss() {\n            return NavigationActions.back({\n              key: navStateKey\n            });\n          }\n        });\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return getInitialState(action);\n        }\n\n        var activeChildRoute = state.routes[state.index];\n\n        if (!isResetToRootStack(action) && action.type !== NavigationActions.NAVIGATE) {\n          var activeChildRouter = childRouters[activeChildRoute.routeName];\n\n          if (activeChildRouter) {\n            var route = activeChildRouter.getStateForAction(action, activeChildRoute);\n\n            if (route !== null && route !== activeChildRoute) {\n              return _StateUtils.default.replaceAt(state, activeChildRoute.key, route, action.type === NavigationActions.SET_PARAMS);\n            }\n          }\n        } else if (action.type === NavigationActions.NAVIGATE) {\n          for (var _iterator = _createForOfIteratorHelperLoose(state.routes.slice().reverse()), _step; !(_step = _iterator()).done;) {\n            var childRoute = _step.value;\n            var childRouter = childRouters[childRoute.routeName];\n            var childAction = action.routeName === childRoute.routeName && action.action ? action.action : action;\n\n            if (childRouter) {\n              var nextRouteState = childRouter.getStateForAction(childAction, childRoute);\n\n              if (nextRouteState === null || nextRouteState !== childRoute) {\n                var newState = _StateUtils.default.replaceAndPrune(state, nextRouteState ? nextRouteState.key : childRoute.key, nextRouteState ? nextRouteState : childRoute);\n\n                return _objectSpread(_objectSpread({}, newState), {}, {\n                  isTransitioning: state.index !== newState.index ? action.immediate !== true : state.isTransitioning\n                });\n              }\n            }\n          }\n        }\n\n        if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined) {\n            var _childRouter = childRouters[action.routeName];\n\n            var _route;\n\n            (0, _invariant.default)(action.type !== StackActions.PUSH || action.key == null, 'StackRouter does not support key on the push action');\n            var lastRouteIndex = state.routes.findIndex(function (r) {\n              if (action.key) {\n                return r.key === action.key;\n              } else {\n                return r.routeName === action.routeName;\n              }\n            });\n\n            if (action.type !== StackActions.PUSH && lastRouteIndex !== -1) {\n              if (state.index === lastRouteIndex && !action.params) {\n                return null;\n              }\n\n              var routes = state.routes.slice(0, lastRouteIndex + 1);\n\n              if (action.params) {\n                var _route2 = state.routes[lastRouteIndex];\n                routes[lastRouteIndex] = _objectSpread(_objectSpread({}, _route2), {}, {\n                  params: _objectSpread(_objectSpread({}, _route2.params), action.params)\n                });\n              }\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : state.isTransitioning,\n                index: lastRouteIndex,\n                routes: routes\n              });\n            }\n\n            if (_childRouter) {\n              var _childAction = action.action || NavigationActions.init({\n                params: getParamsForRouteAndAction(action.routeName, action)\n              });\n\n              _route = _objectSpread(_objectSpread({\n                params: getParamsForRouteAndAction(action.routeName, action)\n              }, _childRouter.getStateForAction(_childAction)), {}, {\n                routeName: action.routeName,\n                key: action.key || (0, _KeyGenerator.generateKey)()\n              });\n            } else {\n              _route = {\n                params: getParamsForRouteAndAction(action.routeName, action),\n                routeName: action.routeName,\n                key: action.key || (0, _KeyGenerator.generateKey)()\n              };\n            }\n\n            return _objectSpread(_objectSpread({}, _StateUtils.default.push(state, _route)), {}, {\n              isTransitioning: action.immediate !== true\n            });\n          } else if (action.type === StackActions.PUSH && childRouters[action.routeName] === undefined) {\n          return state;\n        }\n\n        if (behavesLikePushAction(action)) {\n          var childRouterNames = Object.keys(childRouters);\n\n          for (var i = 0; i < childRouterNames.length; i++) {\n            var childRouterName = childRouterNames[i];\n            var _childRouter2 = childRouters[childRouterName];\n\n            if (_childRouter2) {\n              var initChildRoute = _childRouter2.getStateForAction(NavigationActions.init());\n\n              var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);\n\n              var routeToPush = null;\n\n              if (navigatedChildRoute === null) {\n                routeToPush = initChildRoute;\n              } else if (navigatedChildRoute !== initChildRoute) {\n                routeToPush = navigatedChildRoute;\n              }\n\n              if (routeToPush) {\n                var _route3 = _objectSpread(_objectSpread({}, routeToPush), {}, {\n                  routeName: childRouterName,\n                  key: action.key || (0, _KeyGenerator.generateKey)()\n                });\n\n                return _objectSpread(_objectSpread({}, _StateUtils.default.push(state, _route3)), {}, {\n                  isTransitioning: action.immediate !== true\n                });\n              }\n            }\n          }\n        }\n\n        if (action.type === StackActions.POP_TO_TOP) {\n          if (action.key && state.key !== action.key) {\n            return state;\n          }\n\n          if (state.index > 0) {\n            return _objectSpread(_objectSpread({}, state), {}, {\n              isTransitioning: action.immediate !== true,\n              index: 0,\n              routes: [state.routes[0]]\n            });\n          }\n\n          return state;\n        }\n\n        if (action.type === StackActions.REPLACE) {\n          var routeIndex;\n\n          if (action.key === undefined && state.routes.length) {\n            routeIndex = state.routes.length - 1;\n          } else {\n            routeIndex = state.routes.findIndex(function (r) {\n              return r.key === action.key;\n            });\n          }\n\n          if (routeIndex !== -1) {\n            var _childRouter3 = childRouters[action.routeName];\n            var childState = {};\n\n            if (_childRouter3) {\n              var _childAction2 = action.action || NavigationActions.init({\n                params: getParamsForRouteAndAction(action.routeName, action)\n              });\n\n              childState = _childRouter3.getStateForAction(_childAction2);\n            }\n\n            var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes[routeIndex] = _objectSpread(_objectSpread({\n              params: getParamsForRouteAndAction(action.routeName, action)\n            }, childState), {}, {\n              routeName: action.routeName,\n              key: action.newKey || (0, _KeyGenerator.generateKey)()\n            });\n            return _objectSpread(_objectSpread({}, state), {}, {\n              routes: _routes\n            });\n          }\n        }\n\n        if (action.type === StackActions.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && action.toChildKey === state.routes[state.index].key && state.isTransitioning) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isTransitioning: false\n          });\n        }\n\n        if (action.type === NavigationActions.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var params = _objectSpread(_objectSpread({}, lastRoute.params), action.params);\n\n            var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes2[state.routes.indexOf(lastRoute)] = _objectSpread(_objectSpread({}, lastRoute), {}, {\n              params: params\n            });\n            return _objectSpread(_objectSpread({}, state), {}, {\n              routes: _routes2\n            });\n          }\n        }\n\n        if (action.type === StackActions.RESET) {\n          if (action.key != null && action.key !== state.key) {\n            return state;\n          }\n\n          var newStackActions = action.actions;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            routes: newStackActions.map(function (newStackAction) {\n              var router = childRouters[newStackAction.routeName];\n              var childState = {};\n\n              if (router) {\n                var _childAction3 = newStackAction.action || NavigationActions.init({\n                  params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)\n                });\n\n                childState = router.getStateForAction(_childAction3);\n              }\n\n              return _objectSpread(_objectSpread({\n                params: getParamsForRouteAndAction(newStackAction.routeName, newStackAction)\n              }, childState), {}, {\n                routeName: newStackAction.routeName,\n                key: newStackAction.key || (0, _KeyGenerator.generateKey)()\n              });\n            }),\n            index: action.index\n          });\n        }\n\n        if (action.type === NavigationActions.BACK || action.type === StackActions.POP) {\n          var _key = action.key,\n              n = action.n,\n              immediate = action.immediate,\n              prune = action.prune;\n\n          if (action.type === StackActions.POP && prune === false && _key) {\n            var index = state.routes.findIndex(function (r) {\n              return r.key === _key;\n            });\n\n            if (index > 0) {\n              var count = Math.max(index - (n !== null && n !== void 0 ? n : 1) + 1, 1);\n\n              var _routes3 = state.routes.slice(0, count).concat(state.routes.slice(index + 1));\n\n              if (_routes3.length) {\n                return _objectSpread(_objectSpread({}, state), {}, {\n                  routes: _routes3,\n                  index: _routes3.length - 1,\n                  isTransitioning: immediate !== true\n                });\n              }\n            }\n          } else {\n            var backRouteIndex = state.index;\n\n            if (action.type === StackActions.POP && n != null) {\n              backRouteIndex = Math.max(1, state.index - n + 1);\n            } else if (_key) {\n              var backRoute = state.routes.find(function (route) {\n                return route.key === _key;\n              });\n              backRouteIndex = state.routes.indexOf(backRoute);\n            }\n\n            if (backRouteIndex > 0) {\n              return _objectSpread(_objectSpread({}, state), {}, {\n                routes: state.routes.slice(0, backRouteIndex),\n                index: backRouteIndex - 1,\n                isTransitioning: immediate !== true\n              });\n            }\n          }\n        }\n\n        var keyIndex = action.key ? _StateUtils.default.indexOf(state, action.key) : -1;\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(state.routes.slice().reverse()), _step2; !(_step2 = _iterator2()).done;) {\n          var _childRoute = _step2.value;\n\n          if (_childRoute.key === activeChildRoute.key) {\n            continue;\n          }\n\n          if (keyIndex >= 0 && _childRoute.key !== action.key) {\n            continue;\n          }\n\n          var _childRouter4 = childRouters[_childRoute.routeName];\n\n          if (_childRouter4) {\n            var _route4 = _childRouter4.getStateForAction(action, _childRoute);\n\n            if (_route4 === null) {\n              return state;\n            } else if (_route4 && _route4 !== _childRoute) {\n              return _StateUtils.default.replaceAt(state, _childRoute.key, _route4, action.preserveFocus || action.type.includes('DRAWER'));\n            }\n          }\n        }\n\n        return state;\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, stackConfig.defaultNavigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","lineCount":530,"map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[21,0,4,0],[23,0,5,0],[25,0,6,0],[27,0,7,0],[29,0,8,0],[31,0,9,0],[43,0,11,0],[43,11,11,9,"behavesLikePushAction"],[43,32,11,0],[43,33,11,31,"action"],[43,39,11,0],[43,41,11,39],[44,0,12,2],[44,11,12,9,"action"],[44,17,12,15],[44,18,12,16,"type"],[44,22,12,9],[44,27,12,25,"NavigationActions"],[44,44,12,42],[44,45,12,43,"NAVIGATE"],[44,53,12,9],[44,57,12,55,"action"],[44,63,12,61],[44,64,12,62,"type"],[44,68,12,55],[44,73,12,71,"StackActions"],[44,85,12,83],[44,86,12,84,"PUSH"],[44,90,12,2],[45,0,13,1],[47,0,15,0],[47,6,15,6,"defaultActionCreators"],[47,27,15,27],[47,30,15,30],[47,39,15,6,"defaultActionCreators"],[47,60,15,30],[48,0,15,30],[48,11,15,37],[48,13,15,30],[49,0,15,30],[49,3,15,0],[51,0,17,0],[51,11,17,9,"isResetToRootStack"],[51,29,17,0],[51,30,17,28,"action"],[51,36,17,0],[51,38,17,36],[52,0,18,2],[52,11,18,9,"action"],[52,17,18,15],[52,18,18,16,"type"],[52,22,18,9],[52,27,18,25,"StackActions"],[52,39,18,37],[52,40,18,38,"RESET"],[52,45,18,9],[52,49,18,47,"action"],[52,55,18,53],[52,56,18,54,"key"],[52,59,18,47],[52,64,18,62],[52,68,18,2],[53,0,19,1],[55,17,21,16],[55,35,21,17,"routeConfigs"],[55,47,21,16],[55,49,21,52],[56,0,21,52],[56,8,21,31,"stackConfig"],[56,19,21,52],[56,90,21,45],[56,92,21,52],[57,0,23,2],[57,41,23,25,"routeConfigs"],[57,53,23,2],[58,0,24,2],[58,8,24,8,"childRouters"],[58,20,24,20],[58,23,24,23],[58,25,24,2],[59,0,25,2],[59,8,25,8,"routeNames"],[59,18,25,18],[59,21,25,21,"Object"],[59,27,25,27],[59,28,25,28,"keys"],[59,32,25,21],[59,33,25,33,"routeConfigs"],[59,45,25,21],[59,46,25,2],[60,0,27,2,"routeNames"],[60,4,27,2,"routeNames"],[60,14,27,12],[60,15,27,13,"forEach"],[60,22,27,2],[60,23,27,21],[60,33,27,21,"routeName"],[60,42,27,30],[60,44,27,34],[61,0,31,4],[61,10,31,10,"routeConfig"],[61,21,31,21],[61,24,31,24,"routeConfigs"],[61,36,31,36],[61,37,31,37,"routeName"],[61,46,31,36],[61,47,31,4],[62,0,32,4],[62,10,32,10,"screen"],[62,16,32,16],[62,19,32,19,"routeConfig"],[62,30,32,30],[62,34,32,34,"routeConfig"],[62,45,32,45],[62,46,32,46,"screen"],[62,52,32,19],[62,55,32,55,"routeConfig"],[62,66,32,66],[62,67,32,67,"screen"],[62,73,32,19],[62,76,32,76,"routeConfig"],[62,87,32,4],[64,0,34,4],[64,10,34,8,"screen"],[64,16,34,14],[64,20,34,18,"screen"],[64,26,34,24],[64,27,34,25,"router"],[64,33,34,4],[64,35,34,33],[65,0,36,6,"childRouters"],[65,8,36,6,"childRouters"],[65,20,36,18],[65,21,36,19,"routeName"],[65,30,36,18],[65,31,36,6],[65,34,36,32,"screen"],[65,40,36,38],[65,41,36,39,"router"],[65,47,36,6],[66,0,37,5],[66,7,34,4],[66,13,37,11],[67,0,39,6,"childRouters"],[67,8,39,6,"childRouters"],[67,20,39,18],[67,21,39,19,"routeName"],[67,30,39,18],[67,31,39,6],[67,34,39,32],[67,38,39,6],[68,0,40,5],[69,0,41,3],[69,5,27,2],[70,0,21,52],[70,8,43,4,"initialRouteParams"],[70,26,21,52],[70,29,44,6,"stackConfig"],[70,40,21,52],[70,41,43,4,"initialRouteParams"],[70,59,21,52],[71,0,45,2],[71,8,45,8,"getCustomActionCreators"],[71,31,45,31],[71,34,45,34,"stackConfig"],[71,45,45,45],[71,46,45,46,"getCustomActionCreators"],[71,69,45,34],[71,73,45,73,"defaultActionCreators"],[71,94,45,2],[72,0,46,2],[72,8,46,8,"initialRouteName"],[72,24,46,24],[72,27,46,27,"stackConfig"],[72,38,46,38],[72,39,46,39,"initialRouteName"],[72,55,46,27],[72,59,46,59,"routeNames"],[72,69,46,69],[72,70,46,70],[72,71,46,69],[72,72,46,2],[73,0,47,2],[73,8,47,8,"initialChildRouter"],[73,26,47,26],[73,29,47,29,"childRouters"],[73,41,47,41],[73,42,47,42,"initialRouteName"],[73,58,47,41],[73,59,47,2],[75,0,49,2],[75,13,49,11,"getInitialState"],[75,28,49,2],[75,29,49,27,"action"],[75,35,49,2],[75,37,49,35],[76,0,50,4],[76,10,50,8,"route"],[76,15,50,13],[76,18,50,16],[76,20,50,4],[77,0,51,4],[77,10,51,10,"childRouter"],[77,21,51,21],[77,24,51,24,"childRouters"],[77,36,51,36],[77,37,51,37,"action"],[77,43,51,43],[77,44,51,44,"routeName"],[77,53,51,36],[77,54,51,4],[79,0,53,4],[79,10,53,8,"behavesLikePushAction"],[79,31,53,29],[79,32,53,30,"action"],[79,38,53,29],[79,39,53,8],[79,43,53,41,"childRouter"],[79,54,53,52],[79,59,53,57,"undefined"],[79,68,53,4],[79,70,53,68],[80,0,54,6],[80,12,54,10,"childState"],[80,22,54,20],[80,25,54,23],[80,27,54,6],[82,0,56,6],[82,12,56,10,"childRouter"],[82,23,56,21],[82,28,56,26],[82,32,56,6],[82,34,56,32],[83,0,57,8],[83,14,57,14,"childAction"],[83,25,57,25],[83,28,57,28,"action"],[83,34,57,34],[83,35,57,35,"action"],[83,41,57,28],[83,45,57,45,"NavigationActions"],[83,62,57,62],[83,63,57,63,"init"],[83,67,57,45],[83,68,57,68],[84,0,58,10,"params"],[84,12,58,10,"params"],[84,18,58,16],[84,20,58,18,"action"],[84,26,58,24],[84,27,58,25,"params"],[85,0,57,68],[85,11,57,45],[85,12,57,8],[86,0,60,8,"childState"],[86,10,60,8,"childState"],[86,20,60,18],[86,23,60,21,"childRouter"],[86,34,60,32],[86,35,60,33,"getStateForAction"],[86,52,60,21],[86,53,60,51,"childAction"],[86,64,60,21],[86,65,60,8],[87,0,61,7],[89,0,63,6],[89,15,63,13],[90,0,64,8,"key"],[90,10,64,8,"key"],[90,13,64,11],[90,15,64,13],[90,32,63,13],[91,0,65,8,"isTransitioning"],[91,10,65,8,"isTransitioning"],[91,25,65,23],[91,27,65,25],[91,32,63,13],[92,0,66,8,"index"],[92,10,66,8,"index"],[92,15,66,13],[92,17,66,15],[92,18,63,13],[93,0,67,8,"routes"],[93,10,67,8,"routes"],[93,16,67,14],[93,18,67,16],[94,0,68,10,"params"],[94,12,68,10,"params"],[94,18,68,16],[94,20,68,18,"action"],[94,26,68,24],[94,27,68,25,"params"],[95,0,67,16],[95,13,69,13,"childState"],[95,23,67,16],[96,0,70,10,"key"],[96,12,70,10,"key"],[96,15,70,13],[96,17,70,15,"action"],[96,23,70,21],[96,24,70,22,"key"],[96,27,70,15],[96,31,70,29],[96,63,67,16],[97,0,71,10,"routeName"],[97,12,71,10,"routeName"],[97,21,71,19],[97,23,71,21,"action"],[97,29,71,27],[97,30,71,28,"routeName"],[98,0,67,16],[99,0,63,13],[99,9,63,6],[100,0,74,5],[102,0,76,4],[102,10,76,8,"initialChildRouter"],[102,28,76,4],[102,30,76,28],[103,0,77,6,"route"],[103,8,77,6,"route"],[103,13,77,11],[103,16,77,14,"initialChildRouter"],[103,34,77,32],[103,35,77,33,"getStateForAction"],[103,52,77,14],[103,53,77,51,"NavigationActions"],[103,70,77,68],[103,71,77,69,"navigate"],[103,79,77,51],[103,80,77,78],[104,0,78,8,"routeName"],[104,10,78,8,"routeName"],[104,19,78,17],[104,21,78,19,"initialRouteName"],[104,37,77,78],[105,0,79,8,"params"],[105,10,79,8,"params"],[105,16,79,14],[105,18,79,16,"initialRouteParams"],[106,0,77,78],[106,9,77,51],[106,10,77,14],[106,11,77,6],[107,0,81,5],[109,0,83,4],[109,10,83,10,"params"],[109,16,83,16],[109,19,83,19],[109,20,83,20,"routeConfigs"],[109,32,83,32],[109,33,83,33,"initialRouteName"],[109,49,83,32],[109,50,83,20],[109,51,83,51,"params"],[109,57,83,20],[109,61,83,61,"route"],[109,66,83,66],[109,67,83,67,"params"],[109,73,83,20],[109,77,83,77,"action"],[109,83,83,83],[109,84,83,84,"params"],[109,90,83,20],[109,94,83,94,"initialRouteParams"],[109,112,83,19],[109,177,83,123,"routeConfigs"],[109,189,83,135],[109,190,83,136,"initialRouteName"],[109,206,83,135],[109,207,83,123],[109,208,83,154,"params"],[109,214,83,123],[109,218,83,164],[109,220,83,19],[109,223,84,10,"route"],[109,228,84,15],[109,229,84,16,"params"],[109,235,84,10],[109,239,84,26],[109,241,83,19],[109,244,85,10,"action"],[109,250,85,16],[109,251,85,17,"params"],[109,257,85,10],[109,261,85,27],[109,263,83,19],[109,266,86,10,"initialRouteParams"],[109,284,86,28],[109,288,86,32],[109,290,83,19],[109,291,83,4],[111,0,49,35],[111,10,89,6,"initialRouteKey"],[111,25,49,35],[111,28,90,8,"stackConfig"],[111,39,49,35],[111,40,89,6,"initialRouteKey"],[111,55,49,35],[112,0,91,4,"route"],[112,6,91,4,"route"],[112,11,91,9],[112,60,91,17,"route"],[112,65,91,9],[112,68,92,10,"params"],[112,74,92,16],[112,77,92,19],[113,0,93,8,"params"],[113,8,93,8,"params"],[113,14,93,14],[113,16,93,8,"params"],[114,0,92,19],[114,7,92,16],[114,10,94,10],[114,12,91,9],[115,0,95,6,"routeName"],[115,8,95,6,"routeName"],[115,17,95,15],[115,19,95,17,"initialRouteName"],[115,35,91,9],[116,0,96,6,"key"],[116,8,96,6,"key"],[116,11,96,9],[116,13,96,11,"action"],[116,19,96,17],[116,20,96,18,"key"],[116,23,96,11],[116,27,96,25,"initialRouteKey"],[116,42,96,11],[116,46,96,44],[117,0,91,9],[117,8,91,4],[118,0,98,4],[118,13,98,11],[119,0,99,6,"key"],[119,8,99,6,"key"],[119,11,99,9],[119,13,99,11],[119,30,98,11],[120,0,100,6,"isTransitioning"],[120,8,100,6,"isTransitioning"],[120,23,100,21],[120,25,100,23],[120,30,98,11],[121,0,101,6,"index"],[121,8,101,6,"index"],[121,13,101,11],[121,15,101,13],[121,16,98,11],[122,0,102,6,"routes"],[122,8,102,6,"routes"],[122,14,102,12],[122,16,102,14],[122,17,102,15,"route"],[122,22,102,14],[123,0,98,11],[123,7,98,4],[124,0,104,3],[126,0,106,2],[126,13,106,11,"getParamsForRouteAndAction"],[126,39,106,2],[126,40,106,38,"routeName"],[126,49,106,2],[126,51,106,49,"action"],[126,57,106,2],[126,59,106,57],[127,0,107,4],[127,10,107,8,"routeConfig"],[127,21,107,19],[127,24,107,22,"routeConfigs"],[127,36,107,34],[127,37,107,35,"routeName"],[127,46,107,34],[127,47,107,4],[129,0,109,4],[129,10,109,8,"routeConfig"],[129,21,109,19],[129,25,109,23,"routeConfig"],[129,36,109,34],[129,37,109,35,"params"],[129,43,109,4],[129,45,109,43],[130,0,110,6],[130,47,110,18,"routeConfig"],[130,58,110,29],[130,59,110,30,"params"],[130,65,110,6],[130,68,111,11,"action"],[130,74,111,17],[130,75,111,18,"params"],[130,81,110,6],[131,0,113,5],[131,7,109,4],[131,13,113,11],[132,0,114,6],[132,15,114,13,"action"],[132,21,114,19],[132,22,114,20,"params"],[132,28,114,6],[133,0,115,5],[134,0,116,3],[136,0,21,52],[136,28,121,6],[136,61,121,23,"childRouters"],[136,73,121,6],[136,75,121,37,"routeConfigs"],[136,87,121,6],[136,89,121,51,"stackConfig"],[136,100,121,6],[136,101,21,52],[137,0,21,52],[137,8,119,4,"getPathAndParamsForRoute"],[137,32,21,52],[137,53,119,4,"getPathAndParamsForRoute"],[137,77,21,52],[138,0,21,52],[138,8,120,4,"getActionForPathAndParams"],[138,34,21,52],[138,55,120,4,"getActionForPathAndParams"],[138,80,21,52],[140,0,122,2],[140,11,122,9],[141,0,123,4,"childRouters"],[141,6,123,4,"childRouters"],[141,18,123,16],[141,20,123,4,"childRouters"],[141,32,122,9],[142,0,125,4,"getComponentForState"],[142,6,125,4,"getComponentForState"],[142,26,122,9],[142,58,125,25,"state"],[142,63,122,9],[142,65,125,32],[143,0,126,6],[143,12,126,12,"activeChildRoute"],[143,28,126,28],[143,31,126,31,"state"],[143,36,126,36],[143,37,126,37,"routes"],[143,43,126,31],[143,44,126,44,"state"],[143,49,126,49],[143,50,126,50,"index"],[143,55,126,31],[143,56,126,6],[144,0,125,32],[144,12,128,8,"routeName"],[144,21,125,32],[144,24,129,10,"activeChildRoute"],[144,40,125,32],[144,41,128,8,"routeName"],[144,50,125,32],[146,0,131,6],[146,12,131,10,"childRouters"],[146,24,131,22],[146,25,131,23,"routeName"],[146,34,131,22],[146,35,131,6],[146,37,131,35],[147,0,132,8],[147,17,132,15,"childRouters"],[147,29,132,27],[147,30,132,28,"routeName"],[147,39,132,27],[147,40,132,15],[147,41,132,39,"getComponentForState"],[147,61,132,15],[147,62,132,60,"activeChildRoute"],[147,78,132,15],[147,79,132,8],[148,0,133,7],[150,0,135,6],[150,15,135,13],[150,51,135,35,"routeConfigs"],[150,63,135,13],[150,65,135,49,"routeName"],[150,74,135,13],[150,75,135,6],[151,0,136,5],[151,7,122,9],[152,0,138,4,"getComponentForRouteName"],[152,6,138,4,"getComponentForRouteName"],[152,30,122,9],[152,66,138,29,"routeName"],[152,75,122,9],[152,77,138,40],[153,0,139,6],[153,15,139,13],[153,51,139,35,"routeConfigs"],[153,63,139,13],[153,65,139,49,"routeName"],[153,74,139,13],[153,75,139,6],[154,0,140,5],[154,7,122,9],[155,0,142,4,"getActionCreators"],[155,6,142,4,"getActionCreators"],[155,23,122,9],[155,52,142,22,"route"],[155,57,122,9],[155,59,142,29,"navStateKey"],[155,70,122,9],[155,72,142,42],[156,0,143,6],[156,47,143,18,"getCustomActionCreators"],[156,70,143,41],[156,71,143,42,"route"],[156,76,143,41],[156,78,143,49,"navStateKey"],[156,89,143,41],[156,90,143,6],[157,0,144,8,"pop"],[157,10,144,8,"pop"],[157,13,144,11],[157,15,144,13],[157,28,144,14,"n"],[157,29,144,13],[157,31,144,17,"params"],[157,37,144,13],[158,0,144,13],[158,19,144,28,"StackActions"],[158,31,144,40],[158,32,144,41,"pop"],[158,35,144,28],[159,0,145,10,"n"],[159,14,145,10,"n"],[159,15,145,11],[159,17,145,10,"n"],[160,0,144,28],[160,15,146,13,"params"],[160,21,144,28],[160,23,144,13],[161,0,144,13],[161,11,143,6],[162,0,148,8,"popToTop"],[162,10,148,8,"popToTop"],[162,18,148,16],[162,20,148,18],[162,38,148,18,"params"],[162,44,148,24],[163,0,148,24],[163,19,148,28,"StackActions"],[163,31,148,40],[163,32,148,41,"popToTop"],[163,40,148,28],[163,41,148,50,"params"],[163,47,148,28],[163,48,148,24],[164,0,148,24],[164,11,143,6],[165,0,149,8,"push"],[165,10,149,8,"push"],[165,14,149,12],[165,16,149,14],[165,30,149,15,"routeName"],[165,39,149,14],[165,41,149,26,"params"],[165,47,149,14],[165,49,149,34,"action"],[165,55,149,14],[166,0,149,14],[166,19,149,45,"StackActions"],[166,31,149,57],[166,32,149,58,"push"],[166,36,149,45],[166,37,149,63],[167,0,150,10,"routeName"],[167,14,150,10,"routeName"],[167,23,150,19],[167,25,150,10,"routeName"],[167,34,149,63],[168,0,151,10,"params"],[168,14,151,10,"params"],[168,20,151,16],[168,22,151,10,"params"],[168,28,149,63],[169,0,152,10,"action"],[169,14,152,10,"action"],[169,20,152,16],[169,22,152,10,"action"],[170,0,149,63],[170,13,149,45],[170,14,149,14],[171,0,149,14],[171,11,143,6],[172,0,154,8,"replace"],[172,10,154,8,"replace"],[172,17,154,15],[172,19,154,17],[172,36,154,18,"replaceWith"],[172,47,154,17],[172,49,154,31,"params"],[172,55,154,17],[172,57,154,39,"action"],[172,63,154,17],[172,65,154,47,"newKey"],[172,71,154,17],[172,73,154,58],[173,0,155,10],[173,16,155,14],[173,23,155,21,"replaceWith"],[173,34,155,14],[173,39,155,37],[173,47,155,10],[173,49,155,47],[174,0,156,12],[174,21,156,19,"StackActions"],[174,33,156,31],[174,34,156,32,"replace"],[174,41,156,19],[174,42,156,40],[175,0,157,14,"routeName"],[175,16,157,14,"routeName"],[175,25,157,23],[175,27,157,25,"replaceWith"],[175,38,156,40],[176,0,158,14,"params"],[176,16,158,14,"params"],[176,22,158,20],[176,24,158,14,"params"],[176,30,156,40],[177,0,159,14,"action"],[177,16,159,14,"action"],[177,22,159,20],[177,24,159,14,"action"],[177,30,156,40],[178,0,160,14,"key"],[178,16,160,14,"key"],[178,19,160,17],[178,21,160,19,"route"],[178,26,160,24],[178,27,160,25,"key"],[178,30,156,40],[179,0,161,14,"newKey"],[179,16,161,14,"newKey"],[179,22,161,20],[179,24,161,14,"newKey"],[180,0,156,40],[180,15,156,19],[180,16,156,12],[181,0,163,11],[183,0,165,10],[183,36,165,20],[183,43,165,27,"replaceWith"],[183,54,165,20],[183,59,165,43],[183,67,165,10],[183,69,165,53],[183,109,165,10],[184,0,166,10],[184,36,166,20,"params"],[184,42,166,26],[184,46,166,30],[184,50,166,10],[184,52,166,36],[184,121,166,10],[185,0,167,10],[185,36,167,20,"action"],[185,42,167,26],[185,46,167,30],[185,50,167,10],[185,52,167,36],[185,127,167,10],[186,0,168,10],[186,36,168,20,"newKey"],[186,42,168,26],[186,46,168,30],[186,50,168,10],[186,52,168,36],[186,127,168,10],[187,0,169,10],[187,19,169,17,"StackActions"],[187,31,169,29],[187,32,169,30,"replace"],[187,39,169,17],[187,40,169,38,"replaceWith"],[187,51,169,17],[187,52,169,10],[188,0,170,9],[188,11,143,6],[189,0,171,8,"reset"],[189,10,171,8,"reset"],[189,15,171,13],[189,17,171,15],[189,32,171,16,"actions"],[189,39,171,15],[189,41,171,25,"index"],[189,46,171,15],[190,0,171,15],[190,19,171,35,"StackActions"],[190,31,171,47],[190,32,171,48,"reset"],[190,37,171,35],[190,38,171,54],[191,0,172,10,"actions"],[191,14,172,10,"actions"],[191,21,172,17],[191,23,172,10,"actions"],[191,30,171,54],[192,0,173,10,"index"],[192,14,173,10,"index"],[192,19,173,15],[192,21,173,17,"index"],[192,26,173,22],[192,30,173,26],[192,34,173,17],[192,37,173,33,"actions"],[192,44,173,40],[192,45,173,41,"length"],[192,51,173,33],[192,54,173,50],[192,55,173,17],[192,58,173,54,"index"],[192,63,171,54],[193,0,174,10,"key"],[193,14,174,10,"key"],[193,17,174,13],[193,19,174,15,"navStateKey"],[194,0,171,54],[194,13,171,35],[194,14,171,15],[195,0,171,15],[195,11,143,6],[196,0,176,8,"dismiss"],[196,10,176,8,"dismiss"],[196,17,176,15],[196,19,176,17],[197,0,176,17],[197,19,176,23,"NavigationActions"],[197,36,176,40],[197,37,176,41,"back"],[197,41,176,23],[197,42,176,46],[198,0,177,10,"key"],[198,14,177,10,"key"],[198,17,177,13],[198,19,177,15,"navStateKey"],[199,0,176,46],[199,13,176,23],[199,14,176,17],[200,0,176,17],[201,0,143,6],[202,0,180,5],[202,7,122,9],[203,0,182,4,"getStateForAction"],[203,6,182,4,"getStateForAction"],[203,23,122,9],[203,52,182,22,"action"],[203,58,122,9],[203,60,182,30,"state"],[203,65,122,9],[203,67,182,37],[204,0,184,6],[204,12,184,10],[204,13,184,11,"state"],[204,18,184,6],[204,20,184,18],[205,0,185,8],[205,17,185,15,"getInitialState"],[205,32,185,30],[205,33,185,31,"action"],[205,39,185,30],[205,40,185,8],[206,0,186,7],[208,0,188,6],[208,12,188,12,"activeChildRoute"],[208,28,188,28],[208,31,188,31,"state"],[208,36,188,36],[208,37,188,37,"routes"],[208,43,188,31],[208,44,188,44,"state"],[208,49,188,49],[208,50,188,50,"index"],[208,55,188,31],[208,56,188,6],[210,0,190,6],[210,12,190,10],[210,13,190,11,"isResetToRootStack"],[210,31,190,29],[210,32,190,30,"action"],[210,38,190,29],[210,39,190,10],[210,43,190,41,"action"],[210,49,190,47],[210,50,190,48,"type"],[210,54,190,41],[210,59,190,57,"NavigationActions"],[210,76,190,74],[210,77,190,75,"NAVIGATE"],[210,85,190,6],[210,87,190,85],[211,0,192,8],[211,14,192,14,"activeChildRouter"],[211,31,192,31],[211,34,192,34,"childRouters"],[211,46,192,46],[211,47,192,47,"activeChildRoute"],[211,63,192,63],[211,64,192,64,"routeName"],[211,73,192,46],[211,74,192,8],[213,0,194,8],[213,14,194,12,"activeChildRouter"],[213,31,194,8],[213,33,194,31],[214,0,195,10],[214,16,195,16,"route"],[214,21,195,21],[214,24,195,24,"activeChildRouter"],[214,41,195,41],[214,42,195,42,"getStateForAction"],[214,59,195,24],[214,60,195,60,"action"],[214,66,195,24],[214,68,195,68,"activeChildRoute"],[214,84,195,24],[214,85,195,10],[216,0,197,10],[216,16,197,14,"route"],[216,21,197,19],[216,26,197,24],[216,30,197,14],[216,34,197,32,"route"],[216,39,197,37],[216,44,197,42,"activeChildRoute"],[216,60,197,10],[216,62,197,60],[217,0,198,12],[217,21,198,19,"StateUtils"],[217,41,198,30,"replaceAt"],[217,50,198,19],[217,51,198,40,"state"],[217,56,198,19],[217,58,198,47,"activeChildRoute"],[217,74,198,63],[217,75,198,64,"key"],[217,78,198,19],[217,80,198,69,"route"],[217,85,198,19],[217,87,199,12,"action"],[217,93,199,18],[217,94,199,19,"type"],[217,98,199,12],[217,103,199,28,"NavigationActions"],[217,120,199,45],[217,121,199,46,"SET_PARAMS"],[217,131,198,19],[217,132,198,12],[218,0,200,11],[219,0,201,9],[220,0,202,7],[220,9,190,6],[220,15,202,13],[220,19,202,17,"action"],[220,25,202,23],[220,26,202,24,"type"],[220,30,202,17],[220,35,202,33,"NavigationActions"],[220,52,202,50],[220,53,202,51,"NAVIGATE"],[220,61,202,13],[220,63,202,61],[221,0,205,8],[221,63,205,31,"state"],[221,68,205,36],[221,69,205,37,"routes"],[221,75,205,31],[221,76,205,44,"slice"],[221,81,205,31],[221,84,205,52,"reverse"],[221,91,205,31],[221,93,205,8],[221,133,205,63],[222,0,205,63],[222,16,205,17,"childRoute"],[222,26,205,63],[223,0,206,10],[223,16,206,14,"childRouter"],[223,27,206,25],[223,30,206,28,"childRouters"],[223,42,206,40],[223,43,206,41,"childRoute"],[223,53,206,51],[223,54,206,52,"routeName"],[223,63,206,40],[223,64,206,10],[224,0,207,10],[224,16,207,14,"childAction"],[224,27,207,25],[224,30,207,28,"action"],[224,36,207,34],[224,37,207,35,"routeName"],[224,46,207,28],[224,51,207,49,"childRoute"],[224,61,207,59],[224,62,207,60,"routeName"],[224,71,207,28],[224,75,207,73,"action"],[224,81,207,79],[224,82,207,80,"action"],[224,88,207,28],[224,91,207,89,"action"],[224,97,207,95],[224,98,207,96,"action"],[224,104,207,28],[224,107,207,105,"action"],[224,113,207,10],[226,0,209,10],[226,16,209,14,"childRouter"],[226,27,209,10],[226,29,209,27],[227,0,210,12],[227,18,210,18,"nextRouteState"],[227,32,210,32],[227,35,210,35,"childRouter"],[227,46,210,46],[227,47,210,47,"getStateForAction"],[227,64,210,35],[227,65,210,65,"childAction"],[227,76,210,35],[227,78,210,78,"childRoute"],[227,88,210,35],[227,89,210,12],[229,0,212,12],[229,18,212,16,"nextRouteState"],[229,32,212,30],[229,37,212,35],[229,41,212,16],[229,45,212,43,"nextRouteState"],[229,59,212,57],[229,64,212,62,"childRoute"],[229,74,212,12],[229,76,212,74],[230,0,213,14],[230,20,213,20,"newState"],[230,28,213,28],[230,31,213,31,"StateUtils"],[230,51,213,42,"replaceAndPrune"],[230,66,213,31],[230,67,213,58,"state"],[230,72,213,31],[230,74,213,65,"nextRouteState"],[230,88,213,79],[230,91,213,82,"nextRouteState"],[230,105,213,96],[230,106,213,97,"key"],[230,109,213,79],[230,112,213,103,"childRoute"],[230,122,213,113],[230,123,213,114,"key"],[230,126,213,31],[230,128,213,119,"nextRouteState"],[230,142,213,133],[230,145,213,136,"nextRouteState"],[230,159,213,133],[230,162,213,153,"childRoute"],[230,172,213,31],[230,173,213,14],[232,0,214,14],[232,55,214,26,"newState"],[232,63,214,14],[233,0,215,16,"isTransitioning"],[233,18,215,16,"isTransitioning"],[233,33,215,31],[233,35,215,33,"state"],[233,40,215,38],[233,41,215,39,"index"],[233,46,215,33],[233,51,215,49,"newState"],[233,59,215,57],[233,60,215,58,"index"],[233,65,215,33],[233,68,215,66,"action"],[233,74,215,72],[233,75,215,73,"immediate"],[233,84,215,66],[233,89,215,87],[233,93,215,33],[233,96,215,94,"state"],[233,101,215,99],[233,102,215,100,"isTransitioning"],[234,0,214,14],[235,0,217,13],[236,0,218,11],[237,0,219,9],[238,0,220,7],[240,0,224,6],[240,12,224,10,"behavesLikePushAction"],[240,33,224,31],[240,34,224,32,"action"],[240,40,224,31],[240,41,224,10],[240,45,224,43,"childRouters"],[240,57,224,55],[240,58,224,56,"action"],[240,64,224,62],[240,65,224,63,"routeName"],[240,74,224,55],[240,75,224,43],[240,80,224,78,"undefined"],[240,89,224,6],[240,91,225,8],[241,0,226,10],[241,16,226,16,"childRouter"],[241,28,226,27],[241,31,226,30,"childRouters"],[241,43,226,42],[241,44,226,43,"action"],[241,50,226,49],[241,51,226,50,"routeName"],[241,60,226,42],[241,61,226,10],[243,0,227,10],[243,16,227,14,"route"],[243,22,227,10],[245,0,228,10],[245,36,228,20,"action"],[245,42,228,26],[245,43,228,27,"type"],[245,47,228,20],[245,52,228,36,"StackActions"],[245,64,228,48],[245,65,228,49,"PUSH"],[245,69,228,20],[245,73,228,57,"action"],[245,79,228,63],[245,80,228,64,"key"],[245,83,228,57],[245,87,228,71],[245,91,228,10],[245,93,228,77],[245,146,228,10],[246,0,231,10],[246,16,231,16,"lastRouteIndex"],[246,30,231,30],[246,33,231,33,"state"],[246,38,231,38],[246,39,231,39,"routes"],[246,45,231,33],[246,46,231,46,"findIndex"],[246,55,231,33],[246,56,231,56],[246,66,231,56,"r"],[246,67,231,57],[246,69,231,61],[247,0,232,12],[247,18,232,16,"action"],[247,24,232,22],[247,25,232,23,"key"],[247,28,232,12],[247,30,232,28],[248,0,233,14],[248,23,233,21,"r"],[248,24,233,22],[248,25,233,23,"key"],[248,28,233,21],[248,33,233,31,"action"],[248,39,233,37],[248,40,233,38,"key"],[248,43,233,14],[249,0,234,13],[249,15,232,12],[249,21,234,19],[250,0,235,14],[250,23,235,21,"r"],[250,24,235,22],[250,25,235,23,"routeName"],[250,34,235,21],[250,39,235,37,"action"],[250,45,235,43],[250,46,235,44,"routeName"],[250,55,235,14],[251,0,236,13],[252,0,237,11],[252,13,231,33],[252,14,231,10],[254,0,239,10],[254,16,239,14,"action"],[254,22,239,20],[254,23,239,21,"type"],[254,27,239,14],[254,32,239,30,"StackActions"],[254,44,239,42],[254,45,239,43,"PUSH"],[254,49,239,14],[254,53,239,51,"lastRouteIndex"],[254,67,239,65],[254,72,239,70],[254,73,239,71],[254,74,239,10],[254,76,239,74],[255,0,241,12],[255,18,241,16,"state"],[255,23,241,21],[255,24,241,22,"index"],[255,29,241,16],[255,34,241,32,"lastRouteIndex"],[255,48,241,16],[255,52,241,50],[255,53,241,51,"action"],[255,59,241,57],[255,60,241,58,"params"],[255,66,241,12],[255,68,241,66],[256,0,242,14],[256,23,242,21],[256,27,242,14],[257,0,243,13],[259,0,246,12],[259,18,246,18,"routes"],[259,24,246,24],[259,27,246,27,"state"],[259,32,246,32],[259,33,246,33,"routes"],[259,39,246,27],[259,40,246,40,"slice"],[259,45,246,27],[259,46,246,46],[259,47,246,27],[259,49,246,49,"lastRouteIndex"],[259,63,246,63],[259,66,246,66],[259,67,246,27],[259,68,246,12],[261,0,248,12],[261,18,248,16,"action"],[261,24,248,22],[261,25,248,23,"params"],[261,31,248,12],[261,33,248,31],[262,0,249,14],[262,20,249,20,"route"],[262,27,249,25],[262,30,249,28,"state"],[262,35,249,33],[262,36,249,34,"routes"],[262,42,249,28],[262,43,249,41,"lastRouteIndex"],[262,57,249,28],[262,58,249,14],[263,0,250,14,"routes"],[263,16,250,14,"routes"],[263,22,250,20],[263,23,250,21,"lastRouteIndex"],[263,37,250,20],[263,38,250,14],[263,73,250,44,"route"],[263,80,250,14],[264,0,251,16,"params"],[264,18,251,16,"params"],[264,24,251,22],[264,58,251,29,"route"],[264,65,251,34],[264,66,251,35,"params"],[264,72,251,22],[264,75,252,21,"action"],[264,81,252,27],[264,82,252,28,"params"],[264,88,251,22],[265,0,250,14],[266,0,255,13],[268,0,258,12],[268,53,258,24,"state"],[268,58,258,12],[269,0,259,14,"isTransitioning"],[269,16,259,14,"isTransitioning"],[269,31,259,29],[269,33,259,31,"state"],[269,38,259,36],[269,39,259,37,"index"],[269,44,259,31],[269,49,259,47,"lastRouteIndex"],[269,63,259,31],[269,66,259,64,"action"],[269,72,259,70],[269,73,259,71,"immediate"],[269,82,259,64],[269,87,259,85],[269,91,259,31],[269,94,259,92,"state"],[269,99,259,97],[269,100,259,98,"isTransitioning"],[269,115,258,12],[270,0,260,14,"index"],[270,16,260,14,"index"],[270,21,260,19],[270,23,260,21,"lastRouteIndex"],[270,37,258,12],[271,0,261,14,"routes"],[271,16,261,14,"routes"],[271,22,261,20],[271,24,261,14,"routes"],[272,0,258,12],[273,0,263,11],[275,0,265,10],[275,16,265,14,"childRouter"],[275,28,265,10],[275,30,265,27],[276,0,267,12],[276,18,267,18,"childAction"],[276,30,267,29],[276,33,267,32,"action"],[276,39,267,38],[276,40,267,39,"action"],[276,46,267,32],[276,50,267,49,"NavigationActions"],[276,67,267,66],[276,68,267,67,"init"],[276,72,267,49],[276,73,267,72],[277,0,268,14,"params"],[277,16,268,14,"params"],[277,22,268,20],[277,24,268,22,"getParamsForRouteAndAction"],[277,50,268,48],[277,51,268,49,"action"],[277,57,268,55],[277,58,268,56,"routeName"],[277,67,268,48],[277,69,268,67,"action"],[277,75,268,48],[278,0,267,72],[278,15,267,49],[278,16,267,12],[280,0,270,12,"route"],[280,14,270,12,"route"],[280,20,270,17],[281,0,271,14,"params"],[281,16,271,14,"params"],[281,22,271,20],[281,24,271,22,"getParamsForRouteAndAction"],[281,50,271,48],[281,51,271,49,"action"],[281,57,271,55],[281,58,271,56,"routeName"],[281,67,271,48],[281,69,271,67,"action"],[281,75,271,48],[282,0,270,17],[282,17,275,17,"childRouter"],[282,29,275,28],[282,30,275,29,"getStateForAction"],[282,47,275,17],[282,48,275,47,"childAction"],[282,60,275,17],[282,61,270,17],[283,0,276,14,"routeName"],[283,16,276,14,"routeName"],[283,25,276,23],[283,27,276,25,"action"],[283,33,276,31],[283,34,276,32,"routeName"],[283,43,270,17],[284,0,277,14,"key"],[284,16,277,14,"key"],[284,19,277,17],[284,21,277,19,"action"],[284,27,277,25],[284,28,277,26,"key"],[284,31,277,19],[284,35,277,33],[285,0,270,17],[285,16,270,12],[286,0,279,11],[286,13,265,10],[286,19,279,17],[287,0,281,12,"route"],[287,14,281,12,"route"],[287,20,281,17],[287,23,281,20],[288,0,282,14,"params"],[288,16,282,14,"params"],[288,22,282,20],[288,24,282,22,"getParamsForRouteAndAction"],[288,50,282,48],[288,51,282,49,"action"],[288,57,282,55],[288,58,282,56,"routeName"],[288,67,282,48],[288,69,282,67,"action"],[288,75,282,48],[288,76,281,20],[289,0,283,14,"routeName"],[289,16,283,14,"routeName"],[289,25,283,23],[289,27,283,25,"action"],[289,33,283,31],[289,34,283,32,"routeName"],[289,43,281,20],[290,0,284,14,"key"],[290,16,284,14,"key"],[290,19,284,17],[290,21,284,19,"action"],[290,27,284,25],[290,28,284,26,"key"],[290,31,284,19],[290,35,284,33],[291,0,281,20],[291,15,281,12],[292,0,286,11],[294,0,288,10],[294,51,288,22,"StateUtils"],[294,71,288,33,"push"],[294,75,288,22],[294,76,288,38,"state"],[294,81,288,22],[294,83,288,45,"route"],[294,89,288,22],[294,90,288,10],[295,0,289,12,"isTransitioning"],[295,14,289,12,"isTransitioning"],[295,29,289,27],[295,31,289,29,"action"],[295,37,289,35],[295,38,289,36,"immediate"],[295,47,289,29],[295,52,289,50],[296,0,288,10],[297,0,291,9],[297,11,224,6],[297,17,291,15],[297,21,291,19,"action"],[297,27,291,25],[297,28,291,26,"type"],[297,32,291,19],[297,37,291,35,"StackActions"],[297,49,291,47],[297,50,291,48,"PUSH"],[297,54,291,19],[297,58,291,56,"childRouters"],[297,70,291,68],[297,71,291,69,"action"],[297,77,291,75],[297,78,291,76,"routeName"],[297,87,291,68],[297,88,291,56],[297,93,291,91,"undefined"],[297,102,291,15],[297,104,291,102],[298,0,293,8],[298,17,293,15,"state"],[298,22,293,8],[299,0,294,7],[301,0,297,6],[301,12,297,10,"behavesLikePushAction"],[301,33,297,31],[301,34,297,32,"action"],[301,40,297,31],[301,41,297,6],[301,43,297,41],[302,0,298,8],[302,14,298,14,"childRouterNames"],[302,30,298,30],[302,33,298,33,"Object"],[302,39,298,39],[302,40,298,40,"keys"],[302,44,298,33],[302,45,298,45,"childRouters"],[302,57,298,33],[302,58,298,8],[304,0,300,8],[304,15,300,13],[304,19,300,17,"i"],[304,20,300,18],[304,23,300,21],[304,24,300,8],[304,26,300,24,"i"],[304,27,300,25],[304,30,300,28,"childRouterNames"],[304,46,300,44],[304,47,300,45,"length"],[304,53,300,8],[304,55,300,53,"i"],[304,56,300,54],[304,58,300,8],[304,60,300,58],[305,0,301,10],[305,16,301,16,"childRouterName"],[305,31,301,31],[305,34,301,34,"childRouterNames"],[305,50,301,50],[305,51,301,51,"i"],[305,52,301,50],[305,53,301,10],[306,0,302,10],[306,16,302,16,"childRouter"],[306,29,302,27],[306,32,302,30,"childRouters"],[306,44,302,42],[306,45,302,43,"childRouterName"],[306,60,302,42],[306,61,302,10],[308,0,304,10],[308,16,304,14,"childRouter"],[308,29,304,10],[308,31,304,27],[309,0,306,12],[309,18,306,18,"initChildRoute"],[309,32,306,32],[309,35,306,35,"childRouter"],[309,48,306,46],[309,49,306,47,"getStateForAction"],[309,66,306,35],[309,67,306,65,"NavigationActions"],[309,84,306,82],[309,85,306,83,"init"],[309,89,306,65],[309,91,306,35],[309,92,306,12],[311,0,308,12],[311,18,308,18,"navigatedChildRoute"],[311,37,308,37],[311,40,308,40,"childRouter"],[311,53,308,51],[311,54,308,52,"getStateForAction"],[311,71,308,40],[311,72,308,70,"action"],[311,78,308,40],[311,80,308,78,"initChildRoute"],[311,94,308,40],[311,95,308,12],[313,0,309,12],[313,18,309,16,"routeToPush"],[313,29,309,27],[313,32,309,30],[313,36,309,12],[315,0,311,12],[315,18,311,16,"navigatedChildRoute"],[315,37,311,35],[315,42,311,40],[315,46,311,12],[315,48,311,46],[316,0,313,14,"routeToPush"],[316,16,313,14,"routeToPush"],[316,27,313,25],[316,30,313,28,"initChildRoute"],[316,44,313,14],[317,0,314,13],[317,15,311,12],[317,21,314,19],[317,25,314,23,"navigatedChildRoute"],[317,44,314,42],[317,49,314,47,"initChildRoute"],[317,63,314,19],[317,65,314,63],[318,0,316,14,"routeToPush"],[318,16,316,14,"routeToPush"],[318,27,316,25],[318,30,316,28,"navigatedChildRoute"],[318,49,316,14],[319,0,317,13],[321,0,319,12],[321,18,319,16,"routeToPush"],[321,29,319,12],[321,31,319,29],[322,0,320,14],[322,20,320,20,"route"],[322,27,320,25],[322,62,320,33,"routeToPush"],[322,73,320,25],[323,0,321,16,"routeName"],[323,18,321,16,"routeName"],[323,27,321,25],[323,29,321,27,"childRouterName"],[323,44,320,25],[324,0,322,16,"key"],[324,18,322,16,"key"],[324,21,322,19],[324,23,322,21,"action"],[324,29,322,27],[324,30,322,28,"key"],[324,33,322,21],[324,37,322,35],[325,0,320,25],[325,18,320,14],[327,0,324,14],[327,55,324,26,"StateUtils"],[327,75,324,37,"push"],[327,79,324,26],[327,80,324,42,"state"],[327,85,324,26],[327,87,324,49,"route"],[327,94,324,26],[327,95,324,14],[328,0,325,16,"isTransitioning"],[328,18,325,16,"isTransitioning"],[328,33,325,31],[328,35,325,33,"action"],[328,41,325,39],[328,42,325,40,"immediate"],[328,51,325,33],[328,56,325,54],[329,0,324,14],[330,0,327,13],[331,0,328,11],[332,0,329,9],[333,0,330,7],[335,0,333,6],[335,12,333,10,"action"],[335,18,333,16],[335,19,333,17,"type"],[335,23,333,10],[335,28,333,26,"StackActions"],[335,40,333,38],[335,41,333,39,"POP_TO_TOP"],[335,51,333,6],[335,53,333,51],[336,0,336,8],[336,14,336,12,"action"],[336,20,336,18],[336,21,336,19,"key"],[336,24,336,12],[336,28,336,26,"state"],[336,33,336,31],[336,34,336,32,"key"],[336,37,336,26],[336,42,336,40,"action"],[336,48,336,46],[336,49,336,47,"key"],[336,52,336,8],[336,54,336,52],[337,0,337,10],[337,19,337,17,"state"],[337,24,337,10],[338,0,338,9],[340,0,342,8],[340,14,342,12,"state"],[340,19,342,17],[340,20,342,18,"index"],[340,25,342,12],[340,28,342,26],[340,29,342,8],[340,31,342,29],[341,0,343,10],[341,51,343,22,"state"],[341,56,343,10],[342,0,344,12,"isTransitioning"],[342,14,344,12,"isTransitioning"],[342,29,344,27],[342,31,344,29,"action"],[342,37,344,35],[342,38,344,36,"immediate"],[342,47,344,29],[342,52,344,50],[342,56,343,10],[343,0,345,12,"index"],[343,14,345,12,"index"],[343,19,345,17],[343,21,345,19],[343,22,343,10],[344,0,346,12,"routes"],[344,14,346,12,"routes"],[344,20,346,18],[344,22,346,20],[344,23,346,21,"state"],[344,28,346,26],[344,29,346,27,"routes"],[344,35,346,21],[344,36,346,34],[344,37,346,21],[344,38,346,20],[345,0,343,10],[346,0,348,9],[348,0,350,8],[348,17,350,15,"state"],[348,22,350,8],[349,0,351,7],[351,0,354,6],[351,12,354,10,"action"],[351,18,354,16],[351,19,354,17,"type"],[351,23,354,10],[351,28,354,26,"StackActions"],[351,40,354,38],[351,41,354,39,"REPLACE"],[351,48,354,6],[351,50,354,48],[352,0,355,8],[352,14,355,12,"routeIndex"],[352,24,355,8],[354,0,357,8],[354,14,357,12,"action"],[354,20,357,18],[354,21,357,19,"key"],[354,24,357,12],[354,29,357,27,"undefined"],[354,38,357,12],[354,42,357,40,"state"],[354,47,357,45],[354,48,357,46,"routes"],[354,54,357,40],[354,55,357,53,"length"],[354,61,357,8],[354,63,357,61],[355,0,358,10,"routeIndex"],[355,12,358,10,"routeIndex"],[355,22,358,20],[355,25,358,23,"state"],[355,30,358,28],[355,31,358,29,"routes"],[355,37,358,23],[355,38,358,36,"length"],[355,44,358,23],[355,47,358,45],[355,48,358,10],[356,0,359,9],[356,11,357,8],[356,17,359,15],[357,0,360,10,"routeIndex"],[357,12,360,10,"routeIndex"],[357,22,360,20],[357,25,360,23,"state"],[357,30,360,28],[357,31,360,29,"routes"],[357,37,360,23],[357,38,360,36,"findIndex"],[357,47,360,23],[357,48,360,46],[357,58,360,46,"r"],[357,59,360,47],[358,0,360,47],[358,21,360,51,"r"],[358,22,360,52],[358,23,360,53,"key"],[358,26,360,51],[358,31,360,61,"action"],[358,37,360,67],[358,38,360,68,"key"],[358,41,360,47],[359,0,360,47],[359,13,360,23],[359,14,360,10],[360,0,361,9],[362,0,364,8],[362,14,364,12,"routeIndex"],[362,24,364,22],[362,29,364,27],[362,30,364,28],[362,31,364,8],[362,33,364,31],[363,0,365,10],[363,16,365,16,"childRouter"],[363,29,365,27],[363,32,365,30,"childRouters"],[363,44,365,42],[363,45,365,43,"action"],[363,51,365,49],[363,52,365,50,"routeName"],[363,61,365,42],[363,62,365,10],[364,0,366,10],[364,16,366,14,"childState"],[364,26,366,24],[364,29,366,27],[364,31,366,10],[366,0,368,10],[366,16,368,14,"childRouter"],[366,29,368,10],[366,31,368,27],[367,0,369,12],[367,18,369,18,"childAction"],[367,31,369,29],[367,34,369,32,"action"],[367,40,369,38],[367,41,369,39,"action"],[367,47,369,32],[367,51,369,49,"NavigationActions"],[367,68,369,66],[367,69,369,67,"init"],[367,73,369,49],[367,74,369,72],[368,0,370,14,"params"],[368,16,370,14,"params"],[368,22,370,20],[368,24,370,22,"getParamsForRouteAndAction"],[368,50,370,48],[368,51,370,49,"action"],[368,57,370,55],[368,58,370,56,"routeName"],[368,67,370,48],[368,69,370,67,"action"],[368,75,370,48],[369,0,369,72],[369,15,369,49],[369,16,369,12],[371,0,372,12,"childState"],[371,14,372,12,"childState"],[371,24,372,22],[371,27,372,25,"childRouter"],[371,40,372,36],[371,41,372,37,"getStateForAction"],[371,58,372,25],[371,59,372,55,"childAction"],[371,72,372,25],[371,73,372,12],[372,0,373,11],[374,0,375,10],[374,16,375,16,"routes"],[374,23,375,22],[374,59,375,29,"state"],[374,64,375,34],[374,65,375,35,"routes"],[374,71,375,22],[374,72,375,10],[376,0,376,10,"routes"],[376,12,376,10,"routes"],[376,19,376,16],[376,20,376,17,"routeIndex"],[376,30,376,16],[376,31,376,10],[377,0,377,12,"params"],[377,14,377,12,"params"],[377,20,377,18],[377,22,377,20,"getParamsForRouteAndAction"],[377,48,377,46],[377,49,377,47,"action"],[377,55,377,53],[377,56,377,54,"routeName"],[377,65,377,46],[377,67,377,65,"action"],[377,73,377,46],[378,0,376,10],[378,15,379,15,"childState"],[378,25,376,10],[379,0,380,12,"routeName"],[379,14,380,12,"routeName"],[379,23,380,21],[379,25,380,23,"action"],[379,31,380,29],[379,32,380,30,"routeName"],[379,41,376,10],[380,0,381,12,"key"],[380,14,381,12,"key"],[380,17,381,15],[380,19,381,17,"action"],[380,25,381,23],[380,26,381,24,"newKey"],[380,32,381,17],[380,36,381,34],[381,0,376,10],[382,0,383,10],[382,51,383,22,"state"],[382,56,383,10],[383,0,384,12,"routes"],[383,14,384,12,"routes"],[383,20,384,18],[383,22,384,12,"routes"],[384,0,383,10],[385,0,386,9],[386,0,387,7],[388,0,390,6],[388,12,390,10,"action"],[388,18,390,16],[388,19,390,17,"type"],[388,23,390,10],[388,28,390,26,"StackActions"],[388,40,390,38],[388,41,390,39,"COMPLETE_TRANSITION"],[388,60,390,10],[388,65,390,63,"action"],[388,71,390,69],[388,72,390,70,"key"],[388,75,390,63],[388,79,390,77],[388,83,390,63],[388,87,390,85,"action"],[388,93,390,91],[388,94,390,92,"key"],[388,97,390,85],[388,102,390,100,"state"],[388,107,390,105],[388,108,390,106,"key"],[388,111,390,10],[388,116,390,114,"action"],[388,122,390,120],[388,123,390,121,"toChildKey"],[388,133,390,114],[388,138,390,136,"state"],[388,143,390,141],[388,144,390,142,"routes"],[388,150,390,136],[388,151,390,149,"state"],[388,156,390,154],[388,157,390,155,"index"],[388,162,390,136],[388,164,390,162,"key"],[388,167,390,10],[388,171,390,169,"state"],[388,176,390,174],[388,177,390,175,"isTransitioning"],[388,192,390,6],[388,194,390,192],[389,0,391,8],[389,49,391,20,"state"],[389,54,391,8],[390,0,392,10,"isTransitioning"],[390,12,392,10,"isTransitioning"],[390,27,392,25],[390,29,392,27],[391,0,391,8],[392,0,394,7],[394,0,396,6],[394,12,396,10,"action"],[394,18,396,16],[394,19,396,17,"type"],[394,23,396,10],[394,28,396,26,"NavigationActions"],[394,45,396,43],[394,46,396,44,"SET_PARAMS"],[394,56,396,6],[394,58,396,56],[395,0,397,8],[395,14,397,14,"key"],[395,17,397,17],[395,20,397,20,"action"],[395,26,397,26],[395,27,397,27,"key"],[395,30,397,8],[396,0,398,8],[396,14,398,14,"lastRoute"],[396,23,398,23],[396,26,398,26,"state"],[396,31,398,31],[396,32,398,32,"routes"],[396,38,398,26],[396,39,398,39,"find"],[396,43,398,26],[396,44,398,44],[396,54,398,44,"route"],[396,59,398,49],[397,0,398,49],[397,19,398,53,"route"],[397,24,398,58],[397,25,398,59,"key"],[397,28,398,53],[397,33,398,67,"key"],[397,36,398,49],[398,0,398,49],[398,11,398,26],[398,12,398,8],[400,0,400,8],[400,14,400,12,"lastRoute"],[400,23,400,8],[400,25,400,23],[401,0,401,10],[401,16,401,16,"params"],[401,22,401,22],[401,57,401,30,"lastRoute"],[401,66,401,39],[401,67,401,40,"params"],[401,73,401,22],[401,76,402,15,"action"],[401,82,402,21],[401,83,402,22,"params"],[401,89,401,22],[401,90,401,10],[403,0,404,10],[403,16,404,16,"routes"],[403,24,404,22],[403,60,404,29,"state"],[403,65,404,34],[403,66,404,35,"routes"],[403,72,404,22],[403,73,404,10],[405,0,405,10,"routes"],[405,12,405,10,"routes"],[405,20,405,16],[405,21,405,17,"state"],[405,26,405,22],[405,27,405,23,"routes"],[405,33,405,17],[405,34,405,30,"indexOf"],[405,41,405,17],[405,42,405,38,"lastRoute"],[405,51,405,17],[405,52,405,16],[405,53,405,10],[405,88,405,57,"lastRoute"],[405,97,405,10],[406,0,406,12,"params"],[406,14,406,12,"params"],[406,20,406,18],[406,22,406,12,"params"],[407,0,405,10],[408,0,408,10],[408,51,408,22,"state"],[408,56,408,10],[409,0,409,12,"routes"],[409,14,409,12,"routes"],[409,20,409,18],[409,22,409,12,"routes"],[410,0,408,10],[411,0,411,9],[412,0,412,7],[414,0,414,6],[414,12,414,10,"action"],[414,18,414,16],[414,19,414,17,"type"],[414,23,414,10],[414,28,414,26,"StackActions"],[414,40,414,38],[414,41,414,39,"RESET"],[414,46,414,6],[414,48,414,46],[415,0,416,8],[415,14,416,12,"action"],[415,20,416,18],[415,21,416,19,"key"],[415,24,416,12],[415,28,416,26],[415,32,416,12],[415,36,416,34,"action"],[415,42,416,40],[415,43,416,41,"key"],[415,46,416,34],[415,51,416,49,"state"],[415,56,416,54],[415,57,416,55,"key"],[415,60,416,8],[415,62,416,60],[416,0,419,10],[416,19,419,17,"state"],[416,24,419,10],[417,0,420,9],[419,0,422,8],[419,14,422,14,"newStackActions"],[419,29,422,29],[419,32,422,32,"action"],[419,38,422,38],[419,39,422,39,"actions"],[419,46,422,8],[420,0,423,8],[420,49,423,20,"state"],[420,54,423,8],[421,0,424,10,"routes"],[421,12,424,10,"routes"],[421,18,424,16],[421,20,424,18,"newStackActions"],[421,35,424,33],[421,36,424,34,"map"],[421,39,424,18],[421,40,424,38],[421,50,424,38,"newStackAction"],[421,64,424,52],[421,66,424,56],[422,0,425,12],[422,18,425,18,"router"],[422,24,425,24],[422,27,425,27,"childRouters"],[422,39,425,39],[422,40,425,40,"newStackAction"],[422,54,425,54],[422,55,425,55,"routeName"],[422,64,425,39],[422,65,425,12],[423,0,426,12],[423,18,426,16,"childState"],[423,28,426,26],[423,31,426,29],[423,33,426,12],[425,0,428,12],[425,18,428,16,"router"],[425,24,428,12],[425,26,428,24],[426,0,429,14],[426,20,429,20,"childAction"],[426,33,429,31],[426,36,429,34,"newStackAction"],[426,50,429,48],[426,51,429,49,"action"],[426,57,429,34],[426,61,429,59,"NavigationActions"],[426,78,429,76],[426,79,429,77,"init"],[426,83,429,59],[426,84,429,82],[427,0,430,16,"params"],[427,18,430,16,"params"],[427,24,430,22],[427,26,430,24,"getParamsForRouteAndAction"],[427,52,430,50],[427,53,430,51,"newStackAction"],[427,67,430,65],[427,68,430,66,"routeName"],[427,77,430,50],[427,79,430,77,"newStackAction"],[427,93,430,50],[428,0,429,82],[428,17,429,59],[428,18,429,14],[430,0,432,14,"childState"],[430,16,432,14,"childState"],[430,26,432,24],[430,29,432,27,"router"],[430,35,432,33],[430,36,432,34,"getStateForAction"],[430,53,432,27],[430,54,432,52,"childAction"],[430,67,432,27],[430,68,432,14],[431,0,433,13],[433,0,435,12],[434,0,436,14,"params"],[434,16,436,14,"params"],[434,22,436,20],[434,24,436,22,"getParamsForRouteAndAction"],[434,50,436,48],[434,51,436,49,"newStackAction"],[434,65,436,63],[434,66,436,64,"routeName"],[434,75,436,48],[434,77,436,75,"newStackAction"],[434,91,436,48],[435,0,435,12],[435,17,437,17,"childState"],[435,27,435,12],[436,0,438,14,"routeName"],[436,16,438,14,"routeName"],[436,25,438,23],[436,27,438,25,"newStackAction"],[436,41,438,39],[436,42,438,40,"routeName"],[436,51,435,12],[437,0,439,14,"key"],[437,16,439,14,"key"],[437,19,439,17],[437,21,439,19,"newStackAction"],[437,35,439,33],[437,36,439,34,"key"],[437,39,439,19],[437,43,439,41],[438,0,435,12],[439,0,441,11],[439,13,424,18],[439,14,423,8],[440,0,442,10,"index"],[440,12,442,10,"index"],[440,17,442,15],[440,19,442,17,"action"],[440,25,442,23],[440,26,442,24,"index"],[441,0,423,8],[442,0,444,7],[444,0,446,6],[444,12,446,10,"action"],[444,18,446,16],[444,19,446,17,"type"],[444,23,446,10],[444,28,446,26,"NavigationActions"],[444,45,446,43],[444,46,446,44,"BACK"],[444,50,446,10],[444,54,446,52,"action"],[444,60,446,58],[444,61,446,59,"type"],[444,65,446,52],[444,70,446,68,"StackActions"],[444,82,446,80],[444,83,446,81,"POP"],[444,86,446,6],[444,88,446,86],[445,0,446,86],[445,14,448,10,"key"],[445,18,446,86],[445,21,452,12,"action"],[445,27,446,86],[445,28,448,10,"key"],[445,31,446,86],[446,0,446,86],[446,14,449,10,"n"],[446,15,446,86],[446,18,452,12,"action"],[446,24,446,86],[446,25,449,10,"n"],[446,26,446,86],[447,0,446,86],[447,14,450,10,"immediate"],[447,23,446,86],[447,26,452,12,"action"],[447,32,446,86],[447,33,450,10,"immediate"],[447,42,446,86],[448,0,446,86],[448,14,451,10,"prune"],[448,19,446,86],[448,22,452,12,"action"],[448,28,446,86],[448,29,451,10,"prune"],[448,34,446,86],[450,0,454,8],[450,14,454,12,"action"],[450,20,454,18],[450,21,454,19,"type"],[450,25,454,12],[450,30,454,28,"StackActions"],[450,42,454,40],[450,43,454,41,"POP"],[450,46,454,12],[450,50,454,48,"prune"],[450,55,454,53],[450,60,454,58],[450,65,454,12],[450,69,454,67,"key"],[450,73,454,8],[450,75,454,72],[451,0,455,10],[451,16,455,16,"index"],[451,21,455,21],[451,24,455,24,"state"],[451,29,455,29],[451,30,455,30,"routes"],[451,36,455,24],[451,37,455,37,"findIndex"],[451,46,455,24],[451,47,455,47],[451,57,455,47,"r"],[451,58,455,48],[452,0,455,48],[452,21,455,52,"r"],[452,22,455,53],[452,23,455,54,"key"],[452,26,455,52],[452,31,455,62,"key"],[452,35,455,48],[453,0,455,48],[453,13,455,24],[453,14,455,10],[455,0,457,10],[455,16,457,14,"index"],[455,21,457,19],[455,24,457,22],[455,25,457,10],[455,27,457,25],[456,0,458,12],[456,18,458,18,"count"],[456,23,458,23],[456,26,458,26,"Math"],[456,30,458,30],[456,31,458,31,"max"],[456,34,458,26],[456,35,458,35,"index"],[456,40,458,40],[456,44,458,44,"n"],[456,45,458,45],[456,50,458,50],[456,54,458,44],[456,58,458,58,"n"],[456,59,458,59],[456,64,458,64],[456,69,458,69],[456,70,458,44],[456,73,458,73,"n"],[456,74,458,44],[456,77,458,77],[456,78,458,40],[456,79,458,35],[456,82,458,82],[456,83,458,26],[456,85,458,85],[456,86,458,26],[456,87,458,12],[458,0,459,12],[458,18,459,18,"routes"],[458,26,459,24],[458,29,459,27,"state"],[458,34,459,32],[458,35,459,33,"routes"],[458,41,459,27],[458,42,459,40,"slice"],[458,47,459,27],[458,48,459,46],[458,49,459,27],[458,51,459,49,"count"],[458,56,459,27],[458,58,459,56,"concat"],[458,64,459,27],[458,65,459,63,"state"],[458,70,459,68],[458,71,459,69,"routes"],[458,77,459,63],[458,78,459,76,"slice"],[458,83,459,63],[458,84,459,82,"index"],[458,89,459,87],[458,92,459,90],[458,93,459,63],[458,94,459,27],[458,95,459,12],[460,0,461,12],[460,18,461,16,"routes"],[460,26,461,22],[460,27,461,23,"length"],[460,33,461,12],[460,35,461,31],[461,0,462,14],[461,55,462,26,"state"],[461,60,462,14],[462,0,463,16,"routes"],[462,18,463,16,"routes"],[462,24,463,22],[462,26,463,16,"routes"],[462,34,462,14],[463,0,464,16,"index"],[463,18,464,16,"index"],[463,23,464,21],[463,25,464,23,"routes"],[463,33,464,29],[463,34,464,30,"length"],[463,40,464,23],[463,43,464,39],[463,44,462,14],[464,0,465,16,"isTransitioning"],[464,18,465,16,"isTransitioning"],[464,33,465,31],[464,35,465,33,"immediate"],[464,44,465,42],[464,49,465,47],[465,0,462,14],[466,0,467,13],[467,0,468,11],[468,0,469,9],[468,11,454,8],[468,17,469,15],[469,0,470,10],[469,16,470,14,"backRouteIndex"],[469,30,470,28],[469,33,470,31,"state"],[469,38,470,36],[469,39,470,37,"index"],[469,44,470,10],[471,0,472,10],[471,16,472,14,"action"],[471,22,472,20],[471,23,472,21,"type"],[471,27,472,14],[471,32,472,30,"StackActions"],[471,44,472,42],[471,45,472,43,"POP"],[471,48,472,14],[471,52,472,50,"n"],[471,53,472,51],[471,57,472,55],[471,61,472,10],[471,63,472,61],[472,0,475,12,"backRouteIndex"],[472,14,475,12,"backRouteIndex"],[472,28,475,26],[472,31,475,29,"Math"],[472,35,475,33],[472,36,475,34,"max"],[472,39,475,29],[472,40,475,38],[472,41,475,29],[472,43,475,41,"state"],[472,48,475,46],[472,49,475,47,"index"],[472,54,475,41],[472,57,475,55,"n"],[472,58,475,41],[472,61,475,59],[472,62,475,29],[472,63,475,12],[473,0,476,11],[473,13,472,10],[473,19,476,17],[473,23,476,21,"key"],[473,27,476,17],[473,29,476,26],[474,0,477,12],[474,18,477,18,"backRoute"],[474,27,477,27],[474,30,477,30,"state"],[474,35,477,35],[474,36,477,36,"routes"],[474,42,477,30],[474,43,477,43,"find"],[474,47,477,30],[474,48,477,48],[474,58,477,48,"route"],[474,63,477,53],[475,0,477,53],[475,23,477,57,"route"],[475,28,477,62],[475,29,477,63,"key"],[475,32,477,57],[475,37,477,71,"key"],[475,41,477,53],[476,0,477,53],[476,15,477,30],[476,16,477,12],[477,0,478,12,"backRouteIndex"],[477,14,478,12,"backRouteIndex"],[477,28,478,26],[477,31,478,29,"state"],[477,36,478,34],[477,37,478,35,"routes"],[477,43,478,29],[477,44,478,42,"indexOf"],[477,51,478,29],[477,52,478,50,"backRoute"],[477,61,478,29],[477,62,478,12],[478,0,479,11],[480,0,481,10],[480,16,481,14,"backRouteIndex"],[480,30,481,28],[480,33,481,31],[480,34,481,10],[480,36,481,34],[481,0,482,12],[481,53,482,24,"state"],[481,58,482,12],[482,0,483,14,"routes"],[482,16,483,14,"routes"],[482,22,483,20],[482,24,483,22,"state"],[482,29,483,27],[482,30,483,28,"routes"],[482,36,483,22],[482,37,483,35,"slice"],[482,42,483,22],[482,43,483,41],[482,44,483,22],[482,46,483,44,"backRouteIndex"],[482,60,483,22],[482,61,482,12],[483,0,484,14,"index"],[483,16,484,14,"index"],[483,21,484,19],[483,23,484,21,"backRouteIndex"],[483,37,484,35],[483,40,484,38],[483,41,482,12],[484,0,485,14,"isTransitioning"],[484,16,485,14,"isTransitioning"],[484,31,485,29],[484,33,485,31,"immediate"],[484,42,485,40],[484,47,485,45],[485,0,482,12],[486,0,487,11],[487,0,488,9],[488,0,489,7],[490,0,493,6],[490,12,493,12,"keyIndex"],[490,20,493,20],[490,23,493,23,"action"],[490,29,493,29],[490,30,493,30,"key"],[490,33,493,23],[490,36,493,36,"StateUtils"],[490,56,493,47,"indexOf"],[490,63,493,36],[490,64,493,55,"state"],[490,69,493,36],[490,71,493,62,"action"],[490,77,493,68],[490,78,493,69,"key"],[490,81,493,36],[490,82,493,23],[490,85,493,76],[490,86,493,77],[490,87,493,6],[492,0,496,6],[492,62,496,29,"state"],[492,67,496,34],[492,68,496,35,"routes"],[492,74,496,29],[492,75,496,42,"slice"],[492,80,496,29],[492,83,496,50,"reverse"],[492,90,496,29],[492,92,496,6],[492,135,496,61],[493,0,496,61],[493,14,496,15,"childRoute"],[493,25,496,61],[495,0,497,8],[495,14,497,12,"childRoute"],[495,25,497,22],[495,26,497,23,"key"],[495,29,497,12],[495,34,497,31,"activeChildRoute"],[495,50,497,47],[495,51,497,48,"key"],[495,54,497,8],[495,56,497,53],[496,0,499,10],[497,0,500,9],[499,0,505,8],[499,14,505,12,"keyIndex"],[499,22,505,20],[499,26,505,24],[499,27,505,12],[499,31,505,29,"childRoute"],[499,42,505,39],[499,43,505,40,"key"],[499,46,505,29],[499,51,505,48,"action"],[499,57,505,54],[499,58,505,55,"key"],[499,61,505,8],[499,63,505,60],[500,0,506,10],[501,0,507,9],[503,0,509,8],[503,14,509,12,"childRouter"],[503,27,509,23],[503,30,509,26,"childRouters"],[503,42,509,38],[503,43,509,39,"childRoute"],[503,54,509,49],[503,55,509,50,"routeName"],[503,64,509,38],[503,65,509,8],[505,0,511,8],[505,14,511,12,"childRouter"],[505,27,511,8],[505,29,511,25],[506,0,512,10],[506,16,512,16,"route"],[506,23,512,21],[506,26,512,24,"childRouter"],[506,39,512,35],[506,40,512,36,"getStateForAction"],[506,57,512,24],[506,58,512,54,"action"],[506,64,512,24],[506,66,512,62,"childRoute"],[506,77,512,24],[506,78,512,10],[508,0,514,10],[508,16,514,14,"route"],[508,23,514,19],[508,28,514,24],[508,32,514,10],[508,34,514,30],[509,0,515,12],[509,21,515,19,"state"],[509,26,515,12],[510,0,516,11],[510,13,514,10],[510,19,516,17],[510,23,516,21,"route"],[510,30,516,26],[510,34,516,30,"route"],[510,41,516,35],[510,46,516,40,"childRoute"],[510,57,516,17],[510,59,516,52],[511,0,517,12],[511,21,517,19,"StateUtils"],[511,41,517,30,"replaceAt"],[511,50,517,19],[511,51,517,40,"state"],[511,56,517,19],[511,58,517,47,"childRoute"],[511,69,517,57],[511,70,517,58,"key"],[511,73,517,19],[511,75,517,63,"route"],[511,82,517,19],[511,84,519,12,"action"],[511,90,519,18],[511,91,519,19,"preserveFocus"],[511,104,519,12],[511,108,519,36,"action"],[511,114,519,42],[511,115,519,43,"type"],[511,119,519,36],[511,120,519,48,"includes"],[511,128,519,36],[511,129,519,57],[511,137,519,36],[511,138,517,19],[511,139,517,12],[512,0,520,11],[513,0,521,9],[514,0,522,7],[516,0,524,6],[516,15,524,13,"state"],[516,20,524,6],[517,0,525,5],[517,7,122,9],[518,0,527,4,"getPathAndParamsForState"],[518,6,527,4,"getPathAndParamsForState"],[518,30,122,9],[518,66,527,29,"state"],[518,71,122,9],[518,73,527,36],[519,0,528,6],[519,12,528,12,"route"],[519,17,528,17],[519,20,528,20,"state"],[519,25,528,25],[519,26,528,26,"routes"],[519,32,528,20],[519,33,528,33,"state"],[519,38,528,38],[519,39,528,39,"index"],[519,44,528,20],[519,45,528,6],[520,0,529,6],[520,15,529,13,"getPathAndParamsForRoute"],[520,39,529,37],[520,40,529,38,"route"],[520,45,529,37],[520,46,529,6],[521,0,530,5],[521,7,122,9],[522,0,532,4,"getActionForPathAndParams"],[522,6,532,4,"getActionForPathAndParams"],[522,31,122,9],[522,68,532,30,"path"],[522,72,122,9],[522,74,532,36,"params"],[522,80,122,9],[522,82,532,44],[523,0,533,6],[523,15,533,13,"getActionForPathAndParams"],[523,41,533,38],[523,42,533,39,"path"],[523,46,533,38],[523,48,533,45,"params"],[523,54,533,38],[523,55,533,6],[524,0,534,5],[524,7,122,9],[525,0,536,4,"getScreenOptions"],[525,6,536,4,"getScreenOptions"],[525,22,536,20],[525,24,536,22],[525,57,536,41,"routeConfigs"],[525,69,536,22],[525,71,536,55,"stackConfig"],[525,82,536,66],[525,83,536,67,"defaultNavigationOptions"],[525,107,536,22],[526,0,122,9],[526,5,122,2],[527,0,538,1],[527,3]],"functionMap":{"names":["<global>","behavesLikePushAction","defaultActionCreators","isResetToRootStack","<anonymous>","routeNames.forEach$argument_0","getInitialState","getParamsForRouteAndAction","getComponentForState","getComponentForRouteName","getActionCreators","pop","popToTop","push","replace","reset","dismiss","getStateForAction","state.routes.findIndex$argument_0","state.routes.find$argument_0","newStackActions.map$argument_0","getPathAndParamsForState","getActionForPathAndParams"],"mappings":"AAA;ACU;CDE;8BEE,UF;AGE;CHE;gBIE;qBCM;GDc;EEQ;GFuD;EGE;GHU;IIS;KJW;IKE;KLE;IME;aCE;UDG;kBEC,uCF;cGC;UHI;iBIC;SJgB;eKC;ULI;iBMC;UNE;KNE;IaE;wDCiD;WDM;8CC2H,yBD;4CEsC,0BF;sCG0B;WHiB;+CCc,kBD;gDEsB,0BF;KbgD;IiBE;KjBG;IkBE;KlBE;CJI"}},"type":"js/module"}]}