{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"code-push/script/acquisition-sdk","data":{"isAsync":false}},{"name":"./AlertAdapter","data":{"isAsync":false}},{"name":"./request-fetch-adapter","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./RestartManager","data":{"isAsync":false}},{"name":"./logging","data":{"isAsync":false}},{"name":"hoist-non-react-statics","data":{"isAsync":false}},{"name":"./package-mixins","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _acquisitionSdk = _$$_REQUIRE(_dependencyMap[9], \"code-push/script/acquisition-sdk\");\n\n  var _AlertAdapter = _$$_REQUIRE(_dependencyMap[10], \"./AlertAdapter\");\n\n  var _requestFetchAdapter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./request-fetch-adapter\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[12], \"react-native\");\n\n  var _RestartManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./RestartManager\"));\n\n  var _logging = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./logging\"));\n\n  var _hoistNonReactStatics = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"hoist-non-react-statics\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var NativeCodePush = _$$_REQUIRE(_dependencyMap[12], \"react-native\").NativeModules.CodePush;\n\n  var PackageMixins = _$$_REQUIRE(_dependencyMap[16], \"./package-mixins\")(NativeCodePush);\n\n  function checkForUpdate() {\n    var deploymentKey,\n        handleBinaryVersionMismatchCallback,\n        nativeConfig,\n        config,\n        sdk,\n        localPackage,\n        queryPackage,\n        update,\n        remotePackage,\n        _args = arguments;\n    return _regenerator.default.async(function checkForUpdate$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            deploymentKey = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n            handleBinaryVersionMismatchCallback = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n            _context.next = 4;\n            return _regenerator.default.awrap(getConfiguration());\n\n          case 4:\n            nativeConfig = _context.sent;\n            config = deploymentKey ? _objectSpread(_objectSpread({}, nativeConfig), {\n              deploymentKey: deploymentKey\n            }) : nativeConfig;\n            sdk = getPromisifiedSdk(_requestFetchAdapter.default, config);\n            _context.next = 9;\n            return _regenerator.default.awrap(module.exports.getCurrentPackage());\n\n          case 9:\n            localPackage = _context.sent;\n\n            if (localPackage) {\n              queryPackage = localPackage;\n            } else {\n              queryPackage = {\n                appVersion: config.appVersion\n              };\n\n              if (_reactNative.Platform.OS === \"ios\" && config.packageHash) {\n                queryPackage.packageHash = config.packageHash;\n              }\n            }\n\n            _context.next = 13;\n            return _regenerator.default.awrap(sdk.queryUpdateWithCurrentPackage(queryPackage));\n\n          case 13:\n            update = _context.sent;\n\n            if (!(!update || update.updateAppVersion || localPackage && update.packageHash === localPackage.packageHash || (!localPackage || localPackage._isDebugOnly) && config.packageHash === update.packageHash)) {\n              _context.next = 19;\n              break;\n            }\n\n            if (update && update.updateAppVersion) {\n              (0, _logging.default)(\"An update is available but it is not targeting the binary version of your app.\");\n\n              if (handleBinaryVersionMismatchCallback && typeof handleBinaryVersionMismatchCallback === \"function\") {\n                handleBinaryVersionMismatchCallback(update);\n              }\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 19:\n            remotePackage = _objectSpread(_objectSpread({}, update), PackageMixins.remote(sdk.reportStatusDownload));\n            _context.next = 22;\n            return _regenerator.default.awrap(NativeCodePush.isFailedUpdate(remotePackage.packageHash));\n\n          case 22:\n            remotePackage.failedInstall = _context.sent;\n            remotePackage.deploymentKey = deploymentKey || nativeConfig.deploymentKey;\n            return _context.abrupt(\"return\", remotePackage);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var getConfiguration = function () {\n    var config;\n    return function getConfiguration() {\n      return _regenerator.default.async(function getConfiguration$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!config) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", config);\n\n            case 4:\n              if (!testConfig) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", testConfig);\n\n            case 8:\n              _context2.next = 10;\n              return _regenerator.default.awrap(NativeCodePush.getConfiguration());\n\n            case 10:\n              config = _context2.sent;\n              return _context2.abrupt(\"return\", config);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }();\n\n  function getCurrentPackage() {\n    return _regenerator.default.async(function getCurrentPackage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(getUpdateMetadata(CodePush.UpdateState.LATEST));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getUpdateMetadata(updateState) {\n    var updateMetadata;\n    return _regenerator.default.async(function getUpdateMetadata$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regenerator.default.awrap(NativeCodePush.getUpdateMetadata(updateState || CodePush.UpdateState.RUNNING));\n\n          case 2:\n            updateMetadata = _context4.sent;\n\n            if (!updateMetadata) {\n              _context4.next = 11;\n              break;\n            }\n\n            updateMetadata = _objectSpread(_objectSpread({}, PackageMixins.local), updateMetadata);\n            _context4.next = 7;\n            return _regenerator.default.awrap(NativeCodePush.isFailedUpdate(updateMetadata.packageHash));\n\n          case 7:\n            updateMetadata.failedInstall = _context4.sent;\n            _context4.next = 10;\n            return _regenerator.default.awrap(NativeCodePush.isFirstRun(updateMetadata.packageHash));\n\n          case 10:\n            updateMetadata.isFirstRun = _context4.sent;\n\n          case 11:\n            return _context4.abrupt(\"return\", updateMetadata);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function getPromisifiedSdk(requestFetchAdapter, config) {\n    var sdk = new module.exports.AcquisitionSdk(requestFetchAdapter, config);\n\n    sdk.queryUpdateWithCurrentPackage = function (queryPackage) {\n      return new Promise(function (resolve, reject) {\n        module.exports.AcquisitionSdk.prototype.queryUpdateWithCurrentPackage.call(sdk, queryPackage, function (err, update) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(update);\n          }\n        });\n      });\n    };\n\n    sdk.reportStatusDeploy = function (deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey) {\n      return new Promise(function (resolve, reject) {\n        module.exports.AcquisitionSdk.prototype.reportStatusDeploy.call(sdk, deployedPackage, status, previousLabelOrAppVersion, previousDeploymentKey, function (err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    };\n\n    sdk.reportStatusDownload = function (downloadedPackage) {\n      return new Promise(function (resolve, reject) {\n        module.exports.AcquisitionSdk.prototype.reportStatusDownload.call(sdk, downloadedPackage, function (err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    };\n\n    return sdk;\n  }\n\n  var notifyApplicationReady = function () {\n    var notifyApplicationReadyPromise;\n    return function () {\n      if (!notifyApplicationReadyPromise) {\n        notifyApplicationReadyPromise = notifyApplicationReadyInternal();\n      }\n\n      return notifyApplicationReadyPromise;\n    };\n  }();\n\n  function notifyApplicationReadyInternal() {\n    var statusReport;\n    return _regenerator.default.async(function notifyApplicationReadyInternal$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regenerator.default.awrap(NativeCodePush.notifyApplicationReady());\n\n          case 2:\n            _context5.next = 4;\n            return _regenerator.default.awrap(NativeCodePush.getNewStatusReport());\n\n          case 4:\n            statusReport = _context5.sent;\n            statusReport && tryReportStatus(statusReport);\n            return _context5.abrupt(\"return\", statusReport);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function tryReportStatus(statusReport, _resumeListener) {\n    var config, previousLabelOrAppVersion, previousDeploymentKey, sdk, label, _sdk;\n\n    return _regenerator.default.async(function tryReportStatus$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regenerator.default.awrap(getConfiguration());\n\n          case 2:\n            config = _context7.sent;\n            previousLabelOrAppVersion = statusReport.previousLabelOrAppVersion;\n            previousDeploymentKey = statusReport.previousDeploymentKey || config.deploymentKey;\n            _context7.prev = 5;\n\n            if (!statusReport.appVersion) {\n              _context7.next = 13;\n              break;\n            }\n\n            (0, _logging.default)(\"Reporting binary update (\" + statusReport.appVersion + \")\");\n            sdk = getPromisifiedSdk(_requestFetchAdapter.default, config);\n            _context7.next = 11;\n            return _regenerator.default.awrap(sdk.reportStatusDeploy(null, null, previousLabelOrAppVersion, previousDeploymentKey));\n\n          case 11:\n            _context7.next = 25;\n            break;\n\n          case 13:\n            label = statusReport.package.label;\n\n            if (!(statusReport.status === \"DeploymentSucceeded\")) {\n              _context7.next = 18;\n              break;\n            }\n\n            (0, _logging.default)(\"Reporting CodePush update success (\" + label + \")\");\n            _context7.next = 21;\n            break;\n\n          case 18:\n            (0, _logging.default)(\"Reporting CodePush update rollback (\" + label + \")\");\n            _context7.next = 21;\n            return _regenerator.default.awrap(NativeCodePush.setLatestRollbackInfo(statusReport.package.packageHash));\n\n          case 21:\n            config.deploymentKey = statusReport.package.deploymentKey;\n            _sdk = getPromisifiedSdk(_requestFetchAdapter.default, config);\n            _context7.next = 25;\n            return _regenerator.default.awrap(_sdk.reportStatusDeploy(statusReport.package, statusReport.status, previousLabelOrAppVersion, previousDeploymentKey));\n\n          case 25:\n            NativeCodePush.recordStatusReported(statusReport);\n            _resumeListener && _reactNative.AppState.removeEventListener(\"change\", _resumeListener);\n            _context7.next = 34;\n            break;\n\n          case 29:\n            _context7.prev = 29;\n            _context7.t0 = _context7[\"catch\"](5);\n            (0, _logging.default)(\"Report status failed: \" + JSON.stringify(statusReport));\n            NativeCodePush.saveStatusReportForRetry(statusReport);\n\n            if (!_resumeListener) {\n              _resumeListener = function resumeListener(newState) {\n                var refreshedStatusReport;\n                return _regenerator.default.async(function resumeListener$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (!(newState !== \"active\")) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\");\n\n                      case 2:\n                        _context6.next = 4;\n                        return _regenerator.default.awrap(NativeCodePush.getNewStatusReport());\n\n                      case 4:\n                        refreshedStatusReport = _context6.sent;\n\n                        if (refreshedStatusReport) {\n                          tryReportStatus(refreshedStatusReport, _resumeListener);\n                        } else {\n                          _reactNative.AppState.removeEventListener(\"change\", _resumeListener);\n                        }\n\n                      case 6:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              };\n\n              _reactNative.AppState.addEventListener(\"change\", _resumeListener);\n            }\n\n          case 34:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[5, 29]], Promise);\n  }\n\n  function shouldUpdateBeIgnored(remotePackage, syncOptions) {\n    var rollbackRetryOptions, isFailedPackage, latestRollbackInfo, _rollbackRetryOptions, delayInHours, maxRetryAttempts, hoursSinceLatestRollback;\n\n    return _regenerator.default.async(function shouldUpdateBeIgnored$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            rollbackRetryOptions = syncOptions.rollbackRetryOptions;\n            isFailedPackage = remotePackage && remotePackage.failedInstall;\n\n            if (!(!isFailedPackage || !syncOptions.ignoreFailedUpdates)) {\n              _context8.next = 4;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", false);\n\n          case 4:\n            if (rollbackRetryOptions) {\n              _context8.next = 6;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", true);\n\n          case 6:\n            if (typeof rollbackRetryOptions !== \"object\") {\n              rollbackRetryOptions = CodePush.DEFAULT_ROLLBACK_RETRY_OPTIONS;\n            } else {\n              rollbackRetryOptions = _objectSpread(_objectSpread({}, CodePush.DEFAULT_ROLLBACK_RETRY_OPTIONS), rollbackRetryOptions);\n            }\n\n            if (validateRollbackRetryOptions(rollbackRetryOptions)) {\n              _context8.next = 9;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", true);\n\n          case 9:\n            _context8.next = 11;\n            return _regenerator.default.awrap(NativeCodePush.getLatestRollbackInfo());\n\n          case 11:\n            latestRollbackInfo = _context8.sent;\n\n            if (validateLatestRollbackInfo(latestRollbackInfo, remotePackage.packageHash)) {\n              _context8.next = 15;\n              break;\n            }\n\n            (0, _logging.default)(\"The latest rollback info is not valid.\");\n            return _context8.abrupt(\"return\", true);\n\n          case 15:\n            _rollbackRetryOptions = rollbackRetryOptions, delayInHours = _rollbackRetryOptions.delayInHours, maxRetryAttempts = _rollbackRetryOptions.maxRetryAttempts;\n            hoursSinceLatestRollback = (Date.now() - latestRollbackInfo.time) / (1000 * 60 * 60);\n\n            if (!(hoursSinceLatestRollback >= delayInHours && maxRetryAttempts >= latestRollbackInfo.count)) {\n              _context8.next = 20;\n              break;\n            }\n\n            (0, _logging.default)(\"Previous rollback should be ignored due to rollback retry options.\");\n            return _context8.abrupt(\"return\", false);\n\n          case 20:\n            return _context8.abrupt(\"return\", true);\n\n          case 21:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function validateLatestRollbackInfo(latestRollbackInfo, packageHash) {\n    return latestRollbackInfo && latestRollbackInfo.time && latestRollbackInfo.count && latestRollbackInfo.packageHash && latestRollbackInfo.packageHash === packageHash;\n  }\n\n  function validateRollbackRetryOptions(rollbackRetryOptions) {\n    if (typeof rollbackRetryOptions.delayInHours !== \"number\") {\n      (0, _logging.default)(\"The 'delayInHours' rollback retry parameter must be a number.\");\n      return false;\n    }\n\n    if (typeof rollbackRetryOptions.maxRetryAttempts !== \"number\") {\n      (0, _logging.default)(\"The 'maxRetryAttempts' rollback retry parameter must be a number.\");\n      return false;\n    }\n\n    if (rollbackRetryOptions.maxRetryAttempts < 1) {\n      (0, _logging.default)(\"The 'maxRetryAttempts' rollback retry parameter cannot be less then 1.\");\n      return false;\n    }\n\n    return true;\n  }\n\n  var testConfig;\n\n  function setUpTestDependencies(testSdk, providedTestConfig, testNativeBridge) {\n    if (testSdk) module.exports.AcquisitionSdk = testSdk;\n    if (providedTestConfig) testConfig = providedTestConfig;\n    if (testNativeBridge) NativeCodePush = testNativeBridge;\n  }\n\n  var sync = function () {\n    var syncInProgress = false;\n\n    var setSyncCompleted = function setSyncCompleted() {\n      syncInProgress = false;\n    };\n\n    return function () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var syncStatusChangeCallback = arguments.length > 1 ? arguments[1] : undefined;\n      var downloadProgressCallback = arguments.length > 2 ? arguments[2] : undefined;\n      var handleBinaryVersionMismatchCallback = arguments.length > 3 ? arguments[3] : undefined;\n      var syncStatusCallbackWithTryCatch, downloadProgressCallbackWithTryCatch;\n\n      if (typeof syncStatusChangeCallback === \"function\") {\n        syncStatusCallbackWithTryCatch = function syncStatusCallbackWithTryCatch() {\n          try {\n            syncStatusChangeCallback.apply(void 0, arguments);\n          } catch (error) {\n            (0, _logging.default)(\"An error has occurred : \" + error.stack);\n          }\n        };\n      }\n\n      if (typeof downloadProgressCallback === \"function\") {\n        downloadProgressCallbackWithTryCatch = function downloadProgressCallbackWithTryCatch() {\n          try {\n            downloadProgressCallback.apply(void 0, arguments);\n          } catch (error) {\n            (0, _logging.default)(\"An error has occurred: \" + error.stack);\n          }\n        };\n      }\n\n      if (syncInProgress) {\n        typeof syncStatusCallbackWithTryCatch === \"function\" ? syncStatusCallbackWithTryCatch(CodePush.SyncStatus.SYNC_IN_PROGRESS) : (0, _logging.default)(\"Sync already in progress.\");\n        return Promise.resolve(CodePush.SyncStatus.SYNC_IN_PROGRESS);\n      }\n\n      syncInProgress = true;\n      var syncPromise = syncInternal(options, syncStatusCallbackWithTryCatch, downloadProgressCallbackWithTryCatch, handleBinaryVersionMismatchCallback);\n      syncPromise.then(setSyncCompleted).catch(setSyncCompleted);\n      return syncPromise;\n    };\n  }();\n\n  function syncInternal() {\n    var options,\n        syncStatusChangeCallback,\n        downloadProgressCallback,\n        handleBinaryVersionMismatchCallback,\n        resolvedInstallMode,\n        syncOptions,\n        remotePackage,\n        doDownloadAndInstall,\n        updateShouldBeIgnored,\n        currentPackage,\n        _args10 = arguments;\n    return _regenerator.default.async(function syncInternal$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            options = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {};\n            syncStatusChangeCallback = _args10.length > 1 ? _args10[1] : undefined;\n            downloadProgressCallback = _args10.length > 2 ? _args10[2] : undefined;\n            handleBinaryVersionMismatchCallback = _args10.length > 3 ? _args10[3] : undefined;\n            syncOptions = _objectSpread({\n              deploymentKey: null,\n              ignoreFailedUpdates: true,\n              rollbackRetryOptions: null,\n              installMode: CodePush.InstallMode.ON_NEXT_RESTART,\n              mandatoryInstallMode: CodePush.InstallMode.IMMEDIATE,\n              minimumBackgroundDuration: 0,\n              updateDialog: null\n            }, options);\n            syncStatusChangeCallback = typeof syncStatusChangeCallback === \"function\" ? syncStatusChangeCallback : function (syncStatus) {\n              switch (syncStatus) {\n                case CodePush.SyncStatus.CHECKING_FOR_UPDATE:\n                  (0, _logging.default)(\"Checking for update.\");\n                  break;\n\n                case CodePush.SyncStatus.AWAITING_USER_ACTION:\n                  (0, _logging.default)(\"Awaiting user action.\");\n                  break;\n\n                case CodePush.SyncStatus.DOWNLOADING_PACKAGE:\n                  (0, _logging.default)(\"Downloading package.\");\n                  break;\n\n                case CodePush.SyncStatus.INSTALLING_UPDATE:\n                  (0, _logging.default)(\"Installing update.\");\n                  break;\n\n                case CodePush.SyncStatus.UP_TO_DATE:\n                  (0, _logging.default)(\"App is up to date.\");\n                  break;\n\n                case CodePush.SyncStatus.UPDATE_IGNORED:\n                  (0, _logging.default)(\"User cancelled the update.\");\n                  break;\n\n                case CodePush.SyncStatus.UPDATE_INSTALLED:\n                  if (resolvedInstallMode == CodePush.InstallMode.ON_NEXT_RESTART) {\n                    (0, _logging.default)(\"Update is installed and will be run on the next app restart.\");\n                  } else if (resolvedInstallMode == CodePush.InstallMode.ON_NEXT_RESUME) {\n                    if (syncOptions.minimumBackgroundDuration > 0) {\n                      (0, _logging.default)(\"Update is installed and will be run after the app has been in the background for at least \" + syncOptions.minimumBackgroundDuration + \" seconds.\");\n                    } else {\n                      (0, _logging.default)(\"Update is installed and will be run when the app next resumes.\");\n                    }\n                  }\n\n                  break;\n\n                case CodePush.SyncStatus.UNKNOWN_ERROR:\n                  (0, _logging.default)(\"An unknown error occurred.\");\n                  break;\n              }\n            };\n            _context10.prev = 6;\n            _context10.next = 9;\n            return _regenerator.default.awrap(CodePush.notifyApplicationReady());\n\n          case 9:\n            syncStatusChangeCallback(CodePush.SyncStatus.CHECKING_FOR_UPDATE);\n            _context10.next = 12;\n            return _regenerator.default.awrap(checkForUpdate(syncOptions.deploymentKey, handleBinaryVersionMismatchCallback));\n\n          case 12:\n            remotePackage = _context10.sent;\n\n            doDownloadAndInstall = function doDownloadAndInstall() {\n              var localPackage;\n              return _regenerator.default.async(function doDownloadAndInstall$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      syncStatusChangeCallback(CodePush.SyncStatus.DOWNLOADING_PACKAGE);\n                      _context9.next = 3;\n                      return _regenerator.default.awrap(remotePackage.download(downloadProgressCallback));\n\n                    case 3:\n                      localPackage = _context9.sent;\n                      resolvedInstallMode = localPackage.isMandatory ? syncOptions.mandatoryInstallMode : syncOptions.installMode;\n                      syncStatusChangeCallback(CodePush.SyncStatus.INSTALLING_UPDATE);\n                      _context9.next = 8;\n                      return _regenerator.default.awrap(localPackage.install(resolvedInstallMode, syncOptions.minimumBackgroundDuration, function () {\n                        syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);\n                      }));\n\n                    case 8:\n                      return _context9.abrupt(\"return\", CodePush.SyncStatus.UPDATE_INSTALLED);\n\n                    case 9:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            _context10.next = 16;\n            return _regenerator.default.awrap(shouldUpdateBeIgnored(remotePackage, syncOptions));\n\n          case 16:\n            updateShouldBeIgnored = _context10.sent;\n\n            if (!(!remotePackage || updateShouldBeIgnored)) {\n              _context10.next = 31;\n              break;\n            }\n\n            if (updateShouldBeIgnored) {\n              (0, _logging.default)(\"An update is available, but it is being ignored due to having been previously rolled back.\");\n            }\n\n            _context10.next = 21;\n            return _regenerator.default.awrap(CodePush.getCurrentPackage());\n\n          case 21:\n            currentPackage = _context10.sent;\n\n            if (!(currentPackage && currentPackage.isPending)) {\n              _context10.next = 27;\n              break;\n            }\n\n            syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_INSTALLED);\n            return _context10.abrupt(\"return\", CodePush.SyncStatus.UPDATE_INSTALLED);\n\n          case 27:\n            syncStatusChangeCallback(CodePush.SyncStatus.UP_TO_DATE);\n            return _context10.abrupt(\"return\", CodePush.SyncStatus.UP_TO_DATE);\n\n          case 29:\n            _context10.next = 41;\n            break;\n\n          case 31:\n            if (!syncOptions.updateDialog) {\n              _context10.next = 38;\n              break;\n            }\n\n            if (typeof syncOptions.updateDialog !== \"object\") {\n              syncOptions.updateDialog = CodePush.DEFAULT_UPDATE_DIALOG;\n            } else {\n              syncOptions.updateDialog = _objectSpread(_objectSpread({}, CodePush.DEFAULT_UPDATE_DIALOG), syncOptions.updateDialog);\n            }\n\n            _context10.next = 35;\n            return _regenerator.default.awrap(new Promise(function (resolve, reject) {\n              var message = null;\n              var installButtonText = null;\n              var dialogButtons = [];\n\n              if (remotePackage.isMandatory) {\n                message = syncOptions.updateDialog.mandatoryUpdateMessage;\n                installButtonText = syncOptions.updateDialog.mandatoryContinueButtonLabel;\n              } else {\n                message = syncOptions.updateDialog.optionalUpdateMessage;\n                installButtonText = syncOptions.updateDialog.optionalInstallButtonLabel;\n                dialogButtons.push({\n                  text: syncOptions.updateDialog.optionalIgnoreButtonLabel,\n                  onPress: function onPress() {\n                    syncStatusChangeCallback(CodePush.SyncStatus.UPDATE_IGNORED);\n                    resolve(CodePush.SyncStatus.UPDATE_IGNORED);\n                  }\n                });\n              }\n\n              dialogButtons.push({\n                text: installButtonText,\n                onPress: function onPress() {\n                  doDownloadAndInstall().then(resolve, reject);\n                }\n              });\n\n              if (syncOptions.updateDialog.appendReleaseDescription && remotePackage.description) {\n                message += syncOptions.updateDialog.descriptionPrefix + \" \" + remotePackage.description;\n              }\n\n              syncStatusChangeCallback(CodePush.SyncStatus.AWAITING_USER_ACTION);\n\n              _AlertAdapter.Alert.alert(syncOptions.updateDialog.title, message, dialogButtons);\n            }));\n\n          case 35:\n            return _context10.abrupt(\"return\", _context10.sent);\n\n          case 38:\n            _context10.next = 40;\n            return _regenerator.default.awrap(doDownloadAndInstall());\n\n          case 40:\n            return _context10.abrupt(\"return\", _context10.sent);\n\n          case 41:\n            _context10.next = 48;\n            break;\n\n          case 43:\n            _context10.prev = 43;\n            _context10.t0 = _context10[\"catch\"](6);\n            syncStatusChangeCallback(CodePush.SyncStatus.UNKNOWN_ERROR);\n            (0, _logging.default)(_context10.t0.message);\n            throw _context10.t0;\n\n          case 48:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, [[6, 43]], Promise);\n  }\n\n  ;\n  var CodePush;\n\n  function codePushify() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var React;\n\n    var ReactNative = _$$_REQUIRE(_dependencyMap[12], \"react-native\");\n\n    try {\n      React = _$$_REQUIRE(_dependencyMap[17], \"react\");\n    } catch (e) {}\n\n    if (!React) {\n      try {\n        React = ReactNative.React;\n      } catch (e) {}\n\n      if (!React) {\n        throw new Error(\"Unable to find the 'React' module.\");\n      }\n    }\n\n    if (!React.Component) {\n      throw new Error(\"Unable to find the \\\"Component\\\" class, please either:\\n1. Upgrade to a newer version of React Native that supports it, or\\n2. Call the codePush.sync API in your component instead of using the @codePush decorator\");\n    }\n\n    var decorator = function decorator(RootComponent) {\n      var extended = function (_React$Component) {\n        (0, _inherits2.default)(CodePushComponent, _React$Component);\n\n        var _super = _createSuper(CodePushComponent);\n\n        function CodePushComponent() {\n          (0, _classCallCheck2.default)(this, CodePushComponent);\n          return _super.apply(this, arguments);\n        }\n\n        (0, _createClass2.default)(CodePushComponent, [{\n          key: \"componentDidMount\",\n          value: function componentDidMount() {\n            if (options.checkFrequency === CodePush.CheckFrequency.MANUAL) {\n              CodePush.notifyAppReady();\n            } else {\n              var rootComponentInstance = this.refs.rootComponent;\n              var syncStatusCallback;\n\n              if (rootComponentInstance && rootComponentInstance.codePushStatusDidChange) {\n                syncStatusCallback = rootComponentInstance.codePushStatusDidChange;\n\n                if (rootComponentInstance instanceof React.Component) {\n                  syncStatusCallback = syncStatusCallback.bind(rootComponentInstance);\n                }\n              }\n\n              var _downloadProgressCallback;\n\n              if (rootComponentInstance && rootComponentInstance.codePushDownloadDidProgress) {\n                _downloadProgressCallback = rootComponentInstance.codePushDownloadDidProgress;\n\n                if (rootComponentInstance instanceof React.Component) {\n                  _downloadProgressCallback = _downloadProgressCallback.bind(rootComponentInstance);\n                }\n              }\n\n              var handleBinaryVersionMismatchCallback;\n\n              if (rootComponentInstance && rootComponentInstance.codePushOnBinaryVersionMismatch) {\n                handleBinaryVersionMismatchCallback = rootComponentInstance.codePushOnBinaryVersionMismatch;\n\n                if (rootComponentInstance instanceof React.Component) {\n                  handleBinaryVersionMismatchCallback = handleBinaryVersionMismatchCallback.bind(rootComponentInstance);\n                }\n              }\n\n              CodePush.sync(options, syncStatusCallback, _downloadProgressCallback, handleBinaryVersionMismatchCallback);\n\n              if (options.checkFrequency === CodePush.CheckFrequency.ON_APP_RESUME) {\n                ReactNative.AppState.addEventListener(\"change\", function (newState) {\n                  newState === \"active\" && CodePush.sync(options, syncStatusCallback, _downloadProgressCallback);\n                });\n              }\n            }\n          }\n        }, {\n          key: \"render\",\n          value: function render() {\n            var props = _objectSpread({}, this.props);\n\n            if (RootComponent.prototype.render) {\n              props.ref = \"rootComponent\";\n            }\n\n            return React.createElement(RootComponent, props);\n          }\n        }]);\n        return CodePushComponent;\n      }(React.Component);\n\n      return (0, _hoistNonReactStatics.default)(extended, RootComponent);\n    };\n\n    if (typeof options === \"function\") {\n      return decorator(options);\n    } else {\n      return decorator;\n    }\n  }\n\n  if (NativeCodePush) {\n    CodePush = codePushify;\n    (0, _extends2.default)(CodePush, {\n      AcquisitionSdk: _acquisitionSdk.AcquisitionManager,\n      checkForUpdate: checkForUpdate,\n      getConfiguration: getConfiguration,\n      getCurrentPackage: getCurrentPackage,\n      getUpdateMetadata: getUpdateMetadata,\n      log: _logging.default,\n      notifyAppReady: notifyApplicationReady,\n      notifyApplicationReady: notifyApplicationReady,\n      restartApp: _RestartManager.default.restartApp,\n      setUpTestDependencies: setUpTestDependencies,\n      sync: sync,\n      disallowRestart: _RestartManager.default.disallow,\n      allowRestart: _RestartManager.default.allow,\n      clearUpdates: NativeCodePush.clearUpdates,\n      InstallMode: {\n        IMMEDIATE: NativeCodePush.codePushInstallModeImmediate,\n        ON_NEXT_RESTART: NativeCodePush.codePushInstallModeOnNextRestart,\n        ON_NEXT_RESUME: NativeCodePush.codePushInstallModeOnNextResume,\n        ON_NEXT_SUSPEND: NativeCodePush.codePushInstallModeOnNextSuspend\n      },\n      SyncStatus: {\n        UP_TO_DATE: 0,\n        UPDATE_INSTALLED: 1,\n        UPDATE_IGNORED: 2,\n        UNKNOWN_ERROR: 3,\n        SYNC_IN_PROGRESS: 4,\n        CHECKING_FOR_UPDATE: 5,\n        AWAITING_USER_ACTION: 6,\n        DOWNLOADING_PACKAGE: 7,\n        INSTALLING_UPDATE: 8\n      },\n      CheckFrequency: {\n        ON_APP_START: 0,\n        ON_APP_RESUME: 1,\n        MANUAL: 2\n      },\n      UpdateState: {\n        RUNNING: NativeCodePush.codePushUpdateStateRunning,\n        PENDING: NativeCodePush.codePushUpdateStatePending,\n        LATEST: NativeCodePush.codePushUpdateStateLatest\n      },\n      DeploymentStatus: {\n        FAILED: \"DeploymentFailed\",\n        SUCCEEDED: \"DeploymentSucceeded\"\n      },\n      DEFAULT_UPDATE_DIALOG: {\n        appendReleaseDescription: false,\n        descriptionPrefix: \" Description: \",\n        mandatoryContinueButtonLabel: \"Continue\",\n        mandatoryUpdateMessage: \"An update is available that must be installed.\",\n        optionalIgnoreButtonLabel: \"Ignore\",\n        optionalInstallButtonLabel: \"Install\",\n        optionalUpdateMessage: \"An update is available. Would you like to install it?\",\n        title: \"Update available\"\n      },\n      DEFAULT_ROLLBACK_RETRY_OPTIONS: {\n        delayInHours: 24,\n        maxRetryAttempts: 1\n      }\n    });\n  } else {\n    (0, _logging.default)(\"The CodePush module doesn't appear to be properly installed. Please double-check that everything is setup correctly.\");\n  }\n\n  module.exports = CodePush;\n});","lineCount":978,"map":[[20,0,1,0],[22,0,2,0],[24,0,3,0],[26,0,4,0],[28,0,5,0],[30,0,6,0],[32,0,7,0],[42,0,9,0],[42,6,9,4,"NativeCodePush"],[42,20,9,18],[42,23,9,21,"require"],[42,34,9,28],[42,70,9,21],[42,71,9,45,"NativeModules"],[42,84,9,21],[42,85,9,59,"CodePush"],[42,93,9,0],[44,0,10,0],[44,6,10,6,"PackageMixins"],[44,19,10,19],[44,22,10,22,"require"],[44,33,10,29],[44,73,10,22],[44,74,10,50,"NativeCodePush"],[44,88,10,22],[44,89,10,0],[46,0,12,0],[46,11,12,15,"checkForUpdate"],[46,25,12,0],[47,0,12,0],[48,0,12,0],[49,0,12,0],[50,0,12,0],[51,0,12,0],[52,0,12,0],[53,0,12,0],[54,0,12,0],[55,0,12,0],[56,0,12,0],[57,0,12,0],[58,0,12,0],[59,0,12,0],[60,0,12,0],[61,0,12,30,"deploymentKey"],[61,12,12,30,"deploymentKey"],[61,25,12,0],[61,84,12,46],[61,88,12,0],[62,0,12,52,"handleBinaryVersionMismatchCallback"],[62,12,12,52,"handleBinaryVersionMismatchCallback"],[62,47,12,0],[62,106,12,90],[62,110,12,0],[63,0,12,0],[64,0,12,0],[64,46,22,29,"getConfiguration"],[64,62,22,45],[64,64,12,0],[66,0,12,0],[67,0,22,8,"nativeConfig"],[67,12,22,8,"nativeConfig"],[67,24,12,0],[68,0,30,8,"config"],[68,12,30,8,"config"],[68,18,12,0],[68,21,30,17,"deploymentKey"],[68,34,30,30],[68,69,30,38,"nativeConfig"],[68,81,30,30],[68,84,30,55],[69,0,30,57,"deploymentKey"],[69,14,30,57,"deploymentKey"],[69,27,30,70],[69,29,30,57,"deploymentKey"],[70,0,30,55],[70,13,30,30],[70,17,30,77,"nativeConfig"],[70,29,12,0],[71,0,31,8,"sdk"],[71,12,31,8,"sdk"],[71,15,12,0],[71,18,31,14,"getPromisifiedSdk"],[71,35,31,31],[71,36,31,32,"requestFetchAdapter"],[71,64,31,31],[71,66,31,53,"config"],[71,72,31,31],[71,73,12,0],[72,0,12,0],[73,0,12,0],[73,46,34,29,"module"],[73,52,34,35],[73,53,34,36,"exports"],[73,60,34,29],[73,61,34,44,"getCurrentPackage"],[73,78,34,29],[73,80,12,0],[75,0,12,0],[76,0,34,8,"localPackage"],[76,12,34,8,"localPackage"],[76,24,12,0],[78,0,45,2],[78,16,45,6,"localPackage"],[78,28,45,2],[78,30,45,20],[79,0,46,4,"queryPackage"],[79,14,46,4,"queryPackage"],[79,26,46,16],[79,29,46,19,"localPackage"],[79,41,46,4],[80,0,47,3],[80,13,45,2],[80,19,47,9],[81,0,48,4,"queryPackage"],[81,14,48,4,"queryPackage"],[81,26,48,16],[81,29,48,19],[82,0,48,21,"appVersion"],[82,16,48,21,"appVersion"],[82,26,48,31],[82,28,48,33,"config"],[82,34,48,39],[82,35,48,40,"appVersion"],[83,0,48,19],[83,15,48,4],[85,0,49,4],[85,18,49,8,"Platform"],[85,40,49,17,"OS"],[85,42,49,8],[85,47,49,24],[85,52,49,8],[85,56,49,33,"config"],[85,62,49,39],[85,63,49,40,"packageHash"],[85,74,49,4],[85,76,49,53],[86,0,50,6,"queryPackage"],[86,16,50,6,"queryPackage"],[86,28,50,18],[86,29,50,19,"packageHash"],[86,40,50,6],[86,43,50,33,"config"],[86,49,50,39],[86,50,50,40,"packageHash"],[86,61,50,6],[87,0,51,5],[88,0,52,3],[90,0,12,0],[91,0,12,0],[91,46,54,23,"sdk"],[91,49,54,26],[91,50,54,27,"queryUpdateWithCurrentPackage"],[91,79,54,23],[91,80,54,57,"queryPackage"],[91,92,54,23],[91,93,12,0],[93,0,12,0],[94,0,54,8,"update"],[94,12,54,8,"update"],[94,18,12,0],[96,0,12,0],[96,18,74,6],[96,19,74,7,"update"],[96,25,74,6],[96,29,74,17,"update"],[96,35,74,23],[96,36,74,24,"updateAppVersion"],[96,52,74,6],[96,56,75,6,"localPackage"],[96,68,75,18],[96,72,75,23,"update"],[96,78,75,29],[96,79,75,30,"packageHash"],[96,90,75,23],[96,95,75,46,"localPackage"],[96,107,75,58],[96,108,75,59,"packageHash"],[96,119,74,6],[96,123,76,6],[96,124,76,7],[96,125,76,8,"localPackage"],[96,137,76,7],[96,141,76,24,"localPackage"],[96,153,76,36],[96,154,76,37,"_isDebugOnly"],[96,166,76,6],[96,171,76,54,"config"],[96,177,76,60],[96,178,76,61,"packageHash"],[96,189,76,54],[96,194,76,77,"update"],[96,200,76,83],[96,201,76,84,"packageHash"],[96,212,12,0],[97,0,12,0],[98,0,12,0],[99,0,12,0],[101,0,77,4],[101,16,77,8,"update"],[101,22,77,14],[101,26,77,18,"update"],[101,32,77,24],[101,33,77,25,"updateAppVersion"],[101,49,77,4],[101,51,77,43],[102,0,78,6],[102,36,78,10],[102,116,78,6],[104,0,79,6],[104,18,79,10,"handleBinaryVersionMismatchCallback"],[104,53,79,45],[104,57,79,49],[104,64,79,56,"handleBinaryVersionMismatchCallback"],[104,99,79,49],[104,104,79,96],[104,114,79,6],[104,116,79,108],[105,0,80,8,"handleBinaryVersionMismatchCallback"],[105,16,80,8,"handleBinaryVersionMismatchCallback"],[105,51,80,43],[105,52,80,44,"update"],[105,58,80,43],[105,59,80,8],[106,0,81,7],[107,0,82,5],[109,0,12,0],[109,45,84,11],[109,49,12,0],[111,0,12,0],[112,0,86,10,"remotePackage"],[112,12,86,10,"remotePackage"],[112,25,12,0],[112,60,86,31,"update"],[112,66,12,0],[112,69,86,42,"PackageMixins"],[112,82,86,55],[112,83,86,56,"remote"],[112,89,86,42],[112,90,86,63,"sdk"],[112,93,86,66],[112,94,86,67,"reportStatusDownload"],[112,114,86,42],[112,115,12,0],[113,0,12,0],[114,0,12,0],[114,46,87,40,"NativeCodePush"],[114,60,87,54],[114,61,87,55,"isFailedUpdate"],[114,75,87,40],[114,76,87,70,"remotePackage"],[114,89,87,83],[114,90,87,84,"packageHash"],[114,101,87,40],[114,102,12,0],[116,0,12,0],[117,0,87,4,"remotePackage"],[117,12,87,4,"remotePackage"],[117,25,87,17],[117,26,87,18,"failedInstall"],[117,39,12,0],[118,0,88,4,"remotePackage"],[118,12,88,4,"remotePackage"],[118,25,88,17],[118,26,88,18,"deploymentKey"],[118,39,88,4],[118,42,88,34,"deploymentKey"],[118,55,88,47],[118,59,88,51,"nativeConfig"],[118,71,88,63],[118,72,88,64,"deploymentKey"],[118,85,88,4],[119,0,12,0],[119,45,89,11,"remotePackage"],[119,58,12,0],[121,0,12,0],[122,0,12,0],[123,0,12,0],[124,0,12,0],[125,0,12,0],[126,0,12,0],[127,0,12,0],[129,0,93,0],[129,6,93,6,"getConfiguration"],[129,22,93,22],[129,25,93,26],[129,37,93,32],[130,0,94,2],[130,8,94,6,"config"],[130,14,94,2],[131,0,95,2],[131,11,95,9],[131,20,95,24,"getConfiguration"],[131,36,95,9],[132,0,95,9],[133,0,95,9],[134,0,95,9],[135,0,95,9],[136,0,95,9],[136,19,96,8,"config"],[136,25,95,9],[137,0,95,9],[138,0,95,9],[139,0,95,9],[141,0,95,9],[141,48,97,13,"config"],[141,54,95,9],[143,0,95,9],[144,0,95,9],[144,19,98,15,"testConfig"],[144,29,95,9],[145,0,95,9],[146,0,95,9],[147,0,95,9],[149,0,95,9],[149,48,99,13,"testConfig"],[149,58,95,9],[151,0,95,9],[152,0,95,9],[153,0,95,9],[153,48,101,21,"NativeCodePush"],[153,62,101,35],[153,63,101,36,"getConfiguration"],[153,79,101,21],[153,81,95,9],[155,0,95,9],[156,0,101,6,"config"],[156,14,101,6,"config"],[156,20,95,9],[157,0,95,9],[157,48,102,13,"config"],[157,54,95,9],[159,0,95,9],[160,0,95,9],[161,0,95,9],[162,0,95,9],[163,0,95,9],[164,0,95,9],[165,0,95,9],[165,5,95,2],[166,0,105,1],[166,3,93,25],[166,5,93,0],[168,0,107,0],[168,11,107,15,"getCurrentPackage"],[168,28,107,0],[169,0,107,0],[170,0,107,0],[171,0,107,0],[172,0,107,0],[173,0,107,0],[174,0,107,0],[174,46,108,15,"getUpdateMetadata"],[174,63,108,32],[174,64,108,33,"CodePush"],[174,72,108,41],[174,73,108,42,"UpdateState"],[174,84,108,33],[174,85,108,54,"LATEST"],[174,91,108,32],[174,92,107,0],[176,0,107,0],[177,0,107,0],[179,0,107,0],[180,0,107,0],[181,0,107,0],[182,0,107,0],[183,0,107,0],[184,0,107,0],[185,0,107,0],[187,0,111,0],[187,11,111,15,"getUpdateMetadata"],[187,28,111,0],[187,29,111,33,"updateState"],[187,40,111,0],[188,0,111,0],[189,0,111,0],[190,0,111,0],[191,0,111,0],[192,0,111,0],[193,0,111,0],[194,0,111,0],[194,46,112,29,"NativeCodePush"],[194,60,112,43],[194,61,112,44,"getUpdateMetadata"],[194,78,112,29],[194,79,112,62,"updateState"],[194,90,112,73],[194,94,112,77,"CodePush"],[194,102,112,85],[194,103,112,86,"UpdateState"],[194,114,112,77],[194,115,112,98,"RUNNING"],[194,122,112,29],[194,123,111,0],[196,0,111,0],[197,0,112,6,"updateMetadata"],[197,12,112,6,"updateMetadata"],[197,26,111,0],[199,0,111,0],[199,17,113,6,"updateMetadata"],[199,31,111,0],[200,0,111,0],[201,0,111,0],[202,0,111,0],[204,0,114,4,"updateMetadata"],[204,12,114,4,"updateMetadata"],[204,26,114,18],[204,61,114,25,"PackageMixins"],[204,74,114,38],[204,75,114,39,"local"],[204,80,114,18],[204,83,114,49,"updateMetadata"],[204,97,114,18],[204,98,114,4],[205,0,111,0],[206,0,111,0],[206,46,115,41,"NativeCodePush"],[206,60,115,55],[206,61,115,56,"isFailedUpdate"],[206,75,115,41],[206,76,115,71,"updateMetadata"],[206,90,115,85],[206,91,115,86,"packageHash"],[206,102,115,41],[206,103,111,0],[208,0,111,0],[209,0,115,4,"updateMetadata"],[209,12,115,4,"updateMetadata"],[209,26,115,18],[209,27,115,19,"failedInstall"],[209,40,111,0],[210,0,111,0],[211,0,111,0],[211,46,116,38,"NativeCodePush"],[211,60,116,52],[211,61,116,53,"isFirstRun"],[211,71,116,38],[211,72,116,64,"updateMetadata"],[211,86,116,78],[211,87,116,79,"packageHash"],[211,98,116,38],[211,99,111,0],[213,0,111,0],[214,0,116,4,"updateMetadata"],[214,12,116,4,"updateMetadata"],[214,26,116,18],[214,27,116,19,"isFirstRun"],[214,37,111,0],[216,0,111,0],[217,0,111,0],[217,46,118,9,"updateMetadata"],[217,60,111,0],[219,0,111,0],[220,0,111,0],[221,0,111,0],[222,0,111,0],[223,0,111,0],[224,0,111,0],[225,0,111,0],[227,0,121,0],[227,11,121,9,"getPromisifiedSdk"],[227,28,121,0],[227,29,121,27,"requestFetchAdapter"],[227,48,121,0],[227,50,121,48,"config"],[227,56,121,0],[227,58,121,56],[228,0,123,2],[228,8,123,8,"sdk"],[228,11,123,11],[228,14,123,14],[228,18,123,18,"module"],[228,24,123,24],[228,25,123,25,"exports"],[228,32,123,18],[228,33,123,33,"AcquisitionSdk"],[228,47,123,14],[228,48,123,48,"requestFetchAdapter"],[228,67,123,14],[228,69,123,69,"config"],[228,75,123,14],[228,76,123,2],[230,0,124,2,"sdk"],[230,4,124,2,"sdk"],[230,7,124,5],[230,8,124,6,"queryUpdateWithCurrentPackage"],[230,37,124,2],[230,40,124,38],[230,50,124,39,"queryPackage"],[230,62,124,38],[230,64,124,56],[231,0,125,4],[231,13,125,11],[231,17,125,15,"Promise"],[231,24,125,11],[231,25,125,23],[231,35,125,24,"resolve"],[231,42,125,23],[231,44,125,33,"reject"],[231,50,125,23],[231,52,125,44],[232,0,126,6,"module"],[232,8,126,6,"module"],[232,14,126,12],[232,15,126,13,"exports"],[232,22,126,6],[232,23,126,21,"AcquisitionSdk"],[232,37,126,6],[232,38,126,36,"prototype"],[232,47,126,6],[232,48,126,46,"queryUpdateWithCurrentPackage"],[232,77,126,6],[232,78,126,76,"call"],[232,82,126,6],[232,83,126,81,"sdk"],[232,86,126,6],[232,88,126,86,"queryPackage"],[232,100,126,6],[232,102,126,100],[232,112,126,101,"err"],[232,115,126,100],[232,117,126,106,"update"],[232,123,126,100],[232,125,126,117],[233,0,127,8],[233,14,127,12,"err"],[233,17,127,8],[233,19,127,17],[234,0,128,10,"reject"],[234,12,128,10,"reject"],[234,18,128,16],[234,19,128,17,"err"],[234,22,128,16],[234,23,128,10],[235,0,129,9],[235,11,127,8],[235,17,129,15],[236,0,130,10,"resolve"],[236,12,130,10,"resolve"],[236,19,130,17],[236,20,130,18,"update"],[236,26,130,17],[236,27,130,10],[237,0,131,9],[238,0,132,7],[238,9,126,6],[239,0,133,5],[239,7,125,11],[239,8,125,4],[240,0,134,3],[240,5,124,2],[242,0,136,2,"sdk"],[242,4,136,2,"sdk"],[242,7,136,5],[242,8,136,6,"reportStatusDeploy"],[242,26,136,2],[242,29,136,27],[242,39,136,28,"deployedPackage"],[242,54,136,27],[242,56,136,45,"status"],[242,62,136,27],[242,64,136,53,"previousLabelOrAppVersion"],[242,89,136,27],[242,91,136,80,"previousDeploymentKey"],[242,112,136,27],[242,114,136,106],[243,0,137,4],[243,13,137,11],[243,17,137,15,"Promise"],[243,24,137,11],[243,25,137,23],[243,35,137,24,"resolve"],[243,42,137,23],[243,44,137,33,"reject"],[243,50,137,23],[243,52,137,44],[244,0,138,6,"module"],[244,8,138,6,"module"],[244,14,138,12],[244,15,138,13,"exports"],[244,22,138,6],[244,23,138,21,"AcquisitionSdk"],[244,37,138,6],[244,38,138,36,"prototype"],[244,47,138,6],[244,48,138,46,"reportStatusDeploy"],[244,66,138,6],[244,67,138,65,"call"],[244,71,138,6],[244,72,138,70,"sdk"],[244,75,138,6],[244,77,138,75,"deployedPackage"],[244,92,138,6],[244,94,138,92,"status"],[244,100,138,6],[244,102,138,100,"previousLabelOrAppVersion"],[244,127,138,6],[244,129,138,127,"previousDeploymentKey"],[244,150,138,6],[244,152,138,150],[244,162,138,151,"err"],[244,165,138,150],[244,167,138,159],[245,0,139,8],[245,14,139,12,"err"],[245,17,139,8],[245,19,139,17],[246,0,140,10,"reject"],[246,12,140,10,"reject"],[246,18,140,16],[246,19,140,17,"err"],[246,22,140,16],[246,23,140,10],[247,0,141,9],[247,11,139,8],[247,17,141,15],[248,0,142,10,"resolve"],[248,12,142,10,"resolve"],[248,19,142,17],[249,0,143,9],[250,0,144,7],[250,9,138,6],[251,0,145,5],[251,7,137,11],[251,8,137,4],[252,0,146,3],[252,5,136,2],[254,0,148,2,"sdk"],[254,4,148,2,"sdk"],[254,7,148,5],[254,8,148,6,"reportStatusDownload"],[254,28,148,2],[254,31,148,29],[254,41,148,30,"downloadedPackage"],[254,58,148,29],[254,60,148,52],[255,0,149,4],[255,13,149,11],[255,17,149,15,"Promise"],[255,24,149,11],[255,25,149,23],[255,35,149,24,"resolve"],[255,42,149,23],[255,44,149,33,"reject"],[255,50,149,23],[255,52,149,44],[256,0,150,6,"module"],[256,8,150,6,"module"],[256,14,150,12],[256,15,150,13,"exports"],[256,22,150,6],[256,23,150,21,"AcquisitionSdk"],[256,37,150,6],[256,38,150,36,"prototype"],[256,47,150,6],[256,48,150,46,"reportStatusDownload"],[256,68,150,6],[256,69,150,67,"call"],[256,73,150,6],[256,74,150,72,"sdk"],[256,77,150,6],[256,79,150,77,"downloadedPackage"],[256,96,150,6],[256,98,150,96],[256,108,150,97,"err"],[256,111,150,96],[256,113,150,105],[257,0,151,8],[257,14,151,12,"err"],[257,17,151,8],[257,19,151,17],[258,0,152,10,"reject"],[258,12,152,10,"reject"],[258,18,152,16],[258,19,152,17,"err"],[258,22,152,16],[258,23,152,10],[259,0,153,9],[259,11,151,8],[259,17,153,15],[260,0,154,10,"resolve"],[260,12,154,10,"resolve"],[260,19,154,17],[261,0,155,9],[262,0,156,7],[262,9,150,6],[263,0,157,5],[263,7,149,11],[263,8,149,4],[264,0,158,3],[264,5,148,2],[266,0,160,2],[266,11,160,9,"sdk"],[266,14,160,2],[267,0,161,1],[269,0,165,0],[269,6,165,6,"notifyApplicationReady"],[269,28,165,28],[269,31,165,32],[269,43,165,38],[270,0,166,2],[270,8,166,6,"notifyApplicationReadyPromise"],[270,37,166,2],[271,0,167,2],[271,11,167,9],[271,23,167,15],[272,0,168,4],[272,10,168,8],[272,11,168,9,"notifyApplicationReadyPromise"],[272,40,168,4],[272,42,168,40],[273,0,169,6,"notifyApplicationReadyPromise"],[273,8,169,6,"notifyApplicationReadyPromise"],[273,37,169,35],[273,40,169,38,"notifyApplicationReadyInternal"],[273,70,169,68],[273,72,169,6],[274,0,170,5],[276,0,172,4],[276,13,172,11,"notifyApplicationReadyPromise"],[276,42,172,4],[277,0,173,3],[277,5,167,2],[278,0,174,1],[278,3,165,31],[278,5,165,0],[280,0,176,0],[280,11,176,15,"notifyApplicationReadyInternal"],[280,41,176,0],[281,0,176,0],[282,0,176,0],[283,0,176,0],[284,0,176,0],[285,0,176,0],[286,0,176,0],[287,0,176,0],[287,46,177,8,"NativeCodePush"],[287,60,177,22],[287,61,177,23,"notifyApplicationReady"],[287,83,177,8],[287,85,176,0],[289,0,176,0],[290,0,176,0],[291,0,176,0],[291,46,178,29,"NativeCodePush"],[291,60,178,43],[291,61,178,44,"getNewStatusReport"],[291,79,178,29],[291,81,176,0],[293,0,176,0],[294,0,178,8,"statusReport"],[294,12,178,8,"statusReport"],[294,24,176,0],[295,0,179,2,"statusReport"],[295,12,179,2,"statusReport"],[295,24,179,14],[295,28,179,18,"tryReportStatus"],[295,43,179,33],[295,44,179,34,"statusReport"],[295,56,179,33],[295,57,179,2],[296,0,176,0],[296,46,181,9,"statusReport"],[296,58,176,0],[298,0,176,0],[299,0,176,0],[300,0,176,0],[301,0,176,0],[302,0,176,0],[303,0,176,0],[304,0,176,0],[306,0,184,0],[306,11,184,15,"tryReportStatus"],[306,26,184,0],[306,27,184,31,"statusReport"],[306,39,184,0],[306,41,184,45,"resumeListener"],[306,56,184,0],[307,0,184,0],[309,0,184,0],[310,0,184,0],[311,0,184,0],[312,0,184,0],[313,0,184,0],[314,0,184,0],[314,46,185,23,"getConfiguration"],[314,62,185,39],[314,64,184,0],[316,0,184,0],[317,0,185,8,"config"],[317,12,185,8,"config"],[317,18,184,0],[318,0,186,8,"previousLabelOrAppVersion"],[318,12,186,8,"previousLabelOrAppVersion"],[318,37,184,0],[318,40,186,36,"statusReport"],[318,52,186,48],[318,53,186,49,"previousLabelOrAppVersion"],[318,78,184,0],[319,0,187,8,"previousDeploymentKey"],[319,12,187,8,"previousDeploymentKey"],[319,33,184,0],[319,36,187,32,"statusReport"],[319,48,187,44],[319,49,187,45,"previousDeploymentKey"],[319,70,187,32],[319,74,187,70,"config"],[319,80,187,76],[319,81,187,77,"deploymentKey"],[319,94,184,0],[320,0,184,0],[322,0,184,0],[322,17,189,8,"statusReport"],[322,29,189,20],[322,30,189,21,"appVersion"],[322,40,184,0],[323,0,184,0],[324,0,184,0],[325,0,184,0],[327,0,190,6],[327,64,190,38,"statusReport"],[327,76,190,50],[327,77,190,51,"appVersion"],[327,87,190,6],[328,0,192,12,"sdk"],[328,12,192,12,"sdk"],[328,15,184,0],[328,18,192,18,"getPromisifiedSdk"],[328,35,192,35],[328,36,192,36,"requestFetchAdapter"],[328,64,192,35],[328,66,192,57,"config"],[328,72,192,35],[328,73,184,0],[329,0,184,0],[330,0,184,0],[330,46,193,12,"sdk"],[330,49,193,15],[330,50,193,16,"reportStatusDeploy"],[330,68,193,12],[330,69,193,57],[330,73,193,12],[330,75,193,76],[330,79,193,12],[330,81,193,82,"previousLabelOrAppVersion"],[330,106,193,12],[330,108,193,109,"previousDeploymentKey"],[330,129,193,12],[330,130,184,0],[332,0,184,0],[333,0,184,0],[334,0,184,0],[336,0,184,0],[337,0,195,12,"label"],[337,12,195,12,"label"],[337,17,184,0],[337,20,195,20,"statusReport"],[337,32,195,32],[337,33,195,33,"package"],[337,40,195,20],[337,41,195,41,"label"],[337,46,184,0],[339,0,184,0],[339,18,196,10,"statusReport"],[339,30,196,22],[339,31,196,23,"status"],[339,37,196,10],[339,42,196,34],[339,63,184,0],[340,0,184,0],[341,0,184,0],[342,0,184,0],[344,0,197,8],[344,74,197,50,"label"],[344,79,197,8],[345,0,184,0],[346,0,184,0],[348,0,184,0],[349,0,199,8],[349,75,199,51,"label"],[349,80,199,8],[350,0,184,0],[351,0,184,0],[351,46,200,14,"NativeCodePush"],[351,60,200,28],[351,61,200,29,"setLatestRollbackInfo"],[351,82,200,14],[351,83,200,51,"statusReport"],[351,95,200,63],[351,96,200,64,"package"],[351,103,200,51],[351,104,200,72,"packageHash"],[351,115,200,14],[351,116,184,0],[353,0,184,0],[354,0,203,6,"config"],[354,12,203,6,"config"],[354,18,203,12],[354,19,203,13,"deploymentKey"],[354,32,203,6],[354,35,203,29,"statusReport"],[354,47,203,41],[354,48,203,42,"package"],[354,55,203,29],[354,56,203,50,"deploymentKey"],[354,69,203,6],[355,0,204,12,"sdk"],[355,12,204,12,"sdk"],[355,16,184,0],[355,19,204,18,"getPromisifiedSdk"],[355,36,204,35],[355,37,204,36,"requestFetchAdapter"],[355,65,204,35],[355,67,204,57,"config"],[355,73,204,35],[355,74,184,0],[356,0,184,0],[357,0,184,0],[357,46,205,12,"sdk"],[357,50,205,15],[357,51,205,16,"reportStatusDeploy"],[357,69,205,12],[357,70,205,35,"statusReport"],[357,82,205,47],[357,83,205,48,"package"],[357,90,205,12],[357,92,205,57,"statusReport"],[357,104,205,69],[357,105,205,70,"status"],[357,111,205,12],[357,113,205,78,"previousLabelOrAppVersion"],[357,138,205,12],[357,140,205,105,"previousDeploymentKey"],[357,161,205,12],[357,162,184,0],[359,0,184,0],[360,0,208,4,"NativeCodePush"],[360,12,208,4,"NativeCodePush"],[360,26,208,18],[360,27,208,19,"recordStatusReported"],[360,47,208,4],[360,48,208,40,"statusReport"],[360,60,208,4],[361,0,209,4,"resumeListener"],[361,12,209,4,"resumeListener"],[361,27,209,18],[361,31,209,22,"AppState"],[361,53,209,31,"removeEventListener"],[361,72,209,22],[361,73,209,51],[361,81,209,22],[361,83,209,61,"resumeListener"],[361,98,209,22],[361,99,209,4],[362,0,184,0],[363,0,184,0],[365,0,184,0],[366,0,184,0],[367,0,184,0],[368,0,211,4],[368,61,211,33,"JSON"],[368,65,211,37],[368,66,211,38,"stringify"],[368,75,211,33],[368,76,211,48,"statusReport"],[368,88,211,33],[368,89,211,4],[369,0,212,4,"NativeCodePush"],[369,12,212,4,"NativeCodePush"],[369,26,212,18],[369,27,212,19,"saveStatusReportForRetry"],[369,51,212,4],[369,52,212,44,"statusReport"],[369,64,212,4],[371,0,214,4],[371,16,214,8],[371,17,214,9,"resumeListener"],[371,32,214,4],[371,34,214,25],[372,0,215,6,"resumeListener"],[372,14,215,6,"resumeListener"],[372,29,215,20],[372,32,215,23],[372,56,215,30,"newState"],[372,64,215,23],[373,0,215,23],[374,0,215,23],[375,0,215,23],[376,0,215,23],[377,0,215,23],[378,0,215,23],[378,30,216,12,"newState"],[378,38,216,20],[378,43,216,25],[378,51,215,23],[379,0,215,23],[380,0,215,23],[381,0,215,23],[383,0,215,23],[385,0,215,23],[386,0,215,23],[387,0,215,23],[387,58,217,44,"NativeCodePush"],[387,72,217,58],[387,73,217,59,"getNewStatusReport"],[387,91,217,44],[387,93,215,23],[389,0,215,23],[390,0,217,14,"refreshedStatusReport"],[390,24,217,14,"refreshedStatusReport"],[390,45,215,23],[392,0,218,8],[392,28,218,12,"refreshedStatusReport"],[392,49,218,8],[392,51,218,35],[393,0,219,10,"tryReportStatus"],[393,26,219,10,"tryReportStatus"],[393,41,219,25],[393,42,219,26,"refreshedStatusReport"],[393,63,219,25],[393,65,219,49,"resumeListener"],[393,80,219,25],[393,81,219,10],[394,0,220,9],[394,25,218,8],[394,31,220,15],[395,0,221,10,"AppState"],[395,48,221,19,"removeEventListener"],[395,67,221,10],[395,68,221,39],[395,76,221,10],[395,78,221,49,"resumeListener"],[395,93,221,10],[396,0,222,9],[398,0,215,23],[399,0,215,23],[400,0,215,23],[401,0,215,23],[402,0,215,23],[403,0,215,23],[404,0,215,23],[404,15,215,6],[406,0,224,6,"AppState"],[406,36,224,15,"addEventListener"],[406,52,224,6],[406,53,224,32],[406,61,224,6],[406,63,224,42,"resumeListener"],[406,78,224,6],[407,0,225,5],[409,0,184,0],[410,0,184,0],[411,0,184,0],[412,0,184,0],[413,0,184,0],[414,0,184,0],[415,0,184,0],[417,0,229,0],[417,11,229,15,"shouldUpdateBeIgnored"],[417,32,229,0],[417,33,229,37,"remotePackage"],[417,46,229,0],[417,48,229,52,"syncOptions"],[417,59,229,0],[418,0,229,0],[420,0,229,0],[421,0,229,0],[422,0,229,0],[423,0,229,0],[424,0,230,8,"rollbackRetryOptions"],[424,12,230,8,"rollbackRetryOptions"],[424,32,229,0],[424,35,230,33,"syncOptions"],[424,46,229,0],[424,47,230,8,"rollbackRetryOptions"],[424,67,229,0],[425,0,232,8,"isFailedPackage"],[425,12,232,8,"isFailedPackage"],[425,27,229,0],[425,30,232,26,"remotePackage"],[425,43,232,39],[425,47,232,43,"remotePackage"],[425,60,232,56],[425,61,232,57,"failedInstall"],[425,74,229,0],[427,0,229,0],[427,18,233,6],[427,19,233,7,"isFailedPackage"],[427,34,233,6],[427,38,233,26],[427,39,233,27,"syncOptions"],[427,50,233,38],[427,51,233,39,"ignoreFailedUpdates"],[427,70,229,0],[428,0,229,0],[429,0,229,0],[430,0,229,0],[432,0,229,0],[432,46,234,11],[432,51,229,0],[434,0,229,0],[435,0,229,0],[435,16,237,7,"rollbackRetryOptions"],[435,36,229,0],[436,0,229,0],[437,0,229,0],[438,0,229,0],[440,0,229,0],[440,46,238,11],[440,50,229,0],[442,0,229,0],[443,0,241,2],[443,16,241,6],[443,23,241,13,"rollbackRetryOptions"],[443,43,241,6],[443,48,241,38],[443,56,241,2],[443,58,241,48],[444,0,242,4,"rollbackRetryOptions"],[444,14,242,4,"rollbackRetryOptions"],[444,34,242,24],[444,37,242,27,"CodePush"],[444,45,242,35],[444,46,242,36,"DEFAULT_ROLLBACK_RETRY_OPTIONS"],[444,76,242,4],[445,0,243,3],[445,13,241,2],[445,19,243,9],[446,0,244,4,"rollbackRetryOptions"],[446,14,244,4,"rollbackRetryOptions"],[446,34,244,24],[446,69,244,32,"CodePush"],[446,77,244,40],[446,78,244,41,"DEFAULT_ROLLBACK_RETRY_OPTIONS"],[446,108,244,24],[446,111,244,76,"rollbackRetryOptions"],[446,131,244,24],[446,132,244,4],[447,0,245,3],[449,0,229,0],[449,16,247,7,"validateRollbackRetryOptions"],[449,44,247,35],[449,45,247,36,"rollbackRetryOptions"],[449,65,247,35],[449,66,229,0],[450,0,229,0],[451,0,229,0],[452,0,229,0],[454,0,229,0],[454,46,248,11],[454,50,229,0],[456,0,229,0],[457,0,229,0],[458,0,229,0],[458,46,251,35,"NativeCodePush"],[458,60,251,49],[458,61,251,50,"getLatestRollbackInfo"],[458,82,251,35],[458,84,229,0],[460,0,229,0],[461,0,251,8,"latestRollbackInfo"],[461,12,251,8,"latestRollbackInfo"],[461,30,229,0],[463,0,229,0],[463,16,252,7,"validateLatestRollbackInfo"],[463,42,252,33],[463,43,252,34,"latestRollbackInfo"],[463,61,252,33],[463,63,252,54,"remotePackage"],[463,76,252,67],[463,77,252,68,"packageHash"],[463,88,252,33],[463,89,229,0],[464,0,229,0],[465,0,229,0],[466,0,229,0],[468,0,253,4],[468,34,253,8],[468,74,253,4],[469,0,229,0],[469,46,254,11],[469,50,229,0],[471,0,229,0],[472,0,229,0],[472,36,257,45,"rollbackRetryOptions"],[472,56,229,0],[472,58,257,10,"delayInHours"],[472,70,229,0],[472,95,257,10,"delayInHours"],[472,107,229,0],[472,109,257,24,"maxRetryAttempts"],[472,125,229,0],[472,150,257,24,"maxRetryAttempts"],[472,166,229,0],[473,0,258,8,"hoursSinceLatestRollback"],[473,12,258,8,"hoursSinceLatestRollback"],[473,36,229,0],[473,39,258,35],[473,40,258,36,"Date"],[473,44,258,40],[473,45,258,41,"now"],[473,48,258,36],[473,53,258,49,"latestRollbackInfo"],[473,71,258,67],[473,72,258,68,"time"],[473,76,258,35],[473,81,258,77],[473,88,258,84],[473,90,258,77],[473,93,258,89],[473,95,258,35],[473,96,229,0],[475,0,229,0],[475,18,259,6,"hoursSinceLatestRollback"],[475,42,259,30],[475,46,259,34,"delayInHours"],[475,58,259,6],[475,62,259,50,"maxRetryAttempts"],[475,78,259,66],[475,82,259,70,"latestRollbackInfo"],[475,100,259,88],[475,101,259,89,"count"],[475,106,229,0],[476,0,229,0],[477,0,229,0],[478,0,229,0],[480,0,260,4],[480,34,260,8],[480,102,260,4],[481,0,229,0],[481,46,261,11],[481,51,229,0],[483,0,229,0],[484,0,229,0],[484,46,264,9],[484,50,229,0],[486,0,229,0],[487,0,229,0],[488,0,229,0],[489,0,229,0],[490,0,229,0],[491,0,229,0],[492,0,229,0],[494,0,267,0],[494,11,267,9,"validateLatestRollbackInfo"],[494,37,267,0],[494,38,267,36,"latestRollbackInfo"],[494,56,267,0],[494,58,267,56,"packageHash"],[494,69,267,0],[494,71,267,69],[495,0,268,2],[495,11,268,9,"latestRollbackInfo"],[495,29,268,27],[495,33,269,4,"latestRollbackInfo"],[495,51,269,22],[495,52,269,23,"time"],[495,56,268,9],[495,60,270,4,"latestRollbackInfo"],[495,78,270,22],[495,79,270,23,"count"],[495,84,268,9],[495,88,271,4,"latestRollbackInfo"],[495,106,271,22],[495,107,271,23,"packageHash"],[495,118,268,9],[495,122,272,4,"latestRollbackInfo"],[495,140,272,22],[495,141,272,23,"packageHash"],[495,152,272,4],[495,157,272,39,"packageHash"],[495,168,268,2],[496,0,273,1],[498,0,275,0],[498,11,275,9,"validateRollbackRetryOptions"],[498,39,275,0],[498,40,275,38,"rollbackRetryOptions"],[498,60,275,0],[498,62,275,60],[499,0,276,2],[499,8,276,6],[499,15,276,13,"rollbackRetryOptions"],[499,35,276,33],[499,36,276,34,"delayInHours"],[499,48,276,6],[499,53,276,51],[499,61,276,2],[499,63,276,61],[500,0,277,4],[500,28,277,8],[500,91,277,4],[501,0,278,4],[501,13,278,11],[501,18,278,4],[502,0,279,3],[504,0,281,2],[504,8,281,6],[504,15,281,13,"rollbackRetryOptions"],[504,35,281,33],[504,36,281,34,"maxRetryAttempts"],[504,52,281,6],[504,57,281,55],[504,65,281,2],[504,67,281,65],[505,0,282,4],[505,28,282,8],[505,95,282,4],[506,0,283,4],[506,13,283,11],[506,18,283,4],[507,0,284,3],[509,0,286,2],[509,8,286,6,"rollbackRetryOptions"],[509,28,286,26],[509,29,286,27,"maxRetryAttempts"],[509,45,286,6],[509,48,286,46],[509,49,286,2],[509,51,286,49],[510,0,287,4],[510,28,287,8],[510,100,287,4],[511,0,288,4],[511,13,288,11],[511,18,288,4],[512,0,289,3],[514,0,291,2],[514,11,291,9],[514,15,291,2],[515,0,292,1],[517,0,294,0],[517,6,294,4,"testConfig"],[517,16,294,0],[519,0,297,0],[519,11,297,9,"setUpTestDependencies"],[519,32,297,0],[519,33,297,31,"testSdk"],[519,40,297,0],[519,42,297,40,"providedTestConfig"],[519,60,297,0],[519,62,297,60,"testNativeBridge"],[519,78,297,0],[519,80,297,78],[520,0,298,2],[520,8,298,6,"testSdk"],[520,15,298,2],[520,17,298,15,"module"],[520,23,298,21],[520,24,298,22,"exports"],[520,31,298,15],[520,32,298,30,"AcquisitionSdk"],[520,46,298,15],[520,49,298,47,"testSdk"],[520,56,298,15],[521,0,299,2],[521,8,299,6,"providedTestConfig"],[521,26,299,2],[521,28,299,26,"testConfig"],[521,38,299,36],[521,41,299,39,"providedTestConfig"],[521,59,299,26],[522,0,300,2],[522,8,300,6,"testNativeBridge"],[522,24,300,2],[522,26,300,24,"NativeCodePush"],[522,40,300,38],[522,43,300,41,"testNativeBridge"],[522,59,300,24],[523,0,301,1],[525,0,305,0],[525,6,305,6,"sync"],[525,10,305,10],[525,13,305,14],[525,25,305,20],[526,0,306,2],[526,8,306,6,"syncInProgress"],[526,22,306,20],[526,25,306,23],[526,30,306,2],[528,0,307,2],[528,8,307,8,"setSyncCompleted"],[528,24,307,24],[528,27,307,27],[528,36,307,8,"setSyncCompleted"],[528,52,307,27],[528,55,307,33],[529,0,307,35,"syncInProgress"],[529,6,307,35,"syncInProgress"],[529,20,307,49],[529,23,307,52],[529,28,307,35],[530,0,307,60],[530,5,307,2],[532,0,309,2],[532,11,309,9],[532,23,309,116],[533,0,309,116],[533,10,309,10,"options"],[533,17,309,116],[533,88,309,20],[533,90,309,116],[534,0,309,116],[534,10,309,24,"syncStatusChangeCallback"],[534,34,309,116],[535,0,309,116],[535,10,309,50,"downloadProgressCallback"],[535,34,309,116],[536,0,309,116],[536,10,309,76,"handleBinaryVersionMismatchCallback"],[536,45,309,116],[537,0,310,4],[537,10,310,8,"syncStatusCallbackWithTryCatch"],[537,40,310,4],[537,42,310,40,"downloadProgressCallbackWithTryCatch"],[537,78,310,4],[539,0,311,4],[539,10,311,8],[539,17,311,15,"syncStatusChangeCallback"],[539,41,311,8],[539,46,311,44],[539,56,311,4],[539,58,311,56],[540,0,312,6,"syncStatusCallbackWithTryCatch"],[540,8,312,6,"syncStatusCallbackWithTryCatch"],[540,38,312,36],[540,41,312,39],[540,83,312,52],[541,0,313,8],[541,14,313,12],[542,0,314,10,"syncStatusChangeCallback"],[542,12,314,10,"syncStatusChangeCallback"],[542,36,314,34],[542,42,314,10],[543,0,315,9],[543,11,313,8],[543,12,315,10],[543,19,315,17,"error"],[543,24,315,10],[543,26,315,24],[544,0,316,10],[544,63,316,41,"error"],[544,68,316,46],[544,69,316,47,"stack"],[544,74,316,10],[545,0,317,9],[546,0,318,7],[546,9,312,6],[547,0,319,5],[549,0,321,4],[549,10,321,8],[549,17,321,15,"downloadProgressCallback"],[549,41,321,8],[549,46,321,44],[549,56,321,4],[549,58,321,56],[550,0,322,6,"downloadProgressCallbackWithTryCatch"],[550,8,322,6,"downloadProgressCallbackWithTryCatch"],[550,44,322,42],[550,47,322,45],[550,95,322,58],[551,0,323,8],[551,14,323,12],[552,0,324,10,"downloadProgressCallback"],[552,12,324,10,"downloadProgressCallback"],[552,36,324,34],[552,42,324,10],[553,0,325,9],[553,11,323,8],[553,12,325,10],[553,19,325,17,"error"],[553,24,325,10],[553,26,325,24],[554,0,326,10],[554,62,326,40,"error"],[554,67,326,45],[554,68,326,46,"stack"],[554,73,326,10],[555,0,327,9],[556,0,328,7],[556,9,322,6],[557,0,329,5],[559,0,331,4],[559,10,331,8,"syncInProgress"],[559,24,331,4],[559,26,331,24],[560,0,332,6],[560,15,332,13,"syncStatusCallbackWithTryCatch"],[560,45,332,6],[560,50,332,48],[560,60,332,6],[560,63,333,10,"syncStatusCallbackWithTryCatch"],[560,93,333,40],[560,94,333,41,"CodePush"],[560,102,333,49],[560,103,333,50,"SyncStatus"],[560,113,333,41],[560,114,333,61,"SYNC_IN_PROGRESS"],[560,130,333,40],[560,131,332,6],[560,134,334,10],[560,156,334,14],[560,183,334,10],[560,184,332,6],[561,0,335,6],[561,15,335,13,"Promise"],[561,22,335,20],[561,23,335,21,"resolve"],[561,30,335,13],[561,31,335,29,"CodePush"],[561,39,335,37],[561,40,335,38,"SyncStatus"],[561,50,335,29],[561,51,335,49,"SYNC_IN_PROGRESS"],[561,67,335,13],[561,68,335,6],[562,0,336,5],[564,0,338,4,"syncInProgress"],[564,6,338,4,"syncInProgress"],[564,20,338,18],[564,23,338,21],[564,27,338,4],[565,0,339,4],[565,10,339,10,"syncPromise"],[565,21,339,21],[565,24,339,24,"syncInternal"],[565,36,339,36],[565,37,339,37,"options"],[565,44,339,36],[565,46,339,46,"syncStatusCallbackWithTryCatch"],[565,76,339,36],[565,78,339,78,"downloadProgressCallbackWithTryCatch"],[565,114,339,36],[565,116,339,116,"handleBinaryVersionMismatchCallback"],[565,151,339,36],[565,152,339,4],[566,0,340,4,"syncPromise"],[566,6,340,4,"syncPromise"],[566,17,340,15],[566,18,341,7,"then"],[566,22,340,4],[566,23,341,12,"setSyncCompleted"],[566,39,340,4],[566,41,342,7,"catch"],[566,46,340,4],[566,47,342,13,"setSyncCompleted"],[566,63,340,4],[567,0,344,4],[567,13,344,11,"syncPromise"],[567,24,344,4],[568,0,345,3],[568,5,309,2],[569,0,346,1],[569,3,305,13],[569,5,305,0],[571,0,357,0],[571,11,357,15,"syncInternal"],[571,23,357,0],[572,0,357,0],[573,0,357,0],[574,0,357,0],[575,0,357,0],[576,0,357,0],[577,0,357,0],[578,0,357,0],[579,0,357,0],[580,0,357,0],[581,0,357,0],[582,0,357,0],[583,0,357,0],[584,0,357,0],[585,0,357,0],[586,0,357,0],[587,0,357,28,"options"],[587,12,357,28,"options"],[587,19,357,0],[587,84,357,38],[587,86,357,0],[588,0,357,42,"syncStatusChangeCallback"],[588,12,357,42,"syncStatusChangeCallback"],[588,36,357,0],[589,0,357,68,"downloadProgressCallback"],[589,12,357,68,"downloadProgressCallback"],[589,36,357,0],[590,0,357,94,"handleBinaryVersionMismatchCallback"],[590,12,357,94,"handleBinaryVersionMismatchCallback"],[590,47,357,0],[591,0,359,8,"syncOptions"],[591,12,359,8,"syncOptions"],[591,23,357,0],[592,0,360,4,"deploymentKey"],[592,14,360,4,"deploymentKey"],[592,27,360,17],[592,29,360,19],[592,33,357,0],[593,0,361,4,"ignoreFailedUpdates"],[593,14,361,4,"ignoreFailedUpdates"],[593,33,361,23],[593,35,361,25],[593,39,357,0],[594,0,362,4,"rollbackRetryOptions"],[594,14,362,4,"rollbackRetryOptions"],[594,34,362,24],[594,36,362,26],[594,40,357,0],[595,0,363,4,"installMode"],[595,14,363,4,"installMode"],[595,25,363,15],[595,27,363,17,"CodePush"],[595,35,363,25],[595,36,363,26,"InstallMode"],[595,47,363,17],[595,48,363,38,"ON_NEXT_RESTART"],[595,63,357,0],[596,0,364,4,"mandatoryInstallMode"],[596,14,364,4,"mandatoryInstallMode"],[596,34,364,24],[596,36,364,26,"CodePush"],[596,44,364,34],[596,45,364,35,"InstallMode"],[596,56,364,26],[596,57,364,47,"IMMEDIATE"],[596,66,357,0],[597,0,365,4,"minimumBackgroundDuration"],[597,14,365,4,"minimumBackgroundDuration"],[597,39,365,29],[597,41,365,31],[597,42,357,0],[598,0,366,4,"updateDialog"],[598,14,366,4,"updateDialog"],[598,26,366,16],[598,28,366,18],[599,0,357,0],[599,15,367,7,"options"],[599,22,357,0],[600,0,370,2,"syncStatusChangeCallback"],[600,12,370,2,"syncStatusChangeCallback"],[600,36,370,26],[600,39,370,29],[600,46,370,36,"syncStatusChangeCallback"],[600,70,370,29],[600,75,370,65],[600,85,370,29],[600,88,371,6,"syncStatusChangeCallback"],[600,112,370,29],[600,115,372,6],[600,125,372,7,"syncStatus"],[600,135,372,6],[600,137,372,22],[601,0,373,8],[601,22,373,15,"syncStatus"],[601,32,373,8],[602,0,374,10],[602,21,374,15,"CodePush"],[602,29,374,23],[602,30,374,24,"SyncStatus"],[602,40,374,15],[602,41,374,35,"CHECKING_FOR_UPDATE"],[602,60,374,10],[603,0,375,12],[603,40,375,16],[603,62,375,12],[604,0,376,12],[606,0,377,10],[606,21,377,15,"CodePush"],[606,29,377,23],[606,30,377,24,"SyncStatus"],[606,40,377,15],[606,41,377,35,"AWAITING_USER_ACTION"],[606,61,377,10],[607,0,378,12],[607,40,378,16],[607,63,378,12],[608,0,379,12],[610,0,380,10],[610,21,380,15,"CodePush"],[610,29,380,23],[610,30,380,24,"SyncStatus"],[610,40,380,15],[610,41,380,35,"DOWNLOADING_PACKAGE"],[610,60,380,10],[611,0,381,12],[611,40,381,16],[611,62,381,12],[612,0,382,12],[614,0,383,10],[614,21,383,15,"CodePush"],[614,29,383,23],[614,30,383,24,"SyncStatus"],[614,40,383,15],[614,41,383,35,"INSTALLING_UPDATE"],[614,58,383,10],[615,0,384,12],[615,40,384,16],[615,60,384,12],[616,0,385,12],[618,0,386,10],[618,21,386,15,"CodePush"],[618,29,386,23],[618,30,386,24,"SyncStatus"],[618,40,386,15],[618,41,386,35,"UP_TO_DATE"],[618,51,386,10],[619,0,387,12],[619,40,387,16],[619,60,387,12],[620,0,388,12],[622,0,389,10],[622,21,389,15,"CodePush"],[622,29,389,23],[622,30,389,24,"SyncStatus"],[622,40,389,15],[622,41,389,35,"UPDATE_IGNORED"],[622,55,389,10],[623,0,390,12],[623,40,390,16],[623,68,390,12],[624,0,391,12],[626,0,392,10],[626,21,392,15,"CodePush"],[626,29,392,23],[626,30,392,24,"SyncStatus"],[626,40,392,15],[626,41,392,35,"UPDATE_INSTALLED"],[626,57,392,10],[627,0,393,12],[627,22,393,16,"resolvedInstallMode"],[627,41,393,35],[627,45,393,39,"CodePush"],[627,53,393,47],[627,54,393,48,"InstallMode"],[627,65,393,39],[627,66,393,60,"ON_NEXT_RESTART"],[627,81,393,12],[627,83,393,77],[628,0,394,14],[628,42,394,18],[628,104,394,14],[629,0,395,13],[629,19,393,12],[629,25,395,19],[629,29,395,23,"resolvedInstallMode"],[629,48,395,42],[629,52,395,46,"CodePush"],[629,60,395,54],[629,61,395,55,"InstallMode"],[629,72,395,46],[629,73,395,67,"ON_NEXT_RESUME"],[629,87,395,19],[629,89,395,83],[630,0,396,14],[630,24,396,18,"syncOptions"],[630,35,396,29],[630,36,396,30,"minimumBackgroundDuration"],[630,61,396,18],[630,64,396,58],[630,65,396,14],[630,67,396,61],[631,0,397,16],[631,139,397,113,"syncOptions"],[631,150,397,124],[631,151,397,125,"minimumBackgroundDuration"],[631,176,397,16],[632,0,398,15],[632,21,396,14],[632,27,398,21],[633,0,399,16],[633,44,399,20],[633,108,399,16],[634,0,400,15],[635,0,401,13],[637,0,402,12],[639,0,403,10],[639,21,403,15,"CodePush"],[639,29,403,23],[639,30,403,24,"SyncStatus"],[639,40,403,15],[639,41,403,35,"UNKNOWN_ERROR"],[639,54,403,10],[640,0,404,12],[640,40,404,16],[640,68,404,12],[641,0,405,12],[642,0,373,8],[643,0,407,7],[643,13,370,2],[644,0,357,0],[645,0,357,0],[646,0,357,0],[646,46,410,10,"CodePush"],[646,54,410,18],[646,55,410,19,"notifyApplicationReady"],[646,77,410,10],[646,79,357,0],[648,0,357,0],[649,0,412,4,"syncStatusChangeCallback"],[649,12,412,4,"syncStatusChangeCallback"],[649,36,412,28],[649,37,412,29,"CodePush"],[649,45,412,37],[649,46,412,38,"SyncStatus"],[649,56,412,29],[649,57,412,49,"CHECKING_FOR_UPDATE"],[649,76,412,28],[649,77,412,4],[650,0,357,0],[651,0,357,0],[651,46,413,32,"checkForUpdate"],[651,60,413,46],[651,61,413,47,"syncOptions"],[651,72,413,58],[651,73,413,59,"deploymentKey"],[651,86,413,46],[651,88,413,74,"handleBinaryVersionMismatchCallback"],[651,123,413,46],[651,124,357,0],[653,0,357,0],[654,0,413,10,"remotePackage"],[654,12,413,10,"remotePackage"],[654,25,357,0],[656,0,415,10,"doDownloadAndInstall"],[656,12,415,10,"doDownloadAndInstall"],[656,32,357,0],[656,35,415,33],[656,44,415,10,"doDownloadAndInstall"],[656,64,415,33],[657,0,415,33],[658,0,415,33],[659,0,415,33],[660,0,415,33],[661,0,415,33],[662,0,416,6,"syncStatusChangeCallback"],[662,22,416,6,"syncStatusChangeCallback"],[662,46,416,30],[662,47,416,31,"CodePush"],[662,55,416,39],[662,56,416,40,"SyncStatus"],[662,66,416,31],[662,67,416,51,"DOWNLOADING_PACKAGE"],[662,86,416,30],[662,87,416,6],[663,0,415,33],[664,0,415,33],[664,56,417,33,"remotePackage"],[664,69,417,46],[664,70,417,47,"download"],[664,78,417,33],[664,79,417,56,"downloadProgressCallback"],[664,103,417,33],[664,104,415,33],[666,0,415,33],[667,0,417,12,"localPackage"],[667,22,417,12,"localPackage"],[667,34,415,33],[668,0,420,6,"resolvedInstallMode"],[668,22,420,6,"resolvedInstallMode"],[668,41,420,25],[668,44,420,28,"localPackage"],[668,56,420,40],[668,57,420,41,"isMandatory"],[668,68,420,28],[668,71,420,55,"syncOptions"],[668,82,420,66],[668,83,420,67,"mandatoryInstallMode"],[668,103,420,28],[668,106,420,90,"syncOptions"],[668,117,420,101],[668,118,420,102,"installMode"],[668,129,420,6],[669,0,422,6,"syncStatusChangeCallback"],[669,22,422,6,"syncStatusChangeCallback"],[669,46,422,30],[669,47,422,31,"CodePush"],[669,55,422,39],[669,56,422,40,"SyncStatus"],[669,66,422,31],[669,67,422,51,"INSTALLING_UPDATE"],[669,84,422,30],[669,85,422,6],[670,0,415,33],[671,0,415,33],[671,56,423,12,"localPackage"],[671,68,423,24],[671,69,423,25,"install"],[671,76,423,12],[671,77,423,33,"resolvedInstallMode"],[671,96,423,12],[671,98,423,54,"syncOptions"],[671,109,423,65],[671,110,423,66,"minimumBackgroundDuration"],[671,135,423,12],[671,137,423,93],[671,149,423,99],[672,0,424,8,"syncStatusChangeCallback"],[672,24,424,8,"syncStatusChangeCallback"],[672,48,424,32],[672,49,424,33,"CodePush"],[672,57,424,41],[672,58,424,42,"SyncStatus"],[672,68,424,33],[672,69,424,53,"UPDATE_INSTALLED"],[672,85,424,32],[672,86,424,8],[673,0,425,7],[673,23,423,12],[673,24,415,33],[675,0,415,33],[676,0,415,33],[676,56,427,13,"CodePush"],[676,64,427,21],[676,65,427,22,"SyncStatus"],[676,75,427,13],[676,76,427,33,"UPDATE_INSTALLED"],[676,92,415,33],[678,0,415,33],[679,0,415,33],[680,0,415,33],[681,0,415,33],[682,0,415,33],[683,0,415,33],[684,0,415,33],[684,13,357,0],[686,0,357,0],[687,0,357,0],[687,46,430,40,"shouldUpdateBeIgnored"],[687,67,430,61],[687,68,430,62,"remotePackage"],[687,81,430,61],[687,83,430,77,"syncOptions"],[687,94,430,61],[687,95,357,0],[689,0,357,0],[690,0,430,10,"updateShouldBeIgnored"],[690,12,430,10,"updateShouldBeIgnored"],[690,33,357,0],[692,0,357,0],[692,18,432,8],[692,19,432,9,"remotePackage"],[692,32,432,8],[692,36,432,26,"updateShouldBeIgnored"],[692,57,357,0],[693,0,357,0],[694,0,357,0],[695,0,357,0],[697,0,433,6],[697,16,433,10,"updateShouldBeIgnored"],[697,37,433,6],[697,39,433,33],[698,0,434,10],[698,36,434,14],[698,128,434,10],[699,0,435,7],[701,0,357,0],[702,0,357,0],[702,46,437,35,"CodePush"],[702,54,437,43],[702,55,437,44,"getCurrentPackage"],[702,72,437,35],[702,74,357,0],[704,0,357,0],[705,0,437,12,"currentPackage"],[705,12,437,12,"currentPackage"],[705,26,357,0],[707,0,357,0],[707,18,438,10,"currentPackage"],[707,32,438,24],[707,36,438,28,"currentPackage"],[707,50,438,42],[707,51,438,43,"isPending"],[707,60,357,0],[708,0,357,0],[709,0,357,0],[710,0,357,0],[712,0,439,8,"syncStatusChangeCallback"],[712,12,439,8,"syncStatusChangeCallback"],[712,36,439,32],[712,37,439,33,"CodePush"],[712,45,439,41],[712,46,439,42,"SyncStatus"],[712,56,439,33],[712,57,439,53,"UPDATE_INSTALLED"],[712,73,439,32],[712,74,439,8],[713,0,357,0],[713,47,440,15,"CodePush"],[713,55,440,23],[713,56,440,24,"SyncStatus"],[713,66,440,15],[713,67,440,35,"UPDATE_INSTALLED"],[713,83,357,0],[715,0,357,0],[716,0,442,8,"syncStatusChangeCallback"],[716,12,442,8,"syncStatusChangeCallback"],[716,36,442,32],[716,37,442,33,"CodePush"],[716,45,442,41],[716,46,442,42,"SyncStatus"],[716,56,442,33],[716,57,442,53,"UP_TO_DATE"],[716,67,442,32],[716,68,442,8],[717,0,357,0],[717,47,443,15,"CodePush"],[717,55,443,23],[717,56,443,24,"SyncStatus"],[717,66,443,15],[717,67,443,35,"UP_TO_DATE"],[717,77,357,0],[719,0,357,0],[720,0,357,0],[721,0,357,0],[723,0,357,0],[724,0,357,0],[724,17,445,15,"syncOptions"],[724,28,445,26],[724,29,445,27,"updateDialog"],[724,41,357,0],[725,0,357,0],[726,0,357,0],[727,0,357,0],[729,0,448,6],[729,16,448,10],[729,23,448,17,"syncOptions"],[729,34,448,28],[729,35,448,29,"updateDialog"],[729,47,448,10],[729,52,448,46],[729,60,448,6],[729,62,448,56],[730,0,449,8,"syncOptions"],[730,14,449,8,"syncOptions"],[730,25,449,19],[730,26,449,20,"updateDialog"],[730,38,449,8],[730,41,449,35,"CodePush"],[730,49,449,43],[730,50,449,44,"DEFAULT_UPDATE_DIALOG"],[730,71,449,8],[731,0,450,7],[731,13,448,6],[731,19,450,13],[732,0,451,8,"syncOptions"],[732,14,451,8,"syncOptions"],[732,25,451,19],[732,26,451,20,"updateDialog"],[732,38,451,8],[732,73,451,40,"CodePush"],[732,81,451,48],[732,82,451,49,"DEFAULT_UPDATE_DIALOG"],[732,103,451,8],[732,106,451,75,"syncOptions"],[732,117,451,86],[732,118,451,87,"updateDialog"],[732,130,451,8],[733,0,452,7],[735,0,357,0],[736,0,357,0],[736,46,454,19],[736,50,454,23,"Promise"],[736,57,454,19],[736,58,454,31],[736,68,454,32,"resolve"],[736,75,454,31],[736,77,454,41,"reject"],[736,83,454,31],[736,85,454,52],[737,0,455,8],[737,18,455,12,"message"],[737,25,455,19],[737,28,455,22],[737,32,455,8],[738,0,456,8],[738,18,456,12,"installButtonText"],[738,35,456,29],[738,38,456,32],[738,42,456,8],[739,0,458,8],[739,18,458,14,"dialogButtons"],[739,31,458,27],[739,34,458,30],[739,36,458,8],[741,0,460,8],[741,18,460,12,"remotePackage"],[741,31,460,25],[741,32,460,26,"isMandatory"],[741,43,460,8],[741,45,460,39],[742,0,461,10,"message"],[742,16,461,10,"message"],[742,23,461,17],[742,26,461,20,"syncOptions"],[742,37,461,31],[742,38,461,32,"updateDialog"],[742,50,461,20],[742,51,461,45,"mandatoryUpdateMessage"],[742,73,461,10],[743,0,462,10,"installButtonText"],[743,16,462,10,"installButtonText"],[743,33,462,27],[743,36,462,30,"syncOptions"],[743,47,462,41],[743,48,462,42,"updateDialog"],[743,60,462,30],[743,61,462,55,"mandatoryContinueButtonLabel"],[743,89,462,10],[744,0,463,9],[744,15,460,8],[744,21,463,15],[745,0,464,10,"message"],[745,16,464,10,"message"],[745,23,464,17],[745,26,464,20,"syncOptions"],[745,37,464,31],[745,38,464,32,"updateDialog"],[745,50,464,20],[745,51,464,45,"optionalUpdateMessage"],[745,72,464,10],[746,0,465,10,"installButtonText"],[746,16,465,10,"installButtonText"],[746,33,465,27],[746,36,465,30,"syncOptions"],[746,47,465,41],[746,48,465,42,"updateDialog"],[746,60,465,30],[746,61,465,55,"optionalInstallButtonLabel"],[746,87,465,10],[747,0,468,10,"dialogButtons"],[747,16,468,10,"dialogButtons"],[747,29,468,23],[747,30,468,24,"push"],[747,34,468,10],[747,35,468,29],[748,0,469,12,"text"],[748,18,469,12,"text"],[748,22,469,16],[748,24,469,18,"syncOptions"],[748,35,469,29],[748,36,469,30,"updateDialog"],[748,48,469,18],[748,49,469,43,"optionalIgnoreButtonLabel"],[748,74,468,29],[749,0,470,12,"onPress"],[749,18,470,12,"onPress"],[749,25,470,19],[749,27,470,21],[749,46,470,27],[750,0,471,14,"syncStatusChangeCallback"],[750,20,471,14,"syncStatusChangeCallback"],[750,44,471,38],[750,45,471,39,"CodePush"],[750,53,471,47],[750,54,471,48,"SyncStatus"],[750,64,471,39],[750,65,471,59,"UPDATE_IGNORED"],[750,79,471,38],[750,80,471,14],[751,0,472,14,"resolve"],[751,20,472,14,"resolve"],[751,27,472,21],[751,28,472,22,"CodePush"],[751,36,472,30],[751,37,472,31,"SyncStatus"],[751,47,472,22],[751,48,472,42,"UPDATE_IGNORED"],[751,62,472,21],[751,63,472,14],[752,0,473,13],[753,0,468,29],[753,17,468,10],[754,0,475,9],[756,0,479,8,"dialogButtons"],[756,14,479,8,"dialogButtons"],[756,27,479,21],[756,28,479,22,"push"],[756,32,479,8],[756,33,479,27],[757,0,480,10,"text"],[757,16,480,10,"text"],[757,20,480,14],[757,22,480,16,"installButtonText"],[757,39,479,27],[758,0,481,10,"onPress"],[758,16,481,10,"onPress"],[758,23,481,17],[758,25,481,18],[758,44,481,24],[759,0,482,12,"doDownloadAndInstall"],[759,18,482,12,"doDownloadAndInstall"],[759,38,482,32],[759,41,483,15,"then"],[759,45,482,12],[759,46,483,20,"resolve"],[759,53,482,12],[759,55,483,29,"reject"],[759,61,482,12],[760,0,484,11],[761,0,479,27],[761,15,479,8],[763,0,489,8],[763,18,489,12,"syncOptions"],[763,29,489,23],[763,30,489,24,"updateDialog"],[763,42,489,12],[763,43,489,37,"appendReleaseDescription"],[763,67,489,12],[763,71,489,65,"remotePackage"],[763,84,489,78],[763,85,489,79,"description"],[763,96,489,8],[763,98,489,92],[764,0,490,10,"message"],[764,16,490,10,"message"],[764,23,490,17],[764,27,490,24,"syncOptions"],[764,38,490,35],[764,39,490,36,"updateDialog"],[764,51,490,24],[764,52,490,49,"descriptionPrefix"],[764,69,490,17],[764,78,490,70,"remotePackage"],[764,91,490,83],[764,92,490,84,"description"],[764,103,490,10],[765,0,491,9],[767,0,493,8,"syncStatusChangeCallback"],[767,14,493,8,"syncStatusChangeCallback"],[767,38,493,32],[767,39,493,33,"CodePush"],[767,47,493,41],[767,48,493,42,"SyncStatus"],[767,58,493,33],[767,59,493,53,"AWAITING_USER_ACTION"],[767,79,493,32],[767,80,493,8],[769,0,494,8,"Alert"],[769,34,494,14,"alert"],[769,39,494,8],[769,40,494,20,"syncOptions"],[769,51,494,31],[769,52,494,32,"updateDialog"],[769,64,494,20],[769,65,494,45,"title"],[769,70,494,8],[769,72,494,52,"message"],[769,79,494,8],[769,81,494,61,"dialogButtons"],[769,94,494,8],[770,0,495,7],[770,13,454,19],[770,14,357,0],[772,0,357,0],[773,0,357,0],[775,0,357,0],[776,0,357,0],[777,0,357,0],[777,46,497,19,"doDownloadAndInstall"],[777,66,497,39],[777,68,357,0],[779,0,357,0],[780,0,357,0],[782,0,357,0],[783,0,357,0],[784,0,357,0],[786,0,357,0],[787,0,357,0],[788,0,357,0],[789,0,500,4,"syncStatusChangeCallback"],[789,12,500,4,"syncStatusChangeCallback"],[789,36,500,28],[789,37,500,29,"CodePush"],[789,45,500,37],[789,46,500,38,"SyncStatus"],[789,56,500,29],[789,57,500,49,"UNKNOWN_ERROR"],[789,70,500,28],[789,71,500,4],[790,0,501,4],[790,34,501,8],[790,48,501,14,"message"],[790,55,501,4],[791,0,357,0],[793,0,357,0],[794,0,357,0],[795,0,357,0],[796,0,357,0],[797,0,357,0],[798,0,357,0],[799,0,357,0],[801,0,504,1],[802,0,506,0],[802,6,506,4,"CodePush"],[802,14,506,0],[804,0,508,0],[804,11,508,9,"codePushify"],[804,22,508,0],[804,25,508,35],[805,0,508,35],[805,8,508,21,"options"],[805,15,508,35],[805,86,508,31],[805,88,508,35],[806,0,509,2],[806,8,509,6,"React"],[806,13,509,2],[808,0,510,2],[808,8,510,6,"ReactNative"],[808,19,510,17],[808,22,510,20,"require"],[808,33,510,27],[808,69,510,2],[810,0,512,2],[810,8,512,6],[811,0,512,8,"React"],[811,6,512,8,"React"],[811,11,512,13],[811,14,512,16,"require"],[811,25,512,23],[811,54,512,8],[812,0,512,35],[812,5,512,2],[812,6,512,36],[812,13,512,43,"e"],[812,14,512,36],[812,16,512,46],[812,17,512,49],[814,0,513,2],[814,8,513,6],[814,9,513,7,"React"],[814,14,513,2],[814,16,513,14],[815,0,514,4],[815,10,514,8],[816,0,514,10,"React"],[816,8,514,10,"React"],[816,13,514,15],[816,16,514,18,"ReactNative"],[816,27,514,29],[816,28,514,30,"React"],[816,33,514,10],[817,0,514,38],[817,7,514,4],[817,8,514,39],[817,15,514,46,"e"],[817,16,514,39],[817,18,514,49],[817,19,514,52],[819,0,515,4],[819,10,515,8],[819,11,515,9,"React"],[819,16,515,4],[819,18,515,16],[820,0,516,6],[820,14,516,12],[820,18,516,16,"Error"],[820,23,516,12],[820,24,516,22],[820,60,516,12],[820,61,516,6],[821,0,517,5],[822,0,518,3],[824,0,520,2],[824,8,520,6],[824,9,520,7,"React"],[824,14,520,12],[824,15,520,13,"Component"],[824,24,520,2],[824,26,520,24],[825,0,521,4],[825,12,521,10],[825,16,521,14,"Error"],[825,21,521,10],[825,237,521,4],[826,0,526,3],[828,0,528,2],[828,8,528,6,"decorator"],[828,17,528,15],[828,20,528,18],[828,29,528,6,"decorator"],[828,38,528,18],[828,39,528,19,"RootComponent"],[828,52,528,18],[828,54,528,37],[829,0,529,4],[829,10,529,10,"extended"],[829,18,529,18],[830,0,529,18],[832,0,529,18],[834,0,529,18],[835,0,529,18],[836,0,529,18],[837,0,529,18],[839,0,529,18],[840,0,529,18],[841,0,529,18],[841,46,530,26],[842,0,531,8],[842,16,531,12,"options"],[842,23,531,19],[842,24,531,20,"checkFrequency"],[842,38,531,12],[842,43,531,39,"CodePush"],[842,51,531,47],[842,52,531,48,"CheckFrequency"],[842,66,531,39],[842,67,531,63,"MANUAL"],[842,73,531,8],[842,75,531,71],[843,0,532,10,"CodePush"],[843,14,532,10,"CodePush"],[843,22,532,18],[843,23,532,19,"notifyAppReady"],[843,37,532,10],[844,0,533,9],[844,13,531,8],[844,19,533,15],[845,0,534,10],[845,18,534,14,"rootComponentInstance"],[845,39,534,35],[845,42,534,38],[845,47,534,43,"refs"],[845,51,534,38],[845,52,534,48,"rootComponent"],[845,65,534,10],[846,0,536,10],[846,18,536,14,"syncStatusCallback"],[846,36,536,10],[848,0,537,10],[848,18,537,14,"rootComponentInstance"],[848,39,537,35],[848,43,537,39,"rootComponentInstance"],[848,64,537,60],[848,65,537,61,"codePushStatusDidChange"],[848,88,537,10],[848,90,537,86],[849,0,538,12,"syncStatusCallback"],[849,16,538,12,"syncStatusCallback"],[849,34,538,30],[849,37,538,33,"rootComponentInstance"],[849,58,538,54],[849,59,538,55,"codePushStatusDidChange"],[849,82,538,12],[851,0,539,12],[851,20,539,16,"rootComponentInstance"],[851,41,539,37],[851,53,539,49,"React"],[851,58,539,54],[851,59,539,55,"Component"],[851,68,539,12],[851,70,539,66],[852,0,540,14,"syncStatusCallback"],[852,18,540,14,"syncStatusCallback"],[852,36,540,32],[852,39,540,35,"syncStatusCallback"],[852,57,540,53],[852,58,540,54,"bind"],[852,62,540,35],[852,63,540,59,"rootComponentInstance"],[852,84,540,35],[852,85,540,14],[853,0,541,13],[854,0,542,11],[856,0,544,10],[856,18,544,14,"downloadProgressCallback"],[856,43,544,10],[858,0,545,10],[858,18,545,14,"rootComponentInstance"],[858,39,545,35],[858,43,545,39,"rootComponentInstance"],[858,64,545,60],[858,65,545,61,"codePushDownloadDidProgress"],[858,92,545,10],[858,94,545,90],[859,0,546,12,"downloadProgressCallback"],[859,16,546,12,"downloadProgressCallback"],[859,41,546,36],[859,44,546,39,"rootComponentInstance"],[859,65,546,60],[859,66,546,61,"codePushDownloadDidProgress"],[859,93,546,12],[861,0,547,12],[861,20,547,16,"rootComponentInstance"],[861,41,547,37],[861,53,547,49,"React"],[861,58,547,54],[861,59,547,55,"Component"],[861,68,547,12],[861,70,547,66],[862,0,548,14,"downloadProgressCallback"],[862,18,548,14,"downloadProgressCallback"],[862,43,548,38],[862,46,548,41,"downloadProgressCallback"],[862,71,548,65],[862,72,548,66,"bind"],[862,76,548,41],[862,77,548,71,"rootComponentInstance"],[862,98,548,41],[862,99,548,14],[863,0,549,13],[864,0,550,11],[866,0,552,10],[866,18,552,14,"handleBinaryVersionMismatchCallback"],[866,53,552,10],[868,0,553,10],[868,18,553,14,"rootComponentInstance"],[868,39,553,35],[868,43,553,39,"rootComponentInstance"],[868,64,553,60],[868,65,553,61,"codePushOnBinaryVersionMismatch"],[868,96,553,10],[868,98,553,94],[869,0,554,12,"handleBinaryVersionMismatchCallback"],[869,16,554,12,"handleBinaryVersionMismatchCallback"],[869,51,554,47],[869,54,554,50,"rootComponentInstance"],[869,75,554,71],[869,76,554,72,"codePushOnBinaryVersionMismatch"],[869,107,554,12],[871,0,555,12],[871,20,555,16,"rootComponentInstance"],[871,41,555,37],[871,53,555,49,"React"],[871,58,555,54],[871,59,555,55,"Component"],[871,68,555,12],[871,70,555,66],[872,0,556,14,"handleBinaryVersionMismatchCallback"],[872,18,556,14,"handleBinaryVersionMismatchCallback"],[872,53,556,49],[872,56,556,52,"handleBinaryVersionMismatchCallback"],[872,91,556,87],[872,92,556,88,"bind"],[872,96,556,52],[872,97,556,93,"rootComponentInstance"],[872,118,556,52],[872,119,556,14],[873,0,557,13],[874,0,558,11],[876,0,560,10,"CodePush"],[876,14,560,10,"CodePush"],[876,22,560,18],[876,23,560,19,"sync"],[876,27,560,10],[876,28,560,24,"options"],[876,35,560,10],[876,37,560,33,"syncStatusCallback"],[876,55,560,10],[876,57,560,53,"downloadProgressCallback"],[876,82,560,10],[876,84,560,79,"handleBinaryVersionMismatchCallback"],[876,119,560,10],[878,0,561,10],[878,18,561,14,"options"],[878,25,561,21],[878,26,561,22,"checkFrequency"],[878,40,561,14],[878,45,561,41,"CodePush"],[878,53,561,49],[878,54,561,50,"CheckFrequency"],[878,68,561,41],[878,69,561,65,"ON_APP_RESUME"],[878,82,561,10],[878,84,561,80],[879,0,562,12,"ReactNative"],[879,16,562,12,"ReactNative"],[879,27,562,23],[879,28,562,24,"AppState"],[879,36,562,12],[879,37,562,33,"addEventListener"],[879,53,562,12],[879,54,562,50],[879,62,562,12],[879,64,562,60],[879,74,562,61,"newState"],[879,82,562,60],[879,84,562,74],[880,0,563,14,"newState"],[880,18,563,14,"newState"],[880,26,563,22],[880,31,563,27],[880,39,563,14],[880,43,563,39,"CodePush"],[880,51,563,47],[880,52,563,48,"sync"],[880,56,563,39],[880,57,563,53,"options"],[880,64,563,39],[880,66,563,62,"syncStatusCallback"],[880,84,563,39],[880,86,563,82,"downloadProgressCallback"],[880,111,563,39],[880,112,563,14],[881,0,564,13],[881,17,562,12],[882,0,565,11],[883,0,566,9],[884,0,567,7],[885,0,529,18],[886,0,529,18],[887,0,529,18],[887,35,569,15],[888,0,570,8],[888,16,570,14,"props"],[888,21,570,19],[888,42,570,26],[888,47,570,31,"props"],[888,52,570,19],[888,53,570,8],[890,0,574,8],[890,16,574,12,"RootComponent"],[890,29,574,25],[890,30,574,26,"prototype"],[890,39,574,12],[890,40,574,36,"render"],[890,46,574,8],[890,48,574,44],[891,0,575,10,"props"],[891,14,575,10,"props"],[891,19,575,15],[891,20,575,16,"ref"],[891,23,575,10],[891,26,575,22],[891,41,575,10],[892,0,576,9],[894,0,578,8],[894,19,578,15],[894,39,578,16],[894,52,578,15],[894,54,578,34,"props"],[894,59,578,15],[894,60,578,8],[895,0,579,7],[896,0,529,18],[897,0,529,18],[898,0,529,18],[898,8,529,53,"React"],[898,13,529,58],[898,14,529,59,"Component"],[898,23,529,18],[898,24,529,4],[900,0,582,4],[900,13,582,11],[900,48,582,24,"extended"],[900,56,582,11],[900,58,582,34,"RootComponent"],[900,71,582,11],[900,72,582,4],[901,0,583,3],[901,5,528,2],[903,0,585,2],[903,8,585,6],[903,15,585,13,"options"],[903,22,585,6],[903,27,585,25],[903,37,585,2],[903,39,585,37],[904,0,587,4],[904,13,587,11,"decorator"],[904,22,587,20],[904,23,587,21,"options"],[904,30,587,20],[904,31,587,4],[905,0,588,3],[905,5,585,2],[905,11,588,9],[906,0,589,4],[906,13,589,11,"decorator"],[906,22,589,4],[907,0,590,3],[908,0,591,1],[910,0,597,0],[910,6,597,4,"NativeCodePush"],[910,20,597,0],[910,22,597,20],[911,0,598,2,"CodePush"],[911,4,598,2,"CodePush"],[911,12,598,10],[911,15,598,13,"codePushify"],[911,26,598,2],[912,0,599,2],[912,27,599,16,"CodePush"],[912,35,599,2],[912,37,599,26],[913,0,600,4,"AcquisitionSdk"],[913,6,600,4,"AcquisitionSdk"],[913,20,600,18],[913,22,600,20,"Sdk"],[913,56,599,26],[914,0,601,4,"checkForUpdate"],[914,6,601,4,"checkForUpdate"],[914,20,601,18],[914,22,601,4,"checkForUpdate"],[914,36,599,26],[915,0,602,4,"getConfiguration"],[915,6,602,4,"getConfiguration"],[915,22,602,20],[915,24,602,4,"getConfiguration"],[915,40,599,26],[916,0,603,4,"getCurrentPackage"],[916,6,603,4,"getCurrentPackage"],[916,23,603,21],[916,25,603,4,"getCurrentPackage"],[916,42,599,26],[917,0,604,4,"getUpdateMetadata"],[917,6,604,4,"getUpdateMetadata"],[917,23,604,21],[917,25,604,4,"getUpdateMetadata"],[917,42,599,26],[918,0,605,4,"log"],[918,6,605,4,"log"],[918,9,605,7],[918,11,605,4,"log"],[918,27,599,26],[919,0,606,4,"notifyAppReady"],[919,6,606,4,"notifyAppReady"],[919,20,606,18],[919,22,606,20,"notifyApplicationReady"],[919,44,599,26],[920,0,607,4,"notifyApplicationReady"],[920,6,607,4,"notifyApplicationReady"],[920,28,607,26],[920,30,607,4,"notifyApplicationReady"],[920,52,599,26],[921,0,608,4,"restartApp"],[921,6,608,4,"restartApp"],[921,16,608,14],[921,18,608,16,"RestartManager"],[921,42,608,31,"restartApp"],[921,52,599,26],[922,0,609,4,"setUpTestDependencies"],[922,6,609,4,"setUpTestDependencies"],[922,27,609,25],[922,29,609,4,"setUpTestDependencies"],[922,50,599,26],[923,0,610,4,"sync"],[923,6,610,4,"sync"],[923,10,610,8],[923,12,610,4,"sync"],[923,16,599,26],[924,0,611,4,"disallowRestart"],[924,6,611,4,"disallowRestart"],[924,21,611,19],[924,23,611,21,"RestartManager"],[924,47,611,36,"disallow"],[924,55,599,26],[925,0,612,4,"allowRestart"],[925,6,612,4,"allowRestart"],[925,18,612,16],[925,20,612,18,"RestartManager"],[925,44,612,33,"allow"],[925,49,599,26],[926,0,613,4,"clearUpdates"],[926,6,613,4,"clearUpdates"],[926,18,613,16],[926,20,613,18,"NativeCodePush"],[926,34,613,32],[926,35,613,33,"clearUpdates"],[926,47,599,26],[927,0,614,4,"InstallMode"],[927,6,614,4,"InstallMode"],[927,17,614,15],[927,19,614,17],[928,0,615,6,"IMMEDIATE"],[928,8,615,6,"IMMEDIATE"],[928,17,615,15],[928,19,615,17,"NativeCodePush"],[928,33,615,31],[928,34,615,32,"codePushInstallModeImmediate"],[928,62,614,17],[929,0,616,6,"ON_NEXT_RESTART"],[929,8,616,6,"ON_NEXT_RESTART"],[929,23,616,21],[929,25,616,23,"NativeCodePush"],[929,39,616,37],[929,40,616,38,"codePushInstallModeOnNextRestart"],[929,72,614,17],[930,0,617,6,"ON_NEXT_RESUME"],[930,8,617,6,"ON_NEXT_RESUME"],[930,22,617,20],[930,24,617,22,"NativeCodePush"],[930,38,617,36],[930,39,617,37,"codePushInstallModeOnNextResume"],[930,70,614,17],[931,0,618,6,"ON_NEXT_SUSPEND"],[931,8,618,6,"ON_NEXT_SUSPEND"],[931,23,618,21],[931,25,618,23,"NativeCodePush"],[931,39,618,37],[931,40,618,38,"codePushInstallModeOnNextSuspend"],[932,0,614,17],[932,7,599,26],[933,0,622,4,"SyncStatus"],[933,6,622,4,"SyncStatus"],[933,16,622,14],[933,18,622,16],[934,0,623,6,"UP_TO_DATE"],[934,8,623,6,"UP_TO_DATE"],[934,18,623,16],[934,20,623,18],[934,21,622,16],[935,0,624,6,"UPDATE_INSTALLED"],[935,8,624,6,"UPDATE_INSTALLED"],[935,24,624,22],[935,26,624,24],[935,27,622,16],[936,0,625,6,"UPDATE_IGNORED"],[936,8,625,6,"UPDATE_IGNORED"],[936,22,625,20],[936,24,625,22],[936,25,622,16],[937,0,626,6,"UNKNOWN_ERROR"],[937,8,626,6,"UNKNOWN_ERROR"],[937,21,626,19],[937,23,626,21],[937,24,622,16],[938,0,627,6,"SYNC_IN_PROGRESS"],[938,8,627,6,"SYNC_IN_PROGRESS"],[938,24,627,22],[938,26,627,24],[938,27,622,16],[939,0,628,6,"CHECKING_FOR_UPDATE"],[939,8,628,6,"CHECKING_FOR_UPDATE"],[939,27,628,25],[939,29,628,27],[939,30,622,16],[940,0,629,6,"AWAITING_USER_ACTION"],[940,8,629,6,"AWAITING_USER_ACTION"],[940,28,629,26],[940,30,629,28],[940,31,622,16],[941,0,630,6,"DOWNLOADING_PACKAGE"],[941,8,630,6,"DOWNLOADING_PACKAGE"],[941,27,630,25],[941,29,630,27],[941,30,622,16],[942,0,631,6,"INSTALLING_UPDATE"],[942,8,631,6,"INSTALLING_UPDATE"],[942,25,631,23],[942,27,631,25],[943,0,622,16],[943,7,599,26],[944,0,633,4,"CheckFrequency"],[944,6,633,4,"CheckFrequency"],[944,20,633,18],[944,22,633,20],[945,0,634,6,"ON_APP_START"],[945,8,634,6,"ON_APP_START"],[945,20,634,18],[945,22,634,20],[945,23,633,20],[946,0,635,6,"ON_APP_RESUME"],[946,8,635,6,"ON_APP_RESUME"],[946,21,635,19],[946,23,635,21],[946,24,633,20],[947,0,636,6,"MANUAL"],[947,8,636,6,"MANUAL"],[947,14,636,12],[947,16,636,14],[948,0,633,20],[948,7,599,26],[949,0,638,4,"UpdateState"],[949,6,638,4,"UpdateState"],[949,17,638,15],[949,19,638,17],[950,0,639,6,"RUNNING"],[950,8,639,6,"RUNNING"],[950,15,639,13],[950,17,639,15,"NativeCodePush"],[950,31,639,29],[950,32,639,30,"codePushUpdateStateRunning"],[950,58,638,17],[951,0,640,6,"PENDING"],[951,8,640,6,"PENDING"],[951,15,640,13],[951,17,640,15,"NativeCodePush"],[951,31,640,29],[951,32,640,30,"codePushUpdateStatePending"],[951,58,638,17],[952,0,641,6,"LATEST"],[952,8,641,6,"LATEST"],[952,14,641,12],[952,16,641,14,"NativeCodePush"],[952,30,641,28],[952,31,641,29,"codePushUpdateStateLatest"],[953,0,638,17],[953,7,599,26],[954,0,643,4,"DeploymentStatus"],[954,6,643,4,"DeploymentStatus"],[954,22,643,20],[954,24,643,22],[955,0,644,6,"FAILED"],[955,8,644,6,"FAILED"],[955,14,644,12],[955,16,644,14],[955,34,643,22],[956,0,645,6,"SUCCEEDED"],[956,8,645,6,"SUCCEEDED"],[956,17,645,15],[956,19,645,17],[957,0,643,22],[957,7,599,26],[958,0,647,4,"DEFAULT_UPDATE_DIALOG"],[958,6,647,4,"DEFAULT_UPDATE_DIALOG"],[958,27,647,25],[958,29,647,27],[959,0,648,6,"appendReleaseDescription"],[959,8,648,6,"appendReleaseDescription"],[959,32,648,30],[959,34,648,32],[959,39,647,27],[960,0,649,6,"descriptionPrefix"],[960,8,649,6,"descriptionPrefix"],[960,25,649,23],[960,27,649,25],[960,43,647,27],[961,0,650,6,"mandatoryContinueButtonLabel"],[961,8,650,6,"mandatoryContinueButtonLabel"],[961,36,650,34],[961,38,650,36],[961,48,647,27],[962,0,651,6,"mandatoryUpdateMessage"],[962,8,651,6,"mandatoryUpdateMessage"],[962,30,651,28],[962,32,651,30],[962,80,647,27],[963,0,652,6,"optionalIgnoreButtonLabel"],[963,8,652,6,"optionalIgnoreButtonLabel"],[963,33,652,31],[963,35,652,33],[963,43,647,27],[964,0,653,6,"optionalInstallButtonLabel"],[964,8,653,6,"optionalInstallButtonLabel"],[964,34,653,32],[964,36,653,34],[964,45,647,27],[965,0,654,6,"optionalUpdateMessage"],[965,8,654,6,"optionalUpdateMessage"],[965,29,654,27],[965,31,654,29],[965,86,647,27],[966,0,655,6,"title"],[966,8,655,6,"title"],[966,13,655,11],[966,15,655,13],[967,0,647,27],[967,7,599,26],[968,0,657,4,"DEFAULT_ROLLBACK_RETRY_OPTIONS"],[968,6,657,4,"DEFAULT_ROLLBACK_RETRY_OPTIONS"],[968,36,657,34],[968,38,657,36],[969,0,658,6,"delayInHours"],[969,8,658,6,"delayInHours"],[969,20,658,18],[969,22,658,20],[969,24,657,36],[970,0,659,6,"maxRetryAttempts"],[970,8,659,6,"maxRetryAttempts"],[970,24,659,22],[970,26,659,24],[971,0,657,36],[972,0,599,26],[972,5,599,2],[973,0,662,1],[973,3,597,0],[973,9,662,7],[974,0,663,2],[974,26,663,6],[974,144,663,2],[975,0,664,1],[977,0,666,0,"module"],[977,2,666,0,"module"],[977,8,666,6],[977,9,666,7,"exports"],[977,16,666,0],[977,19,666,17,"CodePush"],[977,27,666,0]],"functionMap":{"names":["<global>","checkForUpdate","<anonymous>","getConfiguration","getCurrentPackage","getUpdateMetadata","getPromisifiedSdk","sdk.queryUpdateWithCurrentPackage","Promise$argument_0","module.exports...queryUpdateWithCurrentPackage.call$argument_2","sdk.reportStatusDeploy","module.exports...reportStatusDeploy.call$argument_5","sdk.reportStatusDownload","module.exports...reportStatusDownload.call$argument_2","notifyApplicationReadyInternal","tryReportStatus","resumeListener","shouldUpdateBeIgnored","validateLatestRollbackInfo","validateRollbackRetryOptions","setUpTestDependencies","setSyncCompleted","syncStatusCallbackWithTryCatch","downloadProgressCallbackWithTryCatch","syncInternal","doDownloadAndInstall","localPackage.install$argument_2","dialogButtons.push$argument_0.onPress","codePushify","decorator","CodePushComponent","CodePushComponent#componentDidMount","ReactNative.AppState.addEventListener$argument_1","CodePushComponent#render"],"mappings":"AAA;ACW;CD+E;0BEE;SCE;GDS;CFC;AIE;CJE;AKE;CLQ;AME;sCCG;uBCC;oGCC;ODM;KDC;GDC;2BIE;uBFC;sJGC;OHM;KEC;GJC;6BME;uBJC;gGKC;OLM;KIC;GNC;CNG;gCEI;CFS;AcE;CdM;AeE;uBC+B;ODQ;CfI;AiBE;CjBoC;AkBE;ClBM;AmBE;CnBiB;AoBK;CpBI;cEI;2BmBE,iCnB;uCoBK;OpBM;6CqBI;OrBM;CFkB;AwBW;MtBe;OsBmC;iCCQ;6FCQ;ODE;KDG;+BhB0B;qBmBgB;anBG;kBmBQ;WnBG;OgBW;CxBS;A4BI;kBCoB;qBCC;MCC;4DCgC;aDE;ODG;MGE;OHU;KDC;GDG;C5BQ"}},"type":"js/module"}]}