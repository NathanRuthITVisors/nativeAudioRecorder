{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../../Text/Text","data":{"isAsync":false}},{"name":"../../UTFSequence","data":{"isAsync":false}},{"name":"../../Utilities/stringifySafe","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var React = _$$_REQUIRE(_dependencyMap[1], \"react\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[2], \"../../Text/Text\");\n\n  var UTFSequence = _$$_REQUIRE(_dependencyMap[3], \"../../UTFSequence\");\n\n  var stringifySafe = _$$_REQUIRE(_dependencyMap[4], \"../../Utilities/stringifySafe\");\n\n  var SUBSTITUTION = UTFSequence.BOM + '%s';\n  var YellowBoxCategory = {\n    parse: function parse(args) {\n      var categoryParts = [];\n      var contentParts = [];\n      var substitutionOffsets = [];\n\n      var remaining = _toConsumableArray(args);\n\n      if (typeof remaining[0] === 'string') {\n        var formatString = String(remaining.shift());\n        var formatStringParts = formatString.split('%s');\n        var substitutionCount = formatStringParts.length - 1;\n        var substitutions = remaining.splice(0, substitutionCount);\n        var categoryString = '';\n        var contentString = '';\n        var substitutionIndex = 0;\n\n        for (var _iterator = _createForOfIteratorHelperLoose(formatStringParts), _step; !(_step = _iterator()).done;) {\n          var formatStringPart = _step.value;\n          categoryString += formatStringPart;\n          contentString += formatStringPart;\n\n          if (substitutionIndex < substitutionCount) {\n            if (substitutionIndex < substitutions.length) {\n              var substitution = stringifySafe(substitutions[substitutionIndex]);\n              substitutionOffsets.push({\n                length: substitution.length,\n                offset: contentString.length\n              });\n              categoryString += SUBSTITUTION;\n              contentString += substitution;\n            } else {\n              substitutionOffsets.push({\n                length: 2,\n                offset: contentString.length\n              });\n              categoryString += '%s';\n              contentString += '%s';\n            }\n\n            substitutionIndex++;\n          }\n        }\n\n        categoryParts.push(categoryString);\n        contentParts.push(contentString);\n      }\n\n      var remainingArgs = remaining.map(stringifySafe);\n      categoryParts.push.apply(categoryParts, _toConsumableArray(remainingArgs));\n      contentParts.push.apply(contentParts, _toConsumableArray(remainingArgs));\n      return {\n        category: categoryParts.join(' '),\n        message: {\n          content: contentParts.join(' '),\n          substitutions: substitutionOffsets\n        }\n      };\n    },\n    render: function render(_ref, substitutionStyle) {\n      var content = _ref.content,\n          substitutions = _ref.substitutions;\n      var elements = [];\n      var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n        var key = String(index);\n\n        if (substitution.offset > prevOffset) {\n          var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n          elements.push(React.createElement(Text, {\n            key: key\n          }, prevPart));\n        }\n\n        var substititionPart = content.substr(substitution.offset, substitution.length);\n        elements.push(React.createElement(Text, {\n          key: key + '.5',\n          style: substitutionStyle\n        }, substititionPart));\n        return substitution.offset + substitution.length;\n      }, 0);\n\n      if (lastOffset < content.length) {\n        var lastPart = content.substr(lastOffset);\n        elements.push(React.createElement(Text, {\n          key: \"-1\"\n        }, lastPart));\n      }\n\n      return elements;\n    }\n  };\n  module.exports = YellowBoxCategory;\n});","lineCount":113,"map":[[2,0,11,0],[12,0,13,0],[12,6,13,6,"React"],[12,11,13,11],[12,14,13,14,"require"],[12,25,13,21],[12,53,13,0],[14,0,14,0],[14,6,14,6,"Text"],[14,10,14,10],[14,13,14,13,"require"],[14,24,14,20],[14,62,14,0],[16,0,15,0],[16,6,15,6,"UTFSequence"],[16,17,15,17],[16,20,15,20,"require"],[16,31,15,27],[16,71,15,0],[18,0,17,0],[18,6,17,6,"stringifySafe"],[18,19,17,19],[18,22,17,22,"require"],[18,33,17,29],[18,85,17,0],[20,0,32,0],[20,6,32,6,"SUBSTITUTION"],[20,18,32,18],[20,21,32,21,"UTFSequence"],[20,32,32,32],[20,33,32,33,"BOM"],[20,36,32,21],[20,39,32,39],[20,43,32,0],[21,0,34,0],[21,6,34,6,"YellowBoxCategory"],[21,23,34,23],[21,26,34,26],[22,0,35,2,"parse"],[22,4,35,2,"parse"],[22,9,34,26],[22,26,36,4,"args"],[22,30,34,26],[22,32,40,6],[23,0,41,4],[23,10,41,10,"categoryParts"],[23,23,41,23],[23,26,41,26],[23,28,41,4],[24,0,42,4],[24,10,42,10,"contentParts"],[24,22,42,22],[24,25,42,25],[24,27,42,4],[25,0,43,4],[25,10,43,10,"substitutionOffsets"],[25,29,43,29],[25,32,43,32],[25,34,43,4],[27,0,45,4],[27,10,45,10,"remaining"],[27,19,45,19],[27,41,45,26,"args"],[27,45,45,19],[27,46,45,4],[29,0,47,4],[29,10,47,8],[29,17,47,15,"remaining"],[29,26,47,24],[29,27,47,25],[29,28,47,24],[29,29,47,8],[29,34,47,32],[29,42,47,4],[29,44,47,42],[30,0,48,6],[30,12,48,12,"formatString"],[30,24,48,24],[30,27,48,27,"String"],[30,33,48,33],[30,34,48,34,"remaining"],[30,43,48,43],[30,44,48,44,"shift"],[30,49,48,34],[30,51,48,33],[30,52,48,6],[31,0,49,6],[31,12,49,12,"formatStringParts"],[31,29,49,29],[31,32,49,32,"formatString"],[31,44,49,44],[31,45,49,45,"split"],[31,50,49,32],[31,51,49,51],[31,55,49,32],[31,56,49,6],[32,0,50,6],[32,12,50,12,"substitutionCount"],[32,29,50,29],[32,32,50,32,"formatStringParts"],[32,49,50,49],[32,50,50,50,"length"],[32,56,50,32],[32,59,50,59],[32,60,50,6],[33,0,51,6],[33,12,51,12,"substitutions"],[33,25,51,25],[33,28,51,28,"remaining"],[33,37,51,37],[33,38,51,38,"splice"],[33,44,51,28],[33,45,51,45],[33,46,51,28],[33,48,51,48,"substitutionCount"],[33,65,51,28],[33,66,51,6],[34,0,53,6],[34,12,53,10,"categoryString"],[34,26,53,24],[34,29,53,27],[34,31,53,6],[35,0,54,6],[35,12,54,10,"contentString"],[35,25,54,23],[35,28,54,26],[35,30,54,6],[36,0,56,6],[36,12,56,10,"substitutionIndex"],[36,29,56,27],[36,32,56,30],[36,33,56,6],[38,0,57,6],[38,61,57,37,"formatStringParts"],[38,78,57,6],[38,118,57,56],[39,0,57,56],[39,14,57,17,"formatStringPart"],[39,30,57,56],[40,0,58,8,"categoryString"],[40,10,58,8,"categoryString"],[40,24,58,22],[40,28,58,26,"formatStringPart"],[40,44,58,8],[41,0,59,8,"contentString"],[41,10,59,8,"contentString"],[41,23,59,21],[41,27,59,25,"formatStringPart"],[41,43,59,8],[43,0,61,8],[43,14,61,12,"substitutionIndex"],[43,31,61,29],[43,34,61,32,"substitutionCount"],[43,51,61,8],[43,53,61,51],[44,0,62,10],[44,16,62,14,"substitutionIndex"],[44,33,62,31],[44,36,62,34,"substitutions"],[44,49,62,47],[44,50,62,48,"length"],[44,56,62,10],[44,58,62,56],[45,0,63,12],[45,18,63,18,"substitution"],[45,30,63,30],[45,33,63,33,"stringifySafe"],[45,46,63,46],[45,47,64,14,"substitutions"],[45,60,64,27],[45,61,64,28,"substitutionIndex"],[45,78,64,27],[45,79,63,46],[45,80,63,12],[46,0,66,12,"substitutionOffsets"],[46,14,66,12,"substitutionOffsets"],[46,33,66,31],[46,34,66,32,"push"],[46,38,66,12],[46,39,66,37],[47,0,67,14,"length"],[47,16,67,14,"length"],[47,22,67,20],[47,24,67,22,"substitution"],[47,36,67,34],[47,37,67,35,"length"],[47,43,66,37],[48,0,68,14,"offset"],[48,16,68,14,"offset"],[48,22,68,20],[48,24,68,22,"contentString"],[48,37,68,35],[48,38,68,36,"length"],[49,0,66,37],[49,15,66,12],[50,0,71,12,"categoryString"],[50,14,71,12,"categoryString"],[50,28,71,26],[50,32,71,30,"SUBSTITUTION"],[50,44,71,12],[51,0,72,12,"contentString"],[51,14,72,12,"contentString"],[51,27,72,25],[51,31,72,29,"substitution"],[51,43,72,12],[52,0,73,11],[52,13,62,10],[52,19,73,17],[53,0,74,12,"substitutionOffsets"],[53,14,74,12,"substitutionOffsets"],[53,33,74,31],[53,34,74,32,"push"],[53,38,74,12],[53,39,74,37],[54,0,75,14,"length"],[54,16,75,14,"length"],[54,22,75,20],[54,24,75,22],[54,25,74,37],[55,0,76,14,"offset"],[55,16,76,14,"offset"],[55,22,76,20],[55,24,76,22,"contentString"],[55,37,76,35],[55,38,76,36,"length"],[56,0,74,37],[56,15,74,12],[57,0,79,12,"categoryString"],[57,14,79,12,"categoryString"],[57,28,79,26],[57,32,79,30],[57,36,79,12],[58,0,80,12,"contentString"],[58,14,80,12,"contentString"],[58,27,80,25],[58,31,80,29],[58,35,80,12],[59,0,81,11],[61,0,83,10,"substitutionIndex"],[61,12,83,10,"substitutionIndex"],[61,29,83,27],[62,0,84,9],[63,0,85,7],[65,0,87,6,"categoryParts"],[65,8,87,6,"categoryParts"],[65,21,87,19],[65,22,87,20,"push"],[65,26,87,6],[65,27,87,25,"categoryString"],[65,41,87,6],[66,0,88,6,"contentParts"],[66,8,88,6,"contentParts"],[66,20,88,18],[66,21,88,19,"push"],[66,25,88,6],[66,26,88,24,"contentString"],[66,39,88,6],[67,0,89,5],[69,0,91,4],[69,10,91,10,"remainingArgs"],[69,23,91,23],[69,26,91,26,"remaining"],[69,35,91,35],[69,36,91,36,"map"],[69,39,91,26],[69,40,91,40,"stringifySafe"],[69,53,91,26],[69,54,91,4],[70,0,92,4,"categoryParts"],[70,6,92,4,"categoryParts"],[70,19,92,17],[70,20,92,18,"push"],[70,24,92,4],[70,31,92,4,"categoryParts"],[70,44,92,17],[70,65,92,26,"remainingArgs"],[70,78,92,17],[70,80,92,4],[71,0,93,4,"contentParts"],[71,6,93,4,"contentParts"],[71,18,93,16],[71,19,93,17,"push"],[71,23,93,4],[71,30,93,4,"contentParts"],[71,42,93,16],[71,63,93,25,"remainingArgs"],[71,76,93,16],[71,78,93,4],[72,0,95,4],[72,13,95,11],[73,0,96,6,"category"],[73,8,96,6,"category"],[73,16,96,14],[73,18,96,16,"categoryParts"],[73,31,96,29],[73,32,96,30,"join"],[73,36,96,16],[73,37,96,35],[73,40,96,16],[73,41,95,11],[74,0,97,6,"message"],[74,8,97,6,"message"],[74,15,97,13],[74,17,97,15],[75,0,98,8,"content"],[75,10,98,8,"content"],[75,17,98,15],[75,19,98,17,"contentParts"],[75,31,98,29],[75,32,98,30,"join"],[75,36,98,17],[75,37,98,35],[75,40,98,17],[75,41,97,15],[76,0,99,8,"substitutions"],[76,10,99,8,"substitutions"],[76,23,99,21],[76,25,99,23,"substitutionOffsets"],[77,0,97,15],[78,0,95,11],[78,7,95,4],[79,0,102,3],[79,5,34,26],[80,0,104,2,"render"],[80,4,104,2,"render"],[80,10,34,26],[80,34,106,4,"substitutionStyle"],[80,51,34,26],[80,53,107,16],[81,0,107,16],[81,10,105,5,"content"],[81,17,107,16],[81,25,105,5,"content"],[81,32,107,16],[82,0,107,16],[82,10,105,14,"substitutions"],[82,23,107,16],[82,31,105,14,"substitutions"],[82,44,107,16],[83,0,108,4],[83,10,108,10,"elements"],[83,18,108,18],[83,21,108,21],[83,23,108,4],[84,0,110,4],[84,10,110,10,"lastOffset"],[84,20,110,20],[84,23,110,23,"substitutions"],[84,36,110,36],[84,37,110,37,"reduce"],[84,43,110,23],[84,44,111,6],[84,54,111,7,"prevOffset"],[84,64,111,6],[84,66,111,19,"substitution"],[84,78,111,6],[84,80,111,33,"index"],[84,85,111,6],[84,87,111,43],[85,0,112,8],[85,12,112,14,"key"],[85,15,112,17],[85,18,112,20,"String"],[85,24,112,26],[85,25,112,27,"index"],[85,30,112,26],[85,31,112,8],[87,0,114,8],[87,12,114,12,"substitution"],[87,24,114,24],[87,25,114,25,"offset"],[87,31,114,12],[87,34,114,34,"prevOffset"],[87,44,114,8],[87,46,114,46],[88,0,115,10],[88,14,115,16,"prevPart"],[88,22,115,24],[88,25,115,27,"content"],[88,32,115,34],[88,33,115,35,"substr"],[88,39,115,27],[88,40,116,12,"prevOffset"],[88,50,115,27],[88,52,117,12,"substitution"],[88,64,117,24],[88,65,117,25,"offset"],[88,71,117,12],[88,74,117,34,"prevOffset"],[88,84,115,27],[88,85,115,10],[89,0,119,10,"elements"],[89,10,119,10,"elements"],[89,18,119,18],[89,19,119,19,"push"],[89,23,119,10],[89,24,119,24],[89,44,119,25],[89,48,119,24],[90,0,119,30],[90,12,119,30],[90,15,119,33],[90,17,119,35,"key"],[91,0,119,24],[91,13,119,41,"prevPart"],[91,21,119,24],[91,22,119,10],[92,0,120,9],[94,0,122,8],[94,12,122,14,"substititionPart"],[94,28,122,30],[94,31,122,33,"content"],[94,38,122,40],[94,39,122,41,"substr"],[94,45,122,33],[94,46,123,10,"substitution"],[94,58,123,22],[94,59,123,23,"offset"],[94,65,122,33],[94,67,124,10,"substitution"],[94,79,124,22],[94,80,124,23,"length"],[94,86,122,33],[94,87,122,8],[95,0,126,8,"elements"],[95,8,126,8,"elements"],[95,16,126,16],[95,17,126,17,"push"],[95,21,126,8],[95,22,127,10],[95,42,127,11],[95,46,127,10],[96,0,127,16],[96,10,127,16],[96,13,127,19],[96,15,127,21,"key"],[96,18,127,24],[96,21,127,27],[96,25,127,10],[97,0,127,33],[97,10,127,33],[97,15,127,38],[97,17,127,40,"substitutionStyle"],[98,0,127,10],[98,11,128,13,"substititionPart"],[98,27,127,10],[98,28,126,8],[99,0,132,8],[99,15,132,15,"substitution"],[99,27,132,27],[99,28,132,28,"offset"],[99,34,132,15],[99,37,132,37,"substitution"],[99,49,132,49],[99,50,132,50,"length"],[99,56,132,8],[100,0,133,7],[100,7,110,23],[100,9,134,6],[100,10,110,23],[100,11,110,4],[102,0,137,4],[102,10,137,8,"lastOffset"],[102,20,137,18],[102,23,137,21,"content"],[102,30,137,28],[102,31,137,29,"length"],[102,37,137,4],[102,39,137,37],[103,0,138,6],[103,12,138,12,"lastPart"],[103,20,138,20],[103,23,138,23,"content"],[103,30,138,30],[103,31,138,31,"substr"],[103,37,138,23],[103,38,138,38,"lastOffset"],[103,48,138,23],[103,49,138,6],[104,0,139,6,"elements"],[104,8,139,6,"elements"],[104,16,139,14],[104,17,139,15,"push"],[104,21,139,6],[104,22,139,20],[104,42,139,21],[104,46,139,20],[105,0,139,26],[105,10,139,26],[105,13,139,29],[105,15,139,30],[106,0,139,20],[106,11,139,36,"lastPart"],[106,19,139,20],[106,20,139,6],[107,0,140,5],[109,0,142,4],[109,13,142,11,"elements"],[109,21,142,4],[110,0,143,3],[111,0,34,26],[111,3,34,0],[112,0,146,0,"module"],[112,2,146,0,"module"],[112,8,146,6],[112,9,146,7,"exports"],[112,16,146,0],[112,19,146,17,"YellowBoxCategory"],[112,36,146,0]],"functionMap":{"names":["<global>","parse","render","substitutions.reduce$argument_0"],"mappings":"AAA;ECkC;GDmE;EEE;MCO;ODsB;GFU"}},"type":"js/module"}]}