{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../core/AnimatedBlock","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function(g,r,i,a,m,e,d){var t=r(d[0]);Object.defineProperty(e,\"__esModule\",{value:!0}),e.createAnimatedOperator=function(t){return function(){for(var n=arguments.length,u=new Array(n),o=0;o<n;o++)u[o]=arguments[o];return new q(t,u.map(h.adapt))}};var n=t(r(d[1])),u=t(r(d[2])),o=t(r(d[3])),f=t(r(d[4])),c=t(r(d[5])),l=t(r(d[6])),s=r(d[7]),p=t(r(d[8])),h=r(d[9]);function v(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function y(t){return function(n){return n.reduce(function(n,u){return t((0,s.val)(n),(0,s.val)(u))})}}function _(t,n){return function(u){return u.reduce(function(n,u){return t((0,s.val)(n),(0,s.val)(u))},n)}}function M(t){return function(n){return t((0,s.val)(n[0]),(0,s.val)(n[1]))}}function b(t){return function(n){return t((0,s.val)(n[0]))}}var R={add:y(function(t,n){return t+n}),sub:y(function(t,n){return t-n}),multiply:y(function(t,n){return t*n}),divide:y(function(t,n){return t/n}),pow:y(function(t,n){return Math.pow(t,n)}),modulo:y(function(t,n){return(t%n+n)%n}),sqrt:b(function(t){return Math.sqrt(t)}),log:b(function(t){return Math.log(t)}),sin:b(function(t){return Math.sin(t)}),cos:b(function(t){return Math.cos(t)}),tan:b(function(t){return Math.tan(t)}),acos:b(function(t){return Math.acos(t)}),asin:b(function(t){return Math.asin(t)}),atan:b(function(t){return Math.atan(t)}),exp:b(function(t){return Math.exp(t)}),round:b(function(t){return Math.round(t)}),and:_(function(t,n){return t&&n},!0),or:_(function(t,n){return t||n},!1),not:b(function(t){return!t}),defined:b(function(t){return null!==t&&void 0!==t&&!isNaN(t)}),lessThan:M(function(t,n){return t<n}),eq:M(function(t,n){return t==n}),greaterThan:M(function(t,n){return t>n}),lessOrEq:M(function(t,n){return t<=n}),greaterOrEq:M(function(t,n){return t>=n}),neq:M(function(t,n){return t!=n})},q=(function(t){(0,o.default)(_,t);var s,h,y=(s=_,h=v(),function(){var t,n=(0,c.default)(s);if(h){var u=(0,c.default)(this).constructor;t=Reflect.construct(n,arguments,u)}else t=n.apply(this,arguments);return(0,f.default)(this,t)});function _(t,u){var o;return(0,n.default)(this,_),(0,p.default)('string'==typeof t,\"Reanimated: Animated.operator node first argument should be of type String, but got: \"+t),(0,p.default)(u.every(function(t){return t instanceof l.default||'string'==typeof t||'number'==typeof t}),\"Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got \"+u),(o=y.call(this,{type:'op',op:t,input:u},u))._op=t,o._input=u,o}return(0,u.default)(_,[{key:\"toString\",value:function(){return\"AnimatedOperator, id: \"+this.__nodeID}},{key:\"__onEvaluate\",value:function(){return this._operation||(this._operation=R[this._op],(0,p.default)(this._operation,\"Illegal operator '%s'\",this._op)),this._operation(this._input)}}]),_})(l.default)});","lineCount":1,"map":[[1,116,99,7],[1,125,99,39,"name"],[1,128,100,2],[1,135,100,9],[1,146,100,9],[1,150,100,9],[1,154,100,9,"_len"],[1,156,100,9,"arguments"],[1,166,100,9,"length"],[1,173,100,13,"args"],[1,175,100,9],[1,179,100,9,"Array"],[1,185,100,9,"_len"],[1,188,100,9,"_key"],[1,190,100,9],[1,192,100,9,"_key"],[1,194,100,9,"_len"],[1,196,100,9,"_key"],[1,200,100,13,"args"],[1,202,100,9,"_key"],[1,205,100,9,"arguments"],[1,215,100,9,"_key"],[1,218,100,9],[1,225,100,22],[1,229,100,26,"AnimatedOperator"],[1,231,100,43,"name"],[1,233,100,49,"args"],[1,235,100,54,"map"],[1,239,100,58,"adapt"],[1,241,100,58,"adapt"],[1,320,1,0,"_AnimatedNode2"],[1,322,1,0,"_interopRequireDefault"],[1,324,1,0,"r"],[1,326,1,0,"d"],[1,328,1,0],[1,333,2,0,"_val"],[1,335,2,0,"r"],[1,337,2,0,"d"],[1,339,2,0],[1,343,4,0,"_invariant"],[1,345,4,0,"_interopRequireDefault"],[1,347,4,0,"r"],[1,349,4,0,"d"],[1,351,4,0],[1,356,5,0,"_AnimatedBlock"],[1,358,5,0,"r"],[1,360,5,0,"d"],[1,362,5,0],[1,614,7,0],[1,623,7,9,"reduce"],[1,625,7,16,"fn"],[1,628,8,2],[1,635,8,9],[1,644,8,9,"input"],[1,647,8,14],[1,654,8,18,"input"],[1,656,8,24,"reduce"],[1,663,8,31],[1,672,8,32,"a"],[1,674,8,35,"b"],[1,677,8,31],[1,684,8,41,"fn"],[1,687,8,44],[1,689,8,44,"_val"],[1,691,8,44,"val"],[1,696,8,48,"a"],[1,700,8,52],[1,702,8,52,"_val"],[1,704,8,52,"val"],[1,709,8,56,"b"],[1,716,11,0],[1,725,11,9,"reduceFrom"],[1,727,11,20,"fn"],[1,729,11,24,"initialValue"],[1,732,12,2],[1,739,12,9],[1,748,12,9,"input"],[1,751,12,14],[1,758,12,18,"input"],[1,760,12,24,"reduce"],[1,767,12,31],[1,776,12,32,"a"],[1,778,12,35,"b"],[1,781,12,31],[1,788,12,41,"fn"],[1,791,12,44],[1,793,12,44,"_val"],[1,795,12,44,"val"],[1,800,12,48,"a"],[1,804,12,52],[1,806,12,52,"_val"],[1,808,12,52,"val"],[1,813,12,56,"b"],[1,818,12,61,"initialValue"],[1,822,15,0],[1,831,15,9,"infix"],[1,833,15,15,"fn"],[1,836,16,2],[1,843,16,9],[1,852,16,9,"input"],[1,855,16,14],[1,862,16,18,"fn"],[1,865,16,21],[1,867,16,21,"_val"],[1,869,16,21,"val"],[1,874,16,25,"input"],[1,876,16,31],[1,881,16,36],[1,883,16,36,"_val"],[1,885,16,36,"val"],[1,890,16,40,"input"],[1,892,16,46],[1,898,19,0],[1,907,19,9,"single"],[1,909,19,16,"fn"],[1,912,20,2],[1,919,20,9],[1,928,20,9,"input"],[1,931,20,14],[1,938,20,18,"fn"],[1,941,20,21],[1,943,20,21,"_val"],[1,945,20,21,"val"],[1,950,20,25,"input"],[1,952,20,31],[1,958,23,0],[1,962,23,6,"OPERATIONS"],[1,965,25,2,"add"],[1,969,25,7,"reduce"],[1,971,25,14],[1,980,25,15,"a"],[1,982,25,18,"b"],[1,985,25,14],[1,992,25,24,"a"],[1,994,25,28,"b"],[1,998,26,2,"sub"],[1,1002,26,7,"reduce"],[1,1004,26,14],[1,1013,26,15,"a"],[1,1015,26,18,"b"],[1,1018,26,14],[1,1025,26,24,"a"],[1,1027,26,28,"b"],[1,1031,27,2,"multiply"],[1,1040,27,12,"reduce"],[1,1042,27,19],[1,1051,27,20,"a"],[1,1053,27,23,"b"],[1,1056,27,19],[1,1063,27,29,"a"],[1,1065,27,33,"b"],[1,1069,28,2,"divide"],[1,1076,28,10,"reduce"],[1,1078,28,17],[1,1087,28,18,"a"],[1,1089,28,21,"b"],[1,1092,28,17],[1,1099,28,27,"a"],[1,1101,28,31,"b"],[1,1105,29,2,"pow"],[1,1109,29,7,"reduce"],[1,1111,29,14],[1,1120,29,15,"a"],[1,1122,29,18,"b"],[1,1125,29,14],[1,1132,29,24,"Math"],[1,1137,29,29,"pow"],[1,1141,29,33,"a"],[1,1143,29,36,"b"],[1,1148,30,2,"modulo"],[1,1155,30,10,"reduce"],[1,1157,30,17],[1,1166,30,18,"a"],[1,1168,30,21,"b"],[1,1171,30,17],[1,1178,30,29,"a"],[1,1180,30,33,"b"],[1,1182,30,38,"b"],[1,1185,30,43,"b"],[1,1189,31,2,"sqrt"],[1,1194,31,8,"single"],[1,1196,31,15],[1,1205,31,15,"a"],[1,1208,31,16],[1,1215,31,20,"Math"],[1,1220,31,25,"sqrt"],[1,1225,31,30,"a"],[1,1230,32,2,"log"],[1,1234,32,7,"single"],[1,1236,32,14],[1,1245,32,14,"a"],[1,1248,32,15],[1,1255,32,19,"Math"],[1,1260,32,24,"log"],[1,1264,32,28,"a"],[1,1269,33,2,"sin"],[1,1273,33,7,"single"],[1,1275,33,14],[1,1284,33,14,"a"],[1,1287,33,15],[1,1294,33,19,"Math"],[1,1299,33,24,"sin"],[1,1303,33,28,"a"],[1,1308,34,2,"cos"],[1,1312,34,7,"single"],[1,1314,34,14],[1,1323,34,14,"a"],[1,1326,34,15],[1,1333,34,19,"Math"],[1,1338,34,24,"cos"],[1,1342,34,28,"a"],[1,1347,35,2,"tan"],[1,1351,35,7,"single"],[1,1353,35,14],[1,1362,35,14,"a"],[1,1365,35,15],[1,1372,35,19,"Math"],[1,1377,35,24,"tan"],[1,1381,35,28,"a"],[1,1386,36,2,"acos"],[1,1391,36,8,"single"],[1,1393,36,15],[1,1402,36,15,"a"],[1,1405,36,16],[1,1412,36,20,"Math"],[1,1417,36,25,"acos"],[1,1422,36,30,"a"],[1,1427,37,2,"asin"],[1,1432,37,8,"single"],[1,1434,37,15],[1,1443,37,15,"a"],[1,1446,37,16],[1,1453,37,20,"Math"],[1,1458,37,25,"asin"],[1,1463,37,30,"a"],[1,1468,38,2,"atan"],[1,1473,38,8,"single"],[1,1475,38,15],[1,1484,38,15,"a"],[1,1487,38,16],[1,1494,38,20,"Math"],[1,1499,38,25,"atan"],[1,1504,38,30,"a"],[1,1509,39,2,"exp"],[1,1513,39,7,"single"],[1,1515,39,14],[1,1524,39,14,"a"],[1,1527,39,15],[1,1534,39,19,"Math"],[1,1539,39,24,"exp"],[1,1543,39,28,"a"],[1,1548,40,2,"round"],[1,1554,40,9,"single"],[1,1556,40,16],[1,1565,40,16,"a"],[1,1568,40,17],[1,1575,40,21,"Math"],[1,1580,40,26,"round"],[1,1586,40,32,"a"],[1,1591,43,2,"and"],[1,1595,43,7,"reduceFrom"],[1,1597,43,18],[1,1606,43,19,"a"],[1,1608,43,22,"b"],[1,1611,43,18],[1,1618,43,28,"a"],[1,1621,43,33,"b"],[1,1625,43,36],[1,1628,44,2,"or"],[1,1631,44,6,"reduceFrom"],[1,1633,44,17],[1,1642,44,18,"a"],[1,1644,44,21,"b"],[1,1647,44,17],[1,1654,44,27,"a"],[1,1657,44,32,"b"],[1,1661,44,35],[1,1664,45,2,"not"],[1,1668,45,7,"single"],[1,1670,45,14],[1,1679,45,14,"a"],[1,1682,45,15],[1,1689,45,20,"a"],[1,1693,46,2,"defined"],[1,1701,46,11,"single"],[1,1703,46,18],[1,1712,46,18,"a"],[1,1715,46,19],[1,1722,46,29],[1,1729,46,23,"a"],[1,1737,46,43,"undefined"],[1,1741,46,37,"a"],[1,1745,46,57,"isNaN"],[1,1751,46,63,"a"],[1,1756,49,2,"lessThan"],[1,1765,49,12,"infix"],[1,1767,49,18],[1,1776,49,19,"a"],[1,1778,49,22,"b"],[1,1781,49,18],[1,1788,49,28,"a"],[1,1790,49,32,"b"],[1,1794,51,2,"eq"],[1,1797,51,6,"infix"],[1,1799,51,12],[1,1808,51,13,"a"],[1,1810,51,16,"b"],[1,1813,51,12],[1,1820,51,22,"a"],[1,1823,51,27,"b"],[1,1827,52,2,"greaterThan"],[1,1839,52,15,"infix"],[1,1841,52,21],[1,1850,52,22,"a"],[1,1852,52,25,"b"],[1,1855,52,21],[1,1862,52,31,"a"],[1,1864,52,35,"b"],[1,1868,53,2,"lessOrEq"],[1,1877,53,12,"infix"],[1,1879,53,18],[1,1888,53,19,"a"],[1,1890,53,22,"b"],[1,1893,53,18],[1,1900,53,28,"a"],[1,1903,53,33,"b"],[1,1907,54,2,"greaterOrEq"],[1,1919,54,15,"infix"],[1,1921,54,21],[1,1930,54,22,"a"],[1,1932,54,25,"b"],[1,1935,54,21],[1,1942,54,31,"a"],[1,1945,54,36,"b"],[1,1949,56,2,"neq"],[1,1953,56,7,"infix"],[1,1955,56,13],[1,1964,56,14,"a"],[1,1966,56,17,"b"],[1,1969,56,13],[1,1976,56,23,"a"],[1,1979,56,28,"b"],[1,1984,59,6,"AnimatedOperator"],[1,2215,64,2],[1,2224,64,2,"AnimatedOperator"],[1,2226,64,14,"operator"],[1,2228,64,24,"input"],[1,2231,64,31],[1,2235,64,31,"_this"],[1,2237,64,31],[1,2244,64,31],[1,2246,64,31,"_classCallCheck2"],[1,2248,64,31,"default"],[1,2257,64,31,"this"],[1,2262,64,31,"AnimatedOperator"],[1,2266,65,4],[1,2268,65,4,"_invariant"],[1,2270,65,4,"default"],[1,2279,66,26],[1,2296,66,13,"operator"],[1,2298,65,4],[1,2386,67,94,"operator"],[1,2390,69,4],[1,2392,69,4,"_invariant"],[1,2394,69,4,"default"],[1,2403,70,6,"input"],[1,2405,70,12,"every"],[1,2411,71,8],[1,2420,71,8,"el"],[1,2423,71,10],[1,2430,72,10,"el"],[1,2443,72,24,"AnimatedNode"],[1,2445,72,24,"AnimatedNode"],[1,2454,73,24],[1,2471,73,17,"el"],[1,2474,74,24],[1,2491,74,17,"el"],[1,2495,69,4],[1,2618,76,129,"input"],[1,2622,78,4,"_this"],[1,2624,78,4,"_super"],[1,2626,78,4,"call"],[1,2631,78,4,"this"],[1,2637,79,8,"type"],[1,2642,79,14],[1,2647,79,20,"op"],[1,2650,79,24,"operator"],[1,2652,79,34,"input"],[1,2658,79,34,"input"],[1,2661,80,6,"input"],[1,2665,82,9,"_op"],[1,2669,82,15,"operator"],[1,2671,83,4,"_this"],[1,2673,83,9,"_input"],[1,2680,83,18,"input"],[1,2682,64,31,"_this"],[1,2740,87,4],[1,2746,87,4],[1,2771,87,36,"this"],[1,2776,87,41,"__nodeID"],[1,2824,95,4],[1,2831,91,9,"this"],[1,2836,91,14,"_operation"],[1,2849,92,6,"this"],[1,2854,92,11,"_operation"],[1,2865,92,24,"OPERATIONS"],[1,2867,92,35,"this"],[1,2872,92,40,"_op"],[1,2878,93,6],[1,2880,93,6,"_invariant"],[1,2882,93,6,"default"],[1,2891,93,16,"this"],[1,2896,93,21,"_operation"],[1,2907,93,6],[1,2931,93,58,"this"],[1,2936,93,63,"_op"],[1,2942,95,11,"this"],[1,2947,95,16,"_operation"],[1,2958,95,27,"this"],[1,2963,95,32,"_input"],[1,2979,59,31,"AnimatedNode"],[1,2981,59,31,"AnimatedNode"]],"functionMap":{"names":["<global>","reduce","<anonymous>","input.reduce$argument_0","reduceFrom","infix","single","reduce$argument_0","single$argument_0","reduceFrom$argument_0","infix$argument_0","AnimatedOperator","constructor","input.every$argument_0","toString","__onEvaluate","createAnimatedOperator"],"mappings":"AAA;ACM;SCC,sBC,4BD,CD;CDC;AIE;SFC,sBC,4BD,eE;CJC;AKE;SHC,yCG;CLC;AME;SJC,0BI;CNC;cOI,eP;cOC,eP;mBOC,eP;iBOC,eP;cOC,wBP;iBOC,2BP;eQC,iBR;cQC,gBR;cQC,gBR;cQC,gBR;cQC,gBR;eQC,iBR;eQC,iBR;eQC,iBR;cQC,gBR;gBQC,kBR;kBSG,gBT;iBSC,gBT;cQC,OR;kBQC,+CR;kBUG,eV;YUE,gBV;qBUC,eV;kBUC,gBV;qBUC,gBV;aUE,gBV;AWG;ECK;QCO;gCDG;GDU;EGE;GHE;EIE;GJM;CXC;OgBE;SdC,wDc;ChBC"}},"type":"js/module"}]}