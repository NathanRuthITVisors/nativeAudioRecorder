{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./GestureHandler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"invariant\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _GestureHandler = _$$_REQUIRE(_dependencyMap[11], \"./GestureHandler\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    var _super = _createSuper(DrawerLayout);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _super.call(this, _props, context);\n      _this._accessibilityIsModalView = _react.default.createRef();\n      _this._pointerEventsView = _react.default.createRef();\n      _this._panGestureHandler = _react.default.createRef();\n      _this._drawerShown = false;\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _GestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this._drawerShown && nativeEvent.oldState === _GestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this._drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this._animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this._updateShowing = function (showing) {\n        _this._drawerShown = showing;\n        _this._accessibilityIsModalView.current && _this._accessibilityIsModalView.current.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this._pointerEventsView.current && _this._pointerEventsView.current.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n            drawerPosition = _this$props2.drawerPosition,\n            minSwipeDistance = _this$props2.minSwipeDistance,\n            edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        _this._panGestureHandler.current && _this._panGestureHandler.current.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n\n      _this._animateDrawer = function (fromValue, toValue, velocity) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n\n          if (_this.props.useNativeAnimations) {\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this._updateShowing(willShow);\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref4) {\n          var finished = _ref4.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_GestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this._drawerShown ? 'auto' : 'none',\n          ref: _this._pointerEventsView,\n          style: [styles.overlay, dynamicOverlayStyles]\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var _this$props3 = _this.props,\n            drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n            drawerWidth = _this$props3.drawerWidth,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            drawerContainerStyle = _this$props3.drawerContainerStyle,\n            contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          importantForAccessibility: _this._drawerShown ? 'no-hide-descendants' : 'yes'\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          ref: _this._accessibilityIsModalView,\n          accessibilityViewIsModal: _this._drawerShown,\n          style: [styles.drawerContainer, drawerStyles, drawerContainerStyle]\n        }, _react.default.createElement(_reactNative.View, {\n          style: dynamicDrawerStyles\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      _this._setPanGestureRef = function (ref) {\n        _this._panGestureHandler.current = ref;\n        _this.props.onGestureRef && _this.props.onGestureRef(ref);\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"UNSAFE_componentWillUpdate\",\n      value: function UNSAFE_componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n            drawerPosition = _this$props4.drawerPosition,\n            drawerLockMode = _this$props4.drawerLockMode,\n            edgeWidth = _this$props4.edgeWidth,\n            minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        };\n        return _react.default.createElement(_GestureHandler.PanGestureHandler, {\n          ref: this._setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this._onGestureEvent,\n          onHandlerStateChange: this._openingHandlerStateChange,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open'\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component);\n\n  exports.default = DrawerLayout;\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked'\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      zIndex: 1002\n    }),\n    containerOnBack: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: _objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), {}, {\n      zIndex: 1000\n    })\n  });\n});","lineCount":452,"map":[[23,0,11,0],[25,0,12,0],[27,0,13,0],[29,0,22,0],[39,0,24,0],[39,6,24,6,"DRAG_TOSS"],[39,15,24,15],[39,18,24,18],[39,22,24,0],[40,0,26,0],[40,6,26,6,"IDLE"],[40,10,26,10],[40,13,26,13],[40,19,26,0],[41,0,27,0],[41,6,27,6,"DRAGGING"],[41,14,27,14],[41,17,27,17],[41,27,27,0],[42,0,28,0],[42,6,28,6,"SETTLING"],[42,14,28,14],[42,17,28,17],[42,27,28,0],[44,6,73,21,"DrawerLayout"],[44,18],[49,0,96,2],[49,26,96,14,"props"],[49,32,96,2],[49,34,96,31,"context"],[49,41,96,2],[49,43,96,45],[50,0,96,45],[52,0,96,45],[53,0,97,4],[53,32,97,10,"props"],[53,38,97,4],[53,40,97,17,"context"],[53,47,97,4],[54,0,96,45],[54,12,91,2,"_accessibilityIsModalView"],[54,37,96,45],[54,40,91,30,"React"],[54,55,91,36,"createRef"],[54,64,91,30],[54,66,96,45],[55,0,96,45],[55,12,92,2,"_pointerEventsView"],[55,30,96,45],[55,33,92,23,"React"],[55,48,92,29,"createRef"],[55,57,92,23],[55,59,96,45],[56,0,96,45],[56,12,93,2,"_panGestureHandler"],[56,30,96,45],[56,33,93,23,"React"],[56,48,93,29,"createRef"],[56,57,93,23],[56,59,96,45],[57,0,96,45],[57,12,94,2,"_drawerShown"],[57,24,96,45],[57,27,94,17],[57,32,96,45],[59,0,96,45],[59,12,124,2,"_updateAnimatedEvent"],[59,32,96,45],[59,35,124,25],[59,45,124,26,"props"],[59,50,124,25],[59,52,124,43,"state"],[59,57,124,25],[59,59,124,64],[60,0,124,64],[60,12,126,12,"drawerPosition"],[60,26,124,64],[60,29,126,56,"props"],[60,34,124,64],[60,35,126,12,"drawerPosition"],[60,49,124,64],[61,0,124,64],[61,12,126,28,"drawerWidth"],[61,23,124,64],[61,26,126,56,"props"],[61,31,124,64],[61,32,126,28,"drawerWidth"],[61,43,124,64],[62,0,124,64],[62,12,126,41,"drawerType"],[62,22,124,64],[62,25,126,56,"props"],[62,30,124,64],[62,31,126,41,"drawerType"],[62,41,124,64],[63,0,124,64],[63,12,128,13,"dragXValue"],[63,22,124,64],[63,25,132,8,"state"],[63,30,124,64],[63,31,128,6,"dragX"],[63,36,124,64],[64,0,124,64],[64,12,129,14,"touchXValue"],[64,23,124,64],[64,26,132,8,"state"],[64,31,124,64],[64,32,129,6,"touchX"],[64,38,124,64],[65,0,124,64],[65,12,130,6,"drawerTranslation"],[65,29,124,64],[65,32,132,8,"state"],[65,37,124,64],[65,38,130,6,"drawerTranslation"],[65,55,124,64],[66,0,124,64],[66,12,131,6,"containerWidth"],[66,26,124,64],[66,29,132,8,"state"],[66,34,124,64],[66,35,131,6,"containerWidth"],[66,49,124,64],[67,0,134,4],[67,12,134,8,"dragX"],[67,17,134,13],[67,20,134,16,"dragXValue"],[67,30,134,4],[68,0,135,4],[68,12,135,8,"touchX"],[68,18,135,14],[68,21,135,17,"touchXValue"],[68,32,135,4],[70,0,137,4],[70,12,137,8,"drawerPosition"],[70,26,137,22],[70,31,137,27],[70,37,137,4],[70,39,137,35],[71,0,145,6,"dragX"],[71,10,145,6,"dragX"],[71,15,145,11],[71,18,145,14,"Animated"],[71,40,145,23,"multiply"],[71,48,145,14],[71,49,145,32],[71,53,145,36,"Animated"],[71,75,145,45,"Value"],[71,80,145,32],[71,81,145,51],[71,82,145,52],[71,83,145,32],[71,84,145,14],[71,86,145,56,"dragXValue"],[71,96,145,14],[71,97,145,6],[72,0,146,6,"touchX"],[72,10,146,6,"touchX"],[72,16,146,12],[72,19,146,15,"Animated"],[72,41,146,24,"add"],[72,44,146,15],[72,45,147,8],[72,49,147,12,"Animated"],[72,71,147,21,"Value"],[72,76,147,8],[72,77,147,27,"containerWidth"],[72,91,147,8],[72,92,146,15],[72,94,148,8,"Animated"],[72,116,148,17,"multiply"],[72,124,148,8],[72,125,148,26],[72,129,148,30,"Animated"],[72,151,148,39,"Value"],[72,156,148,26],[72,157,148,45],[72,158,148,46],[72,159,148,26],[72,160,148,8],[72,162,148,50,"touchXValue"],[72,173,148,8],[72,174,146,15],[72,175,146,6],[73,0,150,6,"touchXValue"],[73,10,150,6,"touchXValue"],[73,21,150,17],[73,22,150,18,"setValue"],[73,30,150,6],[73,31,150,27,"containerWidth"],[73,45,150,6],[74,0,151,5],[74,9,137,4],[74,15,151,11],[75,0,152,6,"touchXValue"],[75,10,152,6,"touchXValue"],[75,21,152,17],[75,22,152,18,"setValue"],[75,30,152,6],[75,31,152,27],[75,32,152,6],[76,0,153,5],[78,0,179,4],[78,12,179,8,"translationX"],[78,24,179,20],[78,27,179,23,"dragX"],[78,32,179,4],[80,0,180,4],[80,12,180,8,"drawerType"],[80,22,180,18],[80,27,180,23],[80,34,180,4],[80,36,180,32],[81,0,181,6],[81,14,181,12,"startPositionX"],[81,28,181,26],[81,31,181,29,"Animated"],[81,53,181,38,"add"],[81,56,181,29],[81,57,182,8,"touchX"],[81,63,181,29],[81,65,183,8,"Animated"],[81,87,183,17,"multiply"],[81,95,183,8],[81,96,183,26],[81,100,183,30,"Animated"],[81,122,183,39,"Value"],[81,127,183,26],[81,128,183,45],[81,129,183,46],[81,130,183,26],[81,131,183,8],[81,133,183,50,"dragX"],[81,138,183,8],[81,139,181,29],[81,140,181,6],[83,0,186,6],[83,14,186,12,"dragOffsetFromOnStartPosition"],[83,43,186,41],[83,46,186,44,"startPositionX"],[83,60,186,58],[83,61,186,59,"interpolate"],[83,72,186,44],[83,73,186,71],[84,0,187,8,"inputRange"],[84,12,187,8,"inputRange"],[84,22,187,18],[84,24,187,20],[84,25,187,21,"drawerWidth"],[84,36,187,32],[84,39,187,35],[84,40,187,20],[84,42,187,38,"drawerWidth"],[84,53,187,20],[84,55,187,51,"drawerWidth"],[84,66,187,62],[84,69,187,65],[84,70,187,20],[84,71,186,71],[85,0,188,8,"outputRange"],[85,12,188,8,"outputRange"],[85,23,188,19],[85,25,188,21],[85,26,188,22],[85,27,188,21],[85,29,188,25],[85,30,188,21],[85,32,188,28],[85,33,188,21],[86,0,186,71],[86,11,186,44],[86,12,186,6],[87,0,190,6,"translationX"],[87,10,190,6,"translationX"],[87,22,190,18],[87,25,190,21,"Animated"],[87,47,190,30,"add"],[87,50,190,21],[87,51,190,34,"dragX"],[87,56,190,21],[87,58,190,41,"dragOffsetFromOnStartPosition"],[87,87,190,21],[87,88,190,6],[88,0,191,5],[90,0,193,4],[90,14,193,9,"_openValue"],[90,24,193,4],[90,27,193,22,"Animated"],[90,49,193,31,"add"],[90,52,193,22],[90,53,193,35,"translationX"],[90,65,193,22],[90,67,193,49,"drawerTranslation"],[90,84,193,22],[90,86,193,68,"interpolate"],[90,97,193,22],[90,98,194,6],[91,0,195,8,"inputRange"],[91,10,195,8,"inputRange"],[91,20,195,18],[91,22,195,20],[91,23,195,21],[91,24,195,20],[91,26,195,24,"drawerWidth"],[91,37,195,20],[91,38,194,6],[92,0,196,8,"outputRange"],[92,10,196,8,"outputRange"],[92,21,196,19],[92,23,196,21],[92,24,196,22],[92,25,196,21],[92,27,196,25],[92,28,196,21],[92,29,194,6],[93,0,197,8,"extrapolate"],[93,10,197,8,"extrapolate"],[93,21,197,19],[93,23,197,21],[94,0,194,6],[94,9,193,22],[94,10,193,4],[95,0,201,4],[95,14,201,9,"_onGestureEvent"],[95,29,201,4],[95,32,201,27,"Animated"],[95,54,201,36,"event"],[95,59,201,27],[95,60,202,6],[95,61,202,7],[96,0,202,9,"nativeEvent"],[96,10,202,9,"nativeEvent"],[96,21,202,20],[96,23,202,22],[97,0,202,24,"translationX"],[97,12,202,24,"translationX"],[97,24,202,36],[97,26,202,38,"dragXValue"],[97,36,202,22],[98,0,202,50,"x"],[98,12,202,50,"x"],[98,13,202,51],[98,15,202,53,"touchXValue"],[99,0,202,22],[100,0,202,7],[100,9,202,6],[100,10,201,27],[100,12,203,6],[101,0,203,8,"useNativeDriver"],[101,10,203,8,"useNativeDriver"],[101,25,203,23],[101,27,203,25,"props"],[101,32,203,30],[101,33,203,31,"useNativeAnimations"],[102,0,203,6],[102,9,201,27],[102,10,201,4],[103,0,205,3],[103,7,96,45],[105,0,96,45],[105,12,207,2,"_handleContainerLayout"],[105,34,96,45],[105,37,207,27],[105,53,207,48],[106,0,207,48],[106,12,207,30,"nativeEvent"],[106,23,207,48],[106,31,207,30,"nativeEvent"],[106,42,207,48],[108,0,208,4],[108,14,208,9,"setState"],[108,22,208,4],[108,23,208,18],[109,0,208,20,"containerWidth"],[109,10,208,20,"containerWidth"],[109,24,208,34],[109,26,208,36,"nativeEvent"],[109,37,208,47],[109,38,208,48,"layout"],[109,44,208,36],[109,45,208,55,"width"],[110,0,208,18],[110,9,208,4],[111,0,209,3],[111,7,96,45],[113,0,96,45],[113,12,211,2,"_emitStateChanged"],[113,29,96,45],[113,32,211,22],[113,42,211,23,"newState"],[113,50,211,22],[113,52,211,41,"drawerWillShow"],[113,66,211,22],[113,68,211,69],[114,0,212,4],[114,14,212,9,"props"],[114,19,212,4],[114,20,212,15,"onDrawerStateChanged"],[114,40,212,4],[114,44,213,6],[114,50,213,11,"props"],[114,55,213,6],[114,56,213,17,"onDrawerStateChanged"],[114,76,213,6],[114,77,213,38,"newState"],[114,85,213,6],[114,87,213,48,"drawerWillShow"],[114,101,213,6],[114,102,212,4],[115,0,214,3],[115,7,96,45],[117,0,96,45],[117,12,216,2,"_openingHandlerStateChange"],[117,38,96,45],[117,41,216,31],[117,58,216,52],[118,0,216,52],[118,12,216,34,"nativeEvent"],[118,23,216,52],[118,32,216,34,"nativeEvent"],[118,43,216,52],[120,0,217,4],[120,12,217,8,"nativeEvent"],[120,23,217,19],[120,24,217,20,"oldState"],[120,32,217,8],[120,37,217,33,"State"],[120,59,217,39,"ACTIVE"],[120,65,217,4],[120,67,217,47],[121,0,218,6],[121,16,218,11,"_handleRelease"],[121,30,218,6],[121,31,218,26,"nativeEvent"],[121,42,218,6],[122,0,219,5],[122,9,217,4],[122,15,219,11],[122,19,219,15,"nativeEvent"],[122,30,219,26],[122,31,219,27,"state"],[122,36,219,15],[122,41,219,37,"State"],[122,63,219,43,"ACTIVE"],[122,69,219,11],[122,71,219,51],[123,0,220,6],[123,16,220,11,"_emitStateChanged"],[123,33,220,6],[123,34,220,29,"DRAGGING"],[123,42,220,6],[123,44,220,39],[123,49,220,6],[125,0,221,6],[125,14,221,10],[125,20,221,15,"props"],[125,25,221,10],[125,26,221,21,"keyboardDismissMode"],[125,45,221,10],[125,50,221,45],[125,59,221,6],[125,61,221,56],[126,0,222,8,"Keyboard"],[126,34,222,17,"dismiss"],[126,41,222,8],[127,0,223,7],[129,0,224,6],[129,14,224,10],[129,20,224,15,"props"],[129,25,224,10],[129,26,224,21,"hideStatusBar"],[129,39,224,6],[129,41,224,36],[130,0,225,8,"StatusBar"],[130,35,225,18,"setHidden"],[130,44,225,8],[130,45,225,28],[130,49,225,8],[130,51,225,34],[130,57,225,39,"props"],[130,62,225,34],[130,63,225,45,"statusBarAnimation"],[130,81,225,34],[130,85,225,67],[130,92,225,8],[131,0,226,7],[132,0,227,5],[133,0,228,3],[133,7,96,45],[135,0,96,45],[135,12,230,2,"_onTapHandlerStateChange"],[135,36,96,45],[135,39,230,29],[135,56,230,50],[136,0,230,50],[136,12,230,32,"nativeEvent"],[136,23,230,50],[136,32,230,32,"nativeEvent"],[136,43,230,50],[138,0,231,4],[138,12,232,6],[138,18,232,11,"_drawerShown"],[138,30,232,6],[138,34,233,6,"nativeEvent"],[138,45,233,17],[138,46,233,18,"oldState"],[138,54,233,6],[138,59,233,31,"State"],[138,81,233,37,"ACTIVE"],[138,87,232,6],[138,91,234,6],[138,97,234,11,"props"],[138,102,234,6],[138,103,234,17,"drawerLockMode"],[138,117,234,6],[138,122,234,36],[138,135,231,4],[138,137,235,6],[139,0,236,6],[139,16,236,11,"closeDrawer"],[139,27,236,6],[140,0,237,5],[141,0,238,3],[141,7,96,45],[143,0,96,45],[143,12,240,2,"_handleRelease"],[143,26,96,45],[143,29,240,19],[143,39,240,19,"nativeEvent"],[143,50,240,30],[143,52,240,34],[144,0,240,34],[144,26,241,56],[144,32,241,61,"props"],[144,37,240,34],[145,0,240,34],[145,12,241,12,"drawerWidth"],[145,23,240,34],[145,38,241,12,"drawerWidth"],[145,49,240,34],[146,0,240,34],[146,12,241,25,"drawerPosition"],[146,26,240,34],[146,41,241,25,"drawerPosition"],[146,55,240,34],[147,0,240,34],[147,12,241,41,"drawerType"],[147,22,240,34],[147,37,241,41,"drawerType"],[147,47,240,34],[148,0,240,34],[148,12,242,12,"containerWidth"],[148,26,240,34],[148,29,242,31],[148,35,242,36,"state"],[148,40,240,34],[148,41,242,12,"containerWidth"],[148,55,240,34],[149,0,240,34],[149,12,243,24,"dragX"],[149,17,240,34],[149,20,243,56,"nativeEvent"],[149,31,240,34],[149,32,243,10,"translationX"],[149,44,240,34],[150,0,240,34],[150,12,243,31,"velocityX"],[150,21,240,34],[150,24,243,56,"nativeEvent"],[150,35,240,34],[150,36,243,31,"velocityX"],[150,45,240,34],[151,0,240,34],[151,12,243,45,"touchX"],[151,18,240,34],[151,21,243,56,"nativeEvent"],[151,32,240,34],[151,33,243,42,"x"],[151,34,240,34],[153,0,245,4],[153,12,245,8,"drawerPosition"],[153,26,245,22],[153,31,245,27],[153,37,245,4],[153,39,245,35],[154,0,248,6,"dragX"],[154,10,248,6,"dragX"],[154,15,248,11],[154,18,248,14],[154,19,248,15,"dragX"],[154,24,248,6],[155,0,249,6,"touchX"],[155,10,249,6,"touchX"],[155,16,249,12],[155,19,249,15,"containerWidth"],[155,33,249,29],[155,36,249,32,"touchX"],[155,42,249,6],[156,0,250,6,"velocityX"],[156,10,250,6,"velocityX"],[156,19,250,15],[156,22,250,18],[156,23,250,19,"velocityX"],[156,32,250,6],[157,0,251,5],[159,0,253,4],[159,12,253,10,"gestureStartX"],[159,25,253,23],[159,28,253,26,"touchX"],[159,34,253,32],[159,37,253,35,"dragX"],[159,42,253,4],[160,0,254,4],[160,12,254,8,"dragOffsetBasedOnStart"],[160,34,254,30],[160,37,254,33],[160,38,254,4],[162,0,256,4],[162,12,256,8,"drawerType"],[162,22,256,18],[162,27,256,23],[162,34,256,4],[162,36,256,32],[163,0,257,6,"dragOffsetBasedOnStart"],[163,10,257,6,"dragOffsetBasedOnStart"],[163,32,257,28],[163,35,258,8,"gestureStartX"],[163,48,258,21],[163,51,258,24,"drawerWidth"],[163,62,258,8],[163,65,258,38,"gestureStartX"],[163,78,258,51],[163,81,258,54,"drawerWidth"],[163,92,258,8],[163,95,258,68],[163,96,257,6],[164,0,259,5],[166,0,261,4],[166,12,261,10,"startOffsetX"],[166,24,261,22],[166,27,262,6,"dragX"],[166,32,262,11],[166,35,262,14,"dragOffsetBasedOnStart"],[166,57,262,6],[166,61,262,40],[166,67,262,45,"_drawerShown"],[166,79,262,40],[166,82,262,60,"drawerWidth"],[166,93,262,40],[166,96,262,74],[166,97,262,6],[166,98,261,4],[167,0,263,4],[167,12,263,10,"projOffsetX"],[167,23,263,21],[167,26,263,24,"startOffsetX"],[167,38,263,36],[167,41,263,39,"DRAG_TOSS"],[167,50,263,48],[167,53,263,51,"velocityX"],[167,62,263,4],[168,0,265,4],[168,12,265,10,"shouldOpen"],[168,22,265,20],[168,25,265,23,"projOffsetX"],[168,36,265,34],[168,39,265,37,"drawerWidth"],[168,50,265,48],[168,53,265,51],[168,54,265,4],[170,0,267,4],[170,12,267,8,"shouldOpen"],[170,22,267,4],[170,24,267,20],[171,0,268,6],[171,16,268,11,"_animateDrawer"],[171,30,268,6],[171,31,268,26,"startOffsetX"],[171,43,268,6],[171,45,268,40,"drawerWidth"],[171,56,268,6],[171,58,268,53,"velocityX"],[171,67,268,6],[172,0,269,5],[172,9,267,4],[172,15,269,11],[173,0,270,6],[173,16,270,11,"_animateDrawer"],[173,30,270,6],[173,31,270,26,"startOffsetX"],[173,43,270,6],[173,45,270,40],[173,46,270,6],[173,48,270,43,"velocityX"],[173,57,270,6],[174,0,271,5],[175,0,272,3],[175,7,96,45],[177,0,96,45],[177,12,274,2,"_updateShowing"],[177,26,96,45],[177,29,274,19],[177,39,274,20,"showing"],[177,46,274,19],[177,48,274,41],[178,0,275,4],[178,14,275,9,"_drawerShown"],[178,26,275,4],[178,29,275,24,"showing"],[178,36,275,4],[179,0,276,4],[179,14,276,9,"_accessibilityIsModalView"],[179,39,276,4],[179,40,276,35,"current"],[179,47,276,4],[179,51,277,6],[179,57,277,11,"_accessibilityIsModalView"],[179,82,277,6],[179,83,277,37,"current"],[179,90,277,6],[179,91,277,45,"setNativeProps"],[179,105,277,6],[179,106,277,60],[180,0,278,8,"accessibilityViewIsModal"],[180,10,278,8,"accessibilityViewIsModal"],[180,34,278,32],[180,36,278,34,"showing"],[181,0,277,60],[181,9,277,6],[181,10,276,4],[182,0,280,4],[182,14,280,9,"_pointerEventsView"],[182,32,280,4],[182,33,280,28,"current"],[182,40,280,4],[182,44,281,6],[182,50,281,11,"_pointerEventsView"],[182,68,281,6],[182,69,281,30,"current"],[182,76,281,6],[182,77,281,38,"setNativeProps"],[182,91,281,6],[182,92,281,53],[183,0,282,8,"pointerEvents"],[183,10,282,8,"pointerEvents"],[183,23,282,21],[183,25,282,23,"showing"],[183,32,282,30],[183,35,282,33],[183,41,282,30],[183,44,282,42],[184,0,281,53],[184,9,281,6],[184,10,280,4],[185,0,274,41],[185,27,284,60],[185,33,284,65,"props"],[185,38,274,41],[186,0,274,41],[186,12,284,12,"drawerPosition"],[186,26,274,41],[186,42,284,12,"drawerPosition"],[186,56,274,41],[187,0,274,41],[187,12,284,28,"minSwipeDistance"],[187,28,274,41],[187,44,284,28,"minSwipeDistance"],[187,60,274,41],[188,0,274,41],[188,12,284,46,"edgeWidth"],[188,21,274,41],[188,37,284,46,"edgeWidth"],[188,46,274,41],[189,0,285,4],[189,12,285,10,"fromLeft"],[189,20,285,18],[189,23,285,21,"drawerPosition"],[189,37,285,35],[189,42,285,40],[189,48,285,4],[190,0,289,4],[190,12,289,10,"gestureOrientation"],[190,30,289,28],[190,33,290,6],[190,34,290,7,"fromLeft"],[190,42,290,15],[190,45,290,18],[190,46,290,15],[190,49,290,22],[190,50,290,23],[190,51,290,6],[190,56,290,29],[190,62,290,34,"_drawerShown"],[190,74,290,29],[190,77,290,49],[190,78,290,50],[190,79,290,29],[190,82,290,54],[190,83,290,6],[190,84,289,4],[191,0,294,4],[191,12,294,10,"hitSlop"],[191,19,294,17],[191,22,294,20,"fromLeft"],[191,30,294,28],[191,33,295,8],[192,0,295,10,"left"],[192,10,295,10,"left"],[192,14,295,14],[192,16,295,16],[192,17,295,8],[193,0,295,19,"width"],[193,10,295,19,"width"],[193,15,295,24],[193,17,295,26,"showing"],[193,24,295,33],[193,27,295,36,"undefined"],[193,36,295,33],[193,39,295,48,"edgeWidth"],[194,0,295,8],[194,9,294,28],[194,12,296,8],[195,0,296,10,"right"],[195,10,296,10,"right"],[195,15,296,15],[195,17,296,17],[195,18,296,8],[196,0,296,20,"width"],[196,10,296,20,"width"],[196,15,296,25],[196,17,296,27,"showing"],[196,24,296,34],[196,27,296,37,"undefined"],[196,36,296,34],[196,39,296,49,"edgeWidth"],[197,0,296,8],[197,9,294,4],[198,0,297,4],[198,14,297,9,"_panGestureHandler"],[198,32,297,4],[198,33,297,28,"current"],[198,40,297,4],[198,44,298,6],[198,50,298,11,"_panGestureHandler"],[198,68,298,6],[198,69,298,30,"current"],[198,76,298,6],[198,77,298,38,"setNativeProps"],[198,91,298,6],[198,92,298,53],[199,0,299,8,"hitSlop"],[199,10,299,8,"hitSlop"],[199,17,299,15],[199,19,299,8,"hitSlop"],[199,26,298,53],[200,0,300,8,"activeOffsetX"],[200,10,300,8,"activeOffsetX"],[200,23,300,21],[200,25,300,23,"gestureOrientation"],[200,43,300,41],[200,46,300,44,"minSwipeDistance"],[201,0,298,53],[201,9,298,6],[201,10,297,4],[202,0,302,3],[202,7,96,45],[204,0,96,45],[204,12,304,2,"_animateDrawer"],[204,26,96,45],[204,29,304,19],[204,39,304,20,"fromValue"],[204,48,304,19],[204,50,304,40,"toValue"],[204,57,304,19],[204,59,304,57,"velocity"],[204,67,304,19],[204,69,304,78],[205,0,305,4],[205,14,305,9,"state"],[205,19,305,4],[205,20,305,15,"dragX"],[205,25,305,4],[205,26,305,21,"setValue"],[205,34,305,4],[205,35,305,30],[205,36,305,4],[207,0,306,4],[207,14,306,9,"state"],[207,19,306,4],[207,20,306,15,"touchX"],[207,26,306,4],[207,27,306,22,"setValue"],[207,35,306,4],[207,36,307,6],[207,42,307,11,"props"],[207,47,307,6],[207,48,307,17,"drawerPosition"],[207,62,307,6],[207,67,307,36],[207,73,307,6],[207,76,307,45],[207,77,307,6],[207,80,307,49],[207,86,307,54,"state"],[207,91,307,49],[207,92,307,60,"containerWidth"],[207,106,306,4],[209,0,310,4],[209,12,310,8,"fromValue"],[209,21,310,17],[209,25,310,21],[209,29,310,4],[209,31,310,27],[210,0,311,6],[210,14,311,10,"nextFramePosition"],[210,31,311,27],[210,34,311,30,"fromValue"],[210,43,311,6],[212,0,312,6],[212,14,312,10],[212,20,312,15,"props"],[212,25,312,10],[212,26,312,21,"useNativeAnimations"],[212,45,312,6],[212,47,312,42],[213,0,317,8],[213,16,317,12,"fromValue"],[213,25,317,21],[213,28,317,24,"toValue"],[213,35,317,12],[213,39,317,35,"velocity"],[213,47,317,43],[213,50,317,46],[213,51,317,8],[213,53,317,49],[214,0,318,10,"nextFramePosition"],[214,14,318,10,"nextFramePosition"],[214,31,318,27],[214,34,318,30,"Math"],[214,38,318,34],[214,39,318,35,"min"],[214,42,318,30],[214,43,318,39,"fromValue"],[214,52,318,48],[214,55,318,51,"velocity"],[214,63,318,59],[214,66,318,62],[214,70,318,30],[214,72,318,68,"toValue"],[214,79,318,30],[214,80,318,10],[215,0,319,9],[215,13,317,8],[215,19,319,15],[215,23,319,19,"fromValue"],[215,32,319,28],[215,35,319,31,"toValue"],[215,42,319,19],[215,46,319,42,"velocity"],[215,54,319,50],[215,57,319,53],[215,58,319,15],[215,60,319,56],[216,0,320,10,"nextFramePosition"],[216,14,320,10,"nextFramePosition"],[216,31,320,27],[216,34,320,30,"Math"],[216,38,320,34],[216,39,320,35,"max"],[216,42,320,30],[216,43,320,39,"fromValue"],[216,52,320,48],[216,55,320,51,"velocity"],[216,63,320,59],[216,66,320,62],[216,70,320,30],[216,72,320,68,"toValue"],[216,79,320,30],[216,80,320,10],[217,0,321,9],[218,0,322,7],[220,0,323,6],[220,16,323,11,"state"],[220,21,323,6],[220,22,323,17,"drawerTranslation"],[220,39,323,6],[220,40,323,35,"setValue"],[220,48,323,6],[220,49,323,44,"nextFramePosition"],[220,66,323,6],[221,0,324,5],[223,0,326,4],[223,12,326,10,"willShow"],[223,20,326,18],[223,23,326,21,"toValue"],[223,30,326,28],[223,35,326,33],[223,36,326,4],[225,0,327,4],[225,14,327,9,"_updateShowing"],[225,28,327,4],[225,29,327,24,"willShow"],[225,37,327,4],[227,0,328,4],[227,14,328,9,"_emitStateChanged"],[227,31,328,4],[227,32,328,27,"SETTLING"],[227,40,328,4],[227,42,328,37,"willShow"],[227,50,328,4],[229,0,329,4],[229,12,329,8],[229,18,329,13,"props"],[229,23,329,8],[229,24,329,19,"hideStatusBar"],[229,37,329,4],[229,39,329,34],[230,0,330,6,"StatusBar"],[230,33,330,16,"setHidden"],[230,42,330,6],[230,43,330,26,"willShow"],[230,51,330,6],[230,53,330,36],[230,59,330,41,"props"],[230,64,330,36],[230,65,330,47,"statusBarAnimation"],[230,83,330,36],[230,87,330,69],[230,94,330,6],[231,0,331,5],[233,0,332,4,"Animated"],[233,30,332,13,"spring"],[233,36,332,4],[233,37,332,20],[233,43,332,25,"state"],[233,48,332,20],[233,49,332,31,"drawerTranslation"],[233,66,332,4],[233,68,332,50],[234,0,333,6,"velocity"],[234,10,333,6,"velocity"],[234,18,333,14],[234,20,333,6,"velocity"],[234,28,332,50],[235,0,334,6,"bounciness"],[235,10,334,6,"bounciness"],[235,20,334,16],[235,22,334,18],[235,23,332,50],[236,0,335,6,"toValue"],[236,10,335,6,"toValue"],[236,17,335,13],[236,19,335,6,"toValue"],[236,26,332,50],[237,0,336,6,"useNativeDriver"],[237,10,336,6,"useNativeDriver"],[237,25,336,21],[237,27,336,23],[237,33,336,28,"props"],[237,38,336,23],[237,39,336,34,"useNativeAnimations"],[238,0,332,50],[238,9,332,4],[238,11,337,7,"start"],[238,16,332,4],[238,17,337,13],[238,34,337,31],[239,0,337,31],[239,14,337,16,"finished"],[239,22,337,31],[239,31,337,16,"finished"],[239,39,337,31],[241,0,338,6],[241,14,338,10,"finished"],[241,22,338,6],[241,24,338,20],[242,0,339,8],[242,18,339,13,"_emitStateChanged"],[242,35,339,8],[242,36,339,31,"IDLE"],[242,40,339,8],[242,42,339,37,"willShow"],[242,50,339,8],[244,0,340,8],[244,16,340,12,"willShow"],[244,24,340,8],[244,26,340,22],[245,0,341,10],[245,20,341,15,"props"],[245,25,341,10],[245,26,341,21,"onDrawerOpen"],[245,38,341,10],[245,42,341,37],[245,48,341,42,"props"],[245,53,341,37],[245,54,341,48,"onDrawerOpen"],[245,66,341,37],[245,68,341,10],[246,0,342,9],[246,13,340,8],[246,19,342,15],[247,0,343,10],[247,20,343,15,"props"],[247,25,343,10],[247,26,343,21,"onDrawerClose"],[247,39,343,10],[247,43,343,38],[247,49,343,43,"props"],[247,54,343,38],[247,55,343,49,"onDrawerClose"],[247,68,343,38],[247,70,343,10],[248,0,344,9],[249,0,345,7],[250,0,346,5],[250,9,332,4],[251,0,347,3],[251,7,96,45],[253,0,96,45],[253,12,349,2,"openDrawer"],[253,22,96,45],[253,25,349,15],[253,37,349,59],[254,0,349,59],[254,12,349,16,"options"],[254,19,349,59],[254,90,349,52],[254,92,349,59],[256,0,350,4],[256,14,350,9,"_animateDrawer"],[256,28,350,4],[256,29,351,6,"undefined"],[256,38,350,4],[256,40,352,6],[256,46,352,11,"props"],[256,51,352,6],[256,52,352,17,"drawerWidth"],[256,63,350,4],[256,65,353,6,"options"],[256,72,353,13],[256,73,353,14,"velocity"],[256,81,353,6],[256,84,353,25,"options"],[256,91,353,32],[256,92,353,33,"velocity"],[256,100,353,6],[256,103,353,44],[256,104,350,4],[258,0,357,4],[258,14,357,9,"forceUpdate"],[258,25,357,4],[259,0,358,3],[259,7,96,45],[261,0,96,45],[261,12,360,2,"closeDrawer"],[261,23,96,45],[261,26,360,16],[261,38,360,60],[262,0,360,60],[262,12,360,17,"options"],[262,19,360,60],[262,90,360,53],[262,92,360,60],[264,0,361,4],[264,14,361,9,"_animateDrawer"],[264,28,361,4],[264,29,361,24,"undefined"],[264,38,361,4],[264,40,361,35],[264,41,361,4],[264,43,361,38,"options"],[264,50,361,45],[264,51,361,46,"velocity"],[264,59,361,38],[264,62,361,57,"options"],[264,69,361,64],[264,70,361,65,"velocity"],[264,78,361,38],[264,81,361,76],[264,82,361,4],[266,0,364,4],[266,14,364,9,"forceUpdate"],[266,25,364,4],[267,0,365,3],[267,7,96,45],[269,0,96,45],[269,12,367,2,"_renderOverlay"],[269,26,96,45],[269,29,367,19],[269,41,367,25],[270,0,369,4],[270,32,369,14],[270,38,369,19,"_openValue"],[270,48,369,4],[270,50,369,31],[270,65,369,4],[272,0,370,4],[272,12,370,10,"overlayOpacity"],[272,26,370,24],[272,29,370,27],[272,35,370,32,"_openValue"],[272,45,370,27],[272,46,370,43,"interpolate"],[272,57,370,27],[272,58,370,55],[273,0,371,6,"inputRange"],[273,10,371,6,"inputRange"],[273,20,371,16],[273,22,371,18],[273,23,371,19],[273,24,371,18],[273,26,371,22],[273,27,371,18],[273,28,370,55],[274,0,372,6,"outputRange"],[274,10,372,6,"outputRange"],[274,21,372,17],[274,23,372,19],[274,24,372,20],[274,25,372,19],[274,27,372,23],[274,28,372,19],[274,29,370,55],[275,0,373,6,"extrapolate"],[275,10,373,6,"extrapolate"],[275,21,373,17],[275,23,373,19],[276,0,370,55],[276,9,370,27],[276,10,370,4],[278,0,375,4],[278,12,375,10,"dynamicOverlayStyles"],[278,32,375,30],[278,35,375,33],[279,0,376,6,"opacity"],[279,10,376,6,"opacity"],[279,17,376,13],[279,19,376,15,"overlayOpacity"],[279,33,375,33],[280,0,377,6,"backgroundColor"],[280,10,377,6,"backgroundColor"],[280,25,377,21],[280,27,377,23],[280,33,377,28,"props"],[280,38,377,23],[280,39,377,34,"overlayColor"],[281,0,375,33],[281,9,375,4],[282,0,380,4],[282,15,381,6],[282,44,381,7],[282,77,381,6],[283,0,381,25],[283,10,381,25],[283,30,381,45],[283,32,381,47],[283,38,381,52,"_onTapHandlerStateChange"],[284,0,381,6],[284,11,382,8],[284,40,382,9],[284,61,382,8],[284,62,382,18],[284,66,382,8],[285,0,383,10],[285,10,383,10],[285,23,383,23],[285,25,383,25],[285,31,383,30,"_drawerShown"],[285,43,383,25],[285,46,383,45],[285,52,383,25],[285,55,383,54],[285,61,382,8],[286,0,384,10],[286,10,384,10],[286,13,384,13],[286,15,384,15],[286,21,384,20,"_pointerEventsView"],[286,39,382,8],[287,0,385,10],[287,10,385,10],[287,15,385,15],[287,17,385,17],[287,18,385,18,"styles"],[287,24,385,24],[287,25,385,25,"overlay"],[287,32,385,17],[287,34,385,34,"dynamicOverlayStyles"],[287,54,385,17],[288,0,382,8],[288,10,381,6],[288,11,380,4],[289,0,389,3],[289,7,96,45],[291,0,96,45],[291,12,391,2,"_renderDrawer"],[291,25,96,45],[291,28,391,18],[291,40,391,24],[292,0,391,24],[292,27,399,8],[292,33,399,13,"props"],[292,38,391,24],[293,0,391,24],[293,12,393,6,"drawerBackgroundColor"],[293,33,391,24],[293,49,393,6,"drawerBackgroundColor"],[293,70,391,24],[294,0,391,24],[294,12,394,6,"drawerWidth"],[294,23,391,24],[294,39,394,6,"drawerWidth"],[294,50,391,24],[295,0,391,24],[295,12,395,6,"drawerPosition"],[295,26,391,24],[295,42,395,6,"drawerPosition"],[295,56,391,24],[296,0,391,24],[296,12,396,6,"drawerType"],[296,22,391,24],[296,38,396,6,"drawerType"],[296,48,391,24],[297,0,391,24],[297,12,397,6,"drawerContainerStyle"],[297,32,391,24],[297,48,397,6,"drawerContainerStyle"],[297,68,391,24],[298,0,391,24],[298,12,398,6,"contentContainerStyle"],[298,33,391,24],[298,49,398,6,"contentContainerStyle"],[298,70,391,24],[299,0,401,4],[299,12,401,10,"fromLeft"],[299,20,401,18],[299,23,401,21,"drawerPosition"],[299,37,401,35],[299,42,401,40],[299,48,401,4],[300,0,402,4],[300,12,402,10,"drawerSlide"],[300,23,402,21],[300,26,402,24,"drawerType"],[300,36,402,34],[300,41,402,39],[300,47,402,4],[301,0,403,4],[301,12,403,10,"containerSlide"],[301,26,403,24],[301,29,403,27,"drawerType"],[301,39,403,37],[301,44,403,42],[301,51,403,4],[302,0,409,4],[302,12,409,10,"reverseContentDirection"],[302,35,409,33],[302,38,409,36,"I18nManager"],[302,63,409,48,"isRTL"],[302,68,409,36],[302,71,409,56,"fromLeft"],[302,79,409,36],[302,82,409,67],[302,83,409,68,"fromLeft"],[302,91,409,4],[303,0,411,4],[303,12,411,10,"dynamicDrawerStyles"],[303,31,411,29],[303,34,411,32],[304,0,412,6,"backgroundColor"],[304,10,412,6,"backgroundColor"],[304,25,412,21],[304,27,412,23,"drawerBackgroundColor"],[304,48,411,32],[305,0,413,6,"width"],[305,10,413,6,"width"],[305,15,413,11],[305,17,413,13,"drawerWidth"],[306,0,411,32],[306,9,411,4],[307,0,415,4],[307,12,415,10,"openValue"],[307,21,415,19],[307,24,415,22],[307,30,415,27,"_openValue"],[307,40,415,4],[308,0,416,4],[308,32,416,14,"openValue"],[308,41,416,4],[308,43,416,25],[308,58,416,4],[309,0,418,4],[309,12,418,8,"containerStyles"],[309,27,418,4],[311,0,419,4],[311,12,419,8,"containerSlide"],[311,26,419,4],[311,28,419,24],[312,0,420,6],[312,14,420,12,"containerTranslateX"],[312,33,420,31],[312,36,420,34,"openValue"],[312,45,420,43],[312,46,420,44,"interpolate"],[312,57,420,34],[312,58,420,56],[313,0,421,8,"inputRange"],[313,12,421,8,"inputRange"],[313,22,421,18],[313,24,421,20],[313,25,421,21],[313,26,421,20],[313,28,421,24],[313,29,421,20],[313,30,420,56],[314,0,422,8,"outputRange"],[314,12,422,8,"outputRange"],[314,23,422,19],[314,25,422,21,"fromLeft"],[314,33,422,29],[314,36,422,32],[314,37,422,33],[314,38,422,32],[314,40,422,36,"drawerWidth"],[314,51,422,32],[314,52,422,29],[314,55,422,51],[314,56,422,52],[314,57,422,51],[314,59,422,55],[314,60,422,56,"drawerWidth"],[314,71,422,51],[314,72,420,56],[315,0,423,8,"extrapolate"],[315,12,423,8,"extrapolate"],[315,23,423,19],[315,25,423,21],[316,0,420,56],[316,11,420,34],[316,12,420,6],[317,0,425,6,"containerStyles"],[317,10,425,6,"containerStyles"],[317,25,425,21],[317,28,425,24],[318,0,426,8,"transform"],[318,12,426,8,"transform"],[318,21,426,17],[318,23,426,19],[318,24,426,20],[319,0,426,22,"translateX"],[319,14,426,22,"translateX"],[319,24,426,32],[319,26,426,34,"containerTranslateX"],[320,0,426,20],[320,13,426,19],[321,0,425,24],[321,11,425,6],[322,0,428,5],[324,0,430,4],[324,12,430,8,"drawerTranslateX"],[324,28,430,24],[324,31,430,27],[324,32,430,4],[326,0,431,4],[326,12,431,8,"drawerSlide"],[326,23,431,4],[326,25,431,21],[327,0,432,6],[327,14,432,12,"closedDrawerOffset"],[327,32,432,30],[327,35,432,33,"fromLeft"],[327,43,432,41],[327,46,432,44],[327,47,432,45,"drawerWidth"],[327,58,432,41],[327,61,432,59,"drawerWidth"],[327,72,432,6],[328,0,433,6,"drawerTranslateX"],[328,10,433,6,"drawerTranslateX"],[328,26,433,22],[328,29,433,25,"openValue"],[328,38,433,34],[328,39,433,35,"interpolate"],[328,50,433,25],[328,51,433,47],[329,0,434,8,"inputRange"],[329,12,434,8,"inputRange"],[329,22,434,18],[329,24,434,20],[329,25,434,21],[329,26,434,20],[329,28,434,24],[329,29,434,20],[329,30,433,47],[330,0,435,8,"outputRange"],[330,12,435,8,"outputRange"],[330,23,435,19],[330,25,435,21],[330,26,435,22,"closedDrawerOffset"],[330,44,435,21],[330,46,435,42],[330,47,435,21],[330,48,433,47],[331,0,436,8,"extrapolate"],[331,12,436,8,"extrapolate"],[331,23,436,19],[331,25,436,21],[332,0,433,47],[332,11,433,25],[332,12,433,6],[333,0,438,5],[335,0,439,4],[335,12,439,10,"drawerStyles"],[335,24,439,22],[335,27,439,25],[336,0,440,6,"transform"],[336,10,440,6,"transform"],[336,19,440,15],[336,21,440,17],[336,22,440,18],[337,0,440,20,"translateX"],[337,12,440,20,"translateX"],[337,22,440,30],[337,24,440,32,"drawerTranslateX"],[338,0,440,18],[338,11,440,17],[338,12,439,25],[339,0,441,6,"flexDirection"],[339,10,441,6,"flexDirection"],[339,23,441,19],[339,25,441,21,"reverseContentDirection"],[339,48,441,44],[339,51,441,47],[339,64,441,44],[339,67,441,63],[340,0,439,25],[340,9,439,4],[341,0,444,4],[341,15,445,6],[341,44,445,7],[341,65,445,6],[341,66,445,16],[341,70,445,6],[342,0,445,21],[342,10,445,21],[342,15,445,26],[342,17,445,28,"styles"],[342,23,445,34],[342,24,445,35,"main"],[342,28,445,6],[343,0,445,41],[343,10,445,41],[343,18,445,49],[343,20,445,51],[343,26,445,56,"_handleContainerLayout"],[344,0,445,6],[344,11,446,8],[344,40,446,9],[344,61,446,8],[344,62,446,18],[344,66,446,8],[345,0,447,10],[345,10,447,10],[345,15,447,15],[345,17,447,17],[345,18,448,12,"drawerType"],[345,28,448,22],[345,33,448,27],[345,40,448,12],[345,43,449,16,"styles"],[345,49,449,22],[345,50,449,23,"containerOnBack"],[345,65,448,12],[345,68,450,16,"styles"],[345,74,450,22],[345,75,450,23,"containerInFront"],[345,91,447,17],[345,93,451,12,"containerStyles"],[345,108,447,17],[345,110,452,12,"contentContainerStyle"],[345,131,447,17],[345,132,446,8],[346,0,454,10],[346,10,454,10],[346,35,454,35],[346,37,455,12],[346,43,455,17,"_drawerShown"],[346,55,455,12],[346,58,455,32],[346,79,455,12],[346,82,455,56],[347,0,446,8],[347,11,457,11],[347,18,457,18],[347,24,457,23,"props"],[347,29,457,18],[347,30,457,29,"children"],[347,38,457,11],[347,43,457,42],[347,53,457,11],[347,56,458,14],[347,62,458,19,"props"],[347,67,458,14],[347,68,458,25,"children"],[347,76,458,14],[347,77,458,34],[347,83,458,39,"_openValue"],[347,93,458,14],[347,94,457,11],[347,97,459,14],[347,103,459,19,"props"],[347,108,459,14],[347,109,459,25,"children"],[347,117,446,8],[347,119,460,11],[347,125,460,16,"_renderOverlay"],[347,139,460,11],[347,141,446,8],[347,142,445,6],[347,144,462,8],[347,173,462,9],[347,194,462,8],[347,195,462,18],[347,199,462,8],[348,0,463,10],[348,10,463,10],[348,23,463,23],[348,25,463,24],[348,35,462,8],[349,0,464,10],[349,10,464,10],[349,13,464,13],[349,15,464,15],[349,21,464,20,"_accessibilityIsModalView"],[349,46,462,8],[350,0,465,10],[350,10,465,10],[350,34,465,34],[350,36,465,36],[350,42,465,41,"_drawerShown"],[350,54,462,8],[351,0,466,10],[351,10,466,10],[351,15,466,15],[351,17,466,17],[351,18,466,18,"styles"],[351,24,466,24],[351,25,466,25,"drawerContainer"],[351,40,466,17],[351,42,466,42,"drawerStyles"],[351,54,466,17],[351,56,466,56,"drawerContainerStyle"],[351,76,466,17],[352,0,462,8],[352,11,467,10],[352,40,467,11],[352,57,467,10],[353,0,467,16],[353,10,467,16],[353,15,467,21],[353,17,467,23,"dynamicDrawerStyles"],[354,0,467,10],[354,11,468,13],[354,17,468,18,"props"],[354,22,468,13],[354,23,468,24,"renderNavigationView"],[354,43,468,13],[354,44,468,45],[354,50,468,50,"_openValue"],[354,60,468,13],[354,61,467,10],[354,62,462,8],[354,63,445,6],[354,64,444,4],[355,0,473,3],[355,7,96,45],[357,0,96,45],[357,12,475,2,"_setPanGestureRef"],[357,29,96,45],[357,32,475,22],[357,42,475,22,"ref"],[357,45,475,25],[357,47,475,29],[358,0,476,4],[358,14,476,9,"_panGestureHandler"],[358,32,476,4],[358,33,476,28,"current"],[358,40,476,4],[358,43,476,38,"ref"],[358,46,476,4],[359,0,477,4],[359,14,477,9,"props"],[359,19,477,4],[359,20,477,15,"onGestureRef"],[359,32,477,4],[359,36,477,31],[359,42,477,36,"props"],[359,47,477,31],[359,48,477,42,"onGestureRef"],[359,60,477,31],[359,61,477,55,"ref"],[359,64,477,31],[359,65,477,4],[360,0,478,3],[360,7,96,45],[362,0,99,4],[362,10,99,10,"dragX"],[362,16,99,15],[362,19,99,18],[362,23,99,22,"Animated"],[362,45,99,31,"Value"],[362,50,99,18],[362,51,99,37],[362,52,99,18],[362,53,99,4],[364,0,100,4],[364,10,100,10,"touchX"],[364,17,100,16],[364,20,100,19],[364,24,100,23,"Animated"],[364,46,100,32,"Value"],[364,51,100,19],[364,52,100,38],[364,53,100,19],[364,54,100,4],[366,0,101,4],[366,10,101,10,"drawerTranslation"],[366,28,101,27],[366,31,101,30],[366,35,101,34,"Animated"],[366,57,101,43,"Value"],[366,62,101,30],[366,63,101,49],[366,64,101,30],[366,65,101,4],[368,0,103,4],[368,12,103,9,"state"],[368,17,103,4],[368,20,103,17],[369,0,104,6,"dragX"],[369,8,104,6,"dragX"],[369,13,104,11],[369,15,104,6,"dragX"],[369,21,103,17],[370,0,105,6,"touchX"],[370,8,105,6,"touchX"],[370,14,105,12],[370,16,105,6,"touchX"],[370,23,103,17],[371,0,106,6,"drawerTranslation"],[371,8,106,6,"drawerTranslation"],[371,25,106,23],[371,27,106,6,"drawerTranslation"],[371,45,103,17],[372,0,107,6,"containerWidth"],[372,8,107,6,"containerWidth"],[372,22,107,20],[372,24,107,22],[373,0,103,17],[373,7,103,4],[375,0,110,4],[375,12,110,9,"_updateAnimatedEvent"],[375,32,110,4],[375,33,110,30,"props"],[375,39,110,4],[375,41,110,37],[375,47,110,42,"state"],[375,52,110,4],[377,0,96,45],[378,0,111,3],[382,49,113,29,"props"],[382,54],[382,56,113,46,"state"],[382,61],[382,63,113,64],[383,0,114,4],[383,12,115,6],[383,17,115,11,"props"],[383,22,115,6],[383,23,115,17,"drawerPosition"],[383,37,115,6],[383,42,115,36,"props"],[383,47,115,41],[383,48,115,42,"drawerPosition"],[383,62,115,6],[383,66,116,6],[383,71,116,11,"props"],[383,76,116,6],[383,77,116,17,"drawerWidth"],[383,88,116,6],[383,93,116,33,"props"],[383,98,116,38],[383,99,116,39,"drawerWidth"],[383,110,115,6],[383,114,117,6],[383,119,117,11,"props"],[383,124,117,6],[383,125,117,17,"drawerType"],[383,135,117,6],[383,140,117,32,"props"],[383,145,117,37],[383,146,117,38,"drawerType"],[383,156,115,6],[383,160,118,6],[383,165,118,11,"state"],[383,170,118,6],[383,171,118,17,"containerWidth"],[383,185,118,6],[383,190,118,36,"state"],[383,195,118,41],[383,196,118,42,"containerWidth"],[383,210,114,4],[383,212,119,6],[384,0,120,6],[384,15,120,11,"_updateAnimatedEvent"],[384,35,120,6],[384,36,120,32,"props"],[384,41,120,6],[384,43,120,39,"state"],[384,48,120,6],[385,0,121,5],[386,0,122,3],[389,31,480,11],[390,0,480,11],[390,27,486,8],[390,32,486,13,"props"],[390,37,480,11],[391,0,480,11],[391,12,482,6,"drawerPosition"],[391,26,480,11],[391,42,482,6,"drawerPosition"],[391,56,480,11],[392,0,480,11],[392,12,483,6,"drawerLockMode"],[392,26,480,11],[392,42,483,6,"drawerLockMode"],[392,56,480,11],[393,0,480,11],[393,12,484,6,"edgeWidth"],[393,21,480,11],[393,37,484,6,"edgeWidth"],[393,46,480,11],[394,0,480,11],[394,12,485,6,"minSwipeDistance"],[394,28,480,11],[394,44,485,6,"minSwipeDistance"],[394,60,480,11],[395,0,488,4],[395,12,488,10,"fromLeft"],[395,20,488,18],[395,23,488,21,"drawerPosition"],[395,37,488,35],[395,42,488,40],[395,48,488,4],[396,0,493,4],[396,12,493,10,"gestureOrientation"],[396,30,493,28],[396,33,494,6],[396,34,494,7,"fromLeft"],[396,42,494,15],[396,45,494,18],[396,46,494,15],[396,49,494,22],[396,50,494,23],[396,51,494,6],[396,56,494,29],[396,61,494,34,"_drawerShown"],[396,73,494,29],[396,76,494,49],[396,77,494,50],[396,78,494,29],[396,81,494,54],[396,82,494,6],[396,83,493,4],[397,0,499,4],[397,12,499,10,"hitSlop"],[397,19,499,17],[397,22,499,20,"fromLeft"],[397,30,499,28],[397,33,500,8],[398,0,500,10,"left"],[398,10,500,10,"left"],[398,14,500,14],[398,16,500,16],[398,17,500,8],[399,0,500,19,"width"],[399,10,500,19,"width"],[399,15,500,24],[399,17,500,26],[399,22,500,31,"_drawerShown"],[399,34,500,26],[399,37,500,46,"undefined"],[399,46,500,26],[399,49,500,58,"edgeWidth"],[400,0,500,8],[400,9,499,28],[400,12,501,8],[401,0,501,10,"right"],[401,10,501,10,"right"],[401,15,501,15],[401,17,501,17],[401,18,501,8],[402,0,501,20,"width"],[402,10,501,20,"width"],[402,15,501,25],[402,17,501,27],[402,22,501,32,"_drawerShown"],[402,34,501,27],[402,37,501,47,"undefined"],[402,46,501,27],[402,49,501,59,"edgeWidth"],[403,0,501,8],[403,9,499,4],[404,0,503,4],[404,15,504,6],[404,44,504,7],[404,77,504,6],[405,0,505,8],[405,10,505,8],[405,13,505,11],[405,15,505,13],[405,20,505,18,"_setPanGestureRef"],[405,37,504,6],[406,0,506,8],[406,10,506,8],[406,17,506,15],[406,19,506,17,"hitSlop"],[406,26,504,6],[407,0,507,8],[407,10,507,8],[407,23,507,21],[407,25,507,23,"gestureOrientation"],[407,43,507,41],[407,46,507,44,"minSwipeDistance"],[407,62,504,6],[408,0,508,8],[408,10,508,8],[408,21,508,19],[408,23,508,21],[408,24,508,22],[408,25,508,23],[408,27,508,21],[408,29,508,27],[408,31,508,21],[408,32,504,6],[409,0,509,8],[409,10,509,8],[409,24,509,22],[409,26,509,24],[409,31,509,29,"_onGestureEvent"],[409,46,504,6],[410,0,510,8],[410,10,510,8],[410,30,510,28],[410,32,510,30],[410,37,510,35,"_openingHandlerStateChange"],[410,63,504,6],[411,0,511,8],[411,10,511,8],[411,17,511,15],[411,19,512,10,"drawerLockMode"],[411,33,512,24],[411,38,512,29],[411,53,512,10],[411,57,512,48,"drawerLockMode"],[411,71,512,62],[411,76,512,67],[412,0,504,6],[412,11,514,9],[412,16,514,14,"_renderDrawer"],[412,29,514,9],[412,31,504,6],[412,32,503,4],[413,0,517,3],[416,4,73,42,"Component"],[416,20],[419,0,73,21,"DrawerLayout"],[419,2,73,21,"DrawerLayout"],[419,14],[419,15,74,9,"defaultProps"],[419,27],[419,30,74,24],[420,0,75,4,"drawerWidth"],[420,4,75,4,"drawerWidth"],[420,15,75,15],[420,17,75,17],[420,20,74,24],[421,0,76,4,"drawerPosition"],[421,4,76,4,"drawerPosition"],[421,18,76,18],[421,20,76,20],[421,26,74,24],[422,0,77,4,"useNativeAnimations"],[422,4,77,4,"useNativeAnimations"],[422,23,77,23],[422,25,77,25],[422,29,74,24],[423,0,78,4,"drawerType"],[423,4,78,4,"drawerType"],[423,14,78,14],[423,16,78,16],[423,23,74,24],[424,0,79,4,"edgeWidth"],[424,4,79,4,"edgeWidth"],[424,13,79,13],[424,15,79,15],[424,17,74,24],[425,0,80,4,"minSwipeDistance"],[425,4,80,4,"minSwipeDistance"],[425,20,80,20],[425,22,80,22],[425,23,74,24],[426,0,81,4,"overlayColor"],[426,4,81,4,"overlayColor"],[426,16,81,16],[426,18,81,18],[426,38,74,24],[427,0,82,4,"drawerLockMode"],[427,4,82,4,"drawerLockMode"],[427,18,82,18],[427,20,82,20],[428,0,74,24],[428,3],[429,0,73,21,"DrawerLayout"],[429,2,73,21,"DrawerLayout"],[429,14],[429,15,85,9,"positions"],[429,24],[429,27,85,21],[430,0,86,4,"Left"],[430,4,86,4,"Left"],[430,8,86,8],[430,10,86,10],[430,16,85,21],[431,0,87,4,"Right"],[431,4,87,4,"Right"],[431,9,87,9],[431,11,87,11],[432,0,85,21],[432,3],[434,0,520,0],[434,6,520,6,"styles"],[434,12,520,12],[434,15,520,15,"StyleSheet"],[434,39,520,26,"create"],[434,45,520,15],[434,46,520,33],[435,0,521,2,"drawerContainer"],[435,4,521,2,"drawerContainer"],[435,19,521,17],[435,53,522,7,"StyleSheet"],[435,77,522,18,"absoluteFillObject"],[435,95,521,17],[436,0,523,4,"zIndex"],[436,6,523,4,"zIndex"],[436,12,523,10],[436,14,523,12],[436,18,521,17],[437,0,524,4,"flexDirection"],[437,6,524,4,"flexDirection"],[437,19,524,17],[437,21,524,19],[438,0,521,17],[438,6,520,33],[439,0,526,2,"containerInFront"],[439,4,526,2,"containerInFront"],[439,20,526,18],[439,54,527,7,"StyleSheet"],[439,78,527,18,"absoluteFillObject"],[439,96,526,18],[440,0,528,4,"zIndex"],[440,6,528,4,"zIndex"],[440,12,528,10],[440,14,528,12],[441,0,526,18],[441,6,520,33],[442,0,530,2,"containerOnBack"],[442,4,530,2,"containerOnBack"],[442,19,530,17],[442,39,531,7,"StyleSheet"],[442,63,531,18,"absoluteFillObject"],[442,81,530,17],[442,82,520,33],[443,0,533,2,"main"],[443,4,533,2,"main"],[443,8,533,6],[443,10,533,8],[444,0,534,4,"flex"],[444,6,534,4,"flex"],[444,10,534,8],[444,12,534,10],[444,13,533,8],[445,0,535,4,"zIndex"],[445,6,535,4,"zIndex"],[445,12,535,10],[445,14,535,12],[445,15,533,8],[446,0,536,4,"overflow"],[446,6,536,4,"overflow"],[446,14,536,12],[446,16,536,14],[447,0,533,8],[447,5,520,33],[448,0,538,2,"overlay"],[448,4,538,2,"overlay"],[448,11,538,9],[448,45,539,7,"StyleSheet"],[448,69,539,18,"absoluteFillObject"],[448,87,538,9],[449,0,540,4,"zIndex"],[449,6,540,4,"zIndex"],[449,12,540,10],[449,14,540,12],[450,0,538,9],[451,0,520,33],[451,3,520,15],[451,4,520,0]],"functionMap":{"names":["<global>","DrawerLayout","constructor","UNSAFE_componentWillUpdate","_updateAnimatedEvent","_handleContainerLayout","_emitStateChanged","_openingHandlerStateChange","_onTapHandlerStateChange","_handleRelease","_updateShowing","_animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","_renderOverlay","_renderDrawer","_setPanGestureRef","render"],"mappings":"AAA;eCwE;ECuB;GDe;EEE;GFS;yBGE;GHiF;2BIE;GJE;sBKE;GLG;+BME;GNY;6BOE;GPQ;mBQE;GRgC;mBSE;GT4B;mBUE;aCiC;KDS;GVC;eYE;GZS;gBaE;GbK;mBcE;GdsB;kBeE;GfkF;sBgBE;GhBG;EiBE;GjBqC;CDC"}},"type":"js/module"}]}