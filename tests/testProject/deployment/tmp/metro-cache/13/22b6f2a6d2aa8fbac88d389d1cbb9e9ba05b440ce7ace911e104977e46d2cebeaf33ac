{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./SwitchActions","data":{"isAsync":false}},{"name":"./StackActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./pathUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./createConfigGetter\"));\n\n  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"../NavigationActions\"));\n\n  var SwitchActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"./SwitchActions\"));\n\n  var StackActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"./StackActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./validateRouteConfigMap\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[11], \"./pathUtils\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var defaultActionCreators = function defaultActionCreators() {\n    return {};\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\".concat(initialRouteName, \"'.\") + \"Should be one of \".concat(order.map(function (n) {\n        return \"\\\"\".concat(n, \"\\\"\");\n      }).join(', ')));\n    }\n\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    function getParamsForRoute(routeName, params) {\n      var routeConfig = routeConfigs[routeName];\n\n      if (routeConfig && routeConfig.params) {\n        return _objectSpread(_objectSpread({}, routeConfig.params), params);\n      } else {\n        return params;\n      }\n    }\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    function resetChildRoute(routeName) {\n      var initialParams = routeName === initialRouteName ? initialRouteParams : null;\n      var params = getParamsForRoute(routeName, initialParams);\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = NavigationActions.init();\n        return _objectSpread(_objectSpread({}, childRouter.getStateForAction(childAction)), {}, {\n          key: routeName,\n          routeName: routeName\n        }, params ? {\n          params: params\n        } : {});\n      }\n\n      return _objectSpread({\n        key: routeName,\n        routeName: routeName\n      }, params ? {\n        params: params\n      } : {});\n    }\n\n    function getNextState(action, prevState, possibleNextState) {\n      function updateNextStateHistory(prevState, nextState) {\n        if (backBehavior !== 'history' || prevState && nextState && nextState.index === prevState.index) {\n          return nextState;\n        }\n\n        var nextRouteKeyHistory = prevState ? prevState.routeKeyHistory : [];\n\n        if (action.type === NavigationActions.NAVIGATE) {\n          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);\n          var keyToAdd = nextState.routes[nextState.index].key;\n          nextRouteKeyHistory = nextRouteKeyHistory.filter(function (k) {\n            return k !== keyToAdd;\n          });\n          nextRouteKeyHistory.push(keyToAdd);\n        } else if (action.type === NavigationActions.BACK) {\n          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);\n          nextRouteKeyHistory.pop();\n        }\n\n        return _objectSpread(_objectSpread({}, nextState), {}, {\n          routeKeyHistory: nextRouteKeyHistory\n        });\n      }\n\n      var nextState = possibleNextState;\n\n      if (prevState && possibleNextState && prevState.index !== possibleNextState.index && resetOnBlur) {\n        var prevRouteName = prevState.routes[prevState.index].routeName;\n        var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n        nextState = _objectSpread(_objectSpread({}, possibleNextState), {}, {\n          routes: nextRoutes\n        });\n      }\n\n      return updateNextStateHistory(prevState, nextState);\n    }\n\n    function getInitialState() {\n      var routes = order.map(resetChildRoute);\n      var initialState = {\n        routes: routes,\n        index: initialRouteIndex\n      };\n\n      if (backBehavior === 'history') {\n        var initialKey = routes[initialRouteIndex].key;\n        initialState['routeKeyHistory'] = [initialKey];\n      }\n\n      return initialState;\n    }\n\n    return {\n      childRouters: childRouters,\n      getActionCreators: function getActionCreators(route, stateKey) {\n        return getCustomActionCreators(route, stateKey);\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? _objectSpread({}, inputState) : inputState;\n        var state = inputState || getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === NavigationActions.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return _objectSpread(_objectSpread({}, route), {}, {\n                params: _objectSpread(_objectSpread(_objectSpread({}, route.params), params), route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        if (action.type === SwitchActions.JUMP_TO && (action.key == null || action.key === state.key)) {\n          var _params = action.params;\n          var index = state.routes.findIndex(function (route) {\n            return route.routeName === action.routeName;\n          });\n\n          if (index === -1) {\n            throw new Error(\"There is no route named '\".concat(action.routeName, \"' in the navigator with the key '\").concat(action.key, \"'.\\n\") + \"Must be one of: \".concat(state.routes.map(function (route) {\n              return \"'\".concat(route.routeName, \"'\");\n            }).join(',')));\n          }\n\n          return getNextState(action, prevState, _objectSpread(_objectSpread({}, state), {}, {\n            routes: _params ? state.routes.map(function (route, i) {\n              return i === index ? _objectSpread(_objectSpread({}, route), {}, {\n                params: _objectSpread(_objectSpread({}, route.params), _params)\n              }) : route;\n            }) : state.routes,\n            index: index\n          }));\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var routes = (0, _toConsumableArray2.default)(state.routes);\n            routes[state.index] = activeChildState;\n            return getNextState(action, prevState, _objectSpread(_objectSpread({}, state), {}, {\n              routes: routes\n            }));\n          }\n        }\n\n        var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n        if (action.type === NavigationActions.BACK) {\n          if (isBackEligible && backBehavior === 'initialRoute') {\n            activeChildIndex = initialRouteIndex;\n          } else if (isBackEligible && backBehavior === 'order') {\n            activeChildIndex = Math.max(0, activeChildIndex - 1);\n          } else if (isBackEligible && backBehavior === 'history' && state.routeKeyHistory.length > 1) {\n              var routeKey = state.routeKeyHistory[state.routeKeyHistory.length - 2];\n              activeChildIndex = order.indexOf(routeKey);\n            }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === NavigationActions.NAVIGATE) {\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === action.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var childRouter = childRouters[action.routeName];\n            var newChildState = childState;\n\n            if (action.action && childRouter) {\n              var childStateUpdate = childRouter.getStateForAction(action.action, childState);\n\n              if (childStateUpdate) {\n                newChildState = childStateUpdate;\n              }\n            }\n\n            if (action.params) {\n              newChildState = _objectSpread(_objectSpread({}, newChildState), {}, {\n                params: _objectSpread(_objectSpread({}, newChildState.params || {}), action.params)\n              });\n            }\n\n            if (newChildState !== childState) {\n              var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes[activeChildIndex] = newChildState;\n\n              var nextState = _objectSpread(_objectSpread({}, state), {}, {\n                routes: _routes,\n                index: activeChildIndex\n              });\n\n              return getNextState(action, prevState, nextState);\n            } else if (newChildState === childState && state.index === activeChildIndex && prevState) {\n              return null;\n            }\n          }\n        }\n\n        if (action.type === NavigationActions.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params2 = _objectSpread(_objectSpread({}, lastRoute.params), action.params);\n\n            var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes2[state.routes.indexOf(lastRoute)] = _objectSpread(_objectSpread({}, lastRoute), {}, {\n              params: _params2\n            });\n            return getNextState(action, prevState, _objectSpread(_objectSpread({}, state), {}, {\n              routes: _routes2\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return getNextState(action, prevState, _objectSpread(_objectSpread({}, state), {}, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return _objectSpread({}, state);\n        }\n\n        var isActionBackOrPop = action.type === NavigationActions.BACK || action.type === StackActions.POP || action.type === StackActions.POP_TO_TOP;\n        var sendActionToInactiveChildren = !isActionBackOrPop || action.type === NavigationActions.BACK && action.key != null;\n\n        if (sendActionToInactiveChildren) {\n          var _index = state.index;\n          var _routes3 = state.routes;\n          order.find(function (childId, i) {\n            var childRouter = childRouters[childId];\n\n            if (i === _index) {\n              return false;\n            }\n\n            var childState = _routes3[i];\n\n            if (childRouter) {\n              childState = childRouter.getStateForAction(action, childState);\n            }\n\n            if (!childState) {\n              _index = i;\n              return true;\n            }\n\n            if (childState !== _routes3[i]) {\n              _routes3 = (0, _toConsumableArray2.default)(_routes3);\n              _routes3[i] = childState;\n              _index = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (action.preserveFocus) {\n            _index = state.index;\n          }\n\n          if (_index !== state.index || _routes3 !== state.routes) {\n            return getNextState(action, prevState, _objectSpread(_objectSpread({}, state), {}, {\n              index: _index,\n              routes: _routes3\n            }));\n          }\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \".concat(state.index, \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\"));\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.defaultNavigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","lineCount":385,"map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[21,0,4,0],[23,0,5,0],[25,0,6,0],[27,0,7,0],[29,0,8,0],[35,0,10,0],[35,6,10,6,"defaultActionCreators"],[35,27,10,27],[35,30,10,30],[35,39,10,6,"defaultActionCreators"],[35,60,10,30],[36,0,10,30],[36,11,10,37],[36,13,10,30],[37,0,10,30],[37,3,10,0],[39,17,12,16],[39,35,12,17,"routeConfigs"],[39,47,12,16],[39,49,12,47],[40,0,12,47],[40,8,12,31,"config"],[40,14,12,47],[40,85,12,40],[40,87,12,47],[41,0,14,2],[41,41,14,25,"routeConfigs"],[41,53,14,2],[42,0,15,2],[42,8,15,8,"order"],[42,13,15,13],[42,16,15,16,"config"],[42,22,15,22],[42,23,15,23,"order"],[42,28,15,16],[42,32,15,32,"Object"],[42,38,15,38],[42,39,15,39,"keys"],[42,43,15,32],[42,44,15,44,"routeConfigs"],[42,56,15,32],[42,57,15,2],[43,0,16,2],[43,8,16,8,"getCustomActionCreators"],[43,31,16,31],[43,34,16,34,"config"],[43,40,16,40],[43,41,16,41,"getCustomActionCreators"],[43,64,16,34],[43,68,16,68,"defaultActionCreators"],[43,89,16,2],[44,0,12,47],[44,8,18,4,"initialRouteParams"],[44,26,12,47],[44,29,19,6,"config"],[44,35,12,47],[44,36,18,4,"initialRouteParams"],[44,54,12,47],[45,0,20,2],[45,8,20,8,"initialRouteName"],[45,24,20,24],[45,27,20,27,"config"],[45,33,20,33],[45,34,20,34,"initialRouteName"],[45,50,20,27],[45,54,20,54,"order"],[45,59,20,59],[45,60,20,60],[45,61,20,59],[45,62,20,2],[46,0,21,2],[46,8,21,8,"backBehavior"],[46,20,21,20],[46,23,21,23,"config"],[46,29,21,29],[46,30,21,30,"backBehavior"],[46,42,21,23],[46,46,21,46],[46,52,21,2],[47,0,22,2],[47,8,22,8,"resetOnBlur"],[47,19,22,19],[47,22,22,22,"config"],[47,28,22,28],[47,29,22,29,"hasOwnProperty"],[47,43,22,22],[47,44,22,44],[47,57,22,22],[47,61,22,61,"config"],[47,67,22,67],[47,68,22,68,"resetOnBlur"],[47,79,22,22],[47,82,22,82],[47,86,22,2],[48,0,23,2],[48,8,23,8,"initialRouteIndex"],[48,25,23,25],[48,28,23,28,"order"],[48,33,23,33],[48,34,23,34,"indexOf"],[48,41,23,28],[48,42,23,42,"initialRouteName"],[48,58,23,28],[48,59,23,2],[50,0,25,2],[50,8,25,6,"initialRouteIndex"],[50,25,25,23],[50,30,25,28],[50,31,25,29],[50,32,25,2],[50,34,25,32],[51,0,26,4],[51,12,26,10],[51,16,26,14,"Error"],[51,21,26,10],[51,22,26,20],[51,51,26,49,"concat"],[51,57,26,20],[51,58,26,56,"initialRouteName"],[51,74,26,20],[51,76,26,74],[51,80,26,20],[51,84,26,82],[51,104,26,102,"concat"],[51,110,26,82],[51,111,26,109,"order"],[51,116,26,114],[51,117,26,115,"map"],[51,120,26,109],[51,121,26,119],[51,131,26,119,"n"],[51,132,26,120],[52,0,26,120],[52,15,26,124],[52,20,26,129,"concat"],[52,26,26,124],[52,27,26,136,"n"],[52,28,26,124],[52,30,26,139],[52,34,26,124],[52,35,26,120],[53,0,26,120],[53,7,26,109],[53,9,26,146,"join"],[53,13,26,109],[53,14,26,151],[53,18,26,109],[53,19,26,82],[53,20,26,10],[53,21,26,4],[54,0,27,3],[56,0,29,2],[56,8,29,8,"childRouters"],[56,20,29,20],[56,23,29,23],[56,25,29,2],[57,0,30,2,"order"],[57,4,30,2,"order"],[57,9,30,7],[57,10,30,8,"forEach"],[57,17,30,2],[57,18,30,16],[57,28,30,16,"routeName"],[57,37,30,25],[57,39,30,29],[58,0,31,4,"childRouters"],[58,6,31,4,"childRouters"],[58,18,31,16],[58,19,31,17,"routeName"],[58,28,31,16],[58,29,31,4],[58,32,31,30],[58,36,31,4],[59,0,32,4],[59,10,32,10,"screen"],[59,16,32,16],[59,19,32,19],[59,55,32,41,"routeConfigs"],[59,67,32,19],[59,69,32,55,"routeName"],[59,78,32,19],[59,79,32,4],[61,0,34,4],[61,10,34,8,"screen"],[61,16,34,14],[61,17,34,15,"router"],[61,23,34,4],[61,25,34,23],[62,0,35,6,"childRouters"],[62,8,35,6,"childRouters"],[62,20,35,18],[62,21,35,19,"routeName"],[62,30,35,18],[62,31,35,6],[62,34,35,32,"screen"],[62,40,35,38],[62,41,35,39,"router"],[62,47,35,6],[63,0,36,5],[64,0,37,3],[64,5,30,2],[66,0,39,2],[66,13,39,11,"getParamsForRoute"],[66,30,39,2],[66,31,39,29,"routeName"],[66,40,39,2],[66,42,39,40,"params"],[66,48,39,2],[66,50,39,48],[67,0,40,4],[67,10,40,8,"routeConfig"],[67,21,40,19],[67,24,40,22,"routeConfigs"],[67,36,40,34],[67,37,40,35,"routeName"],[67,46,40,34],[67,47,40,4],[69,0,42,4],[69,10,42,8,"routeConfig"],[69,21,42,19],[69,25,42,23,"routeConfig"],[69,36,42,34],[69,37,42,35,"params"],[69,43,42,4],[69,45,42,43],[70,0,43,6],[70,47,43,18,"routeConfig"],[70,58,43,29],[70,59,43,30,"params"],[70,65,43,6],[70,68,44,11,"params"],[70,74,43,6],[71,0,46,5],[71,7,42,4],[71,13,46,11],[72,0,47,6],[72,15,47,13,"params"],[72,21,47,6],[73,0,48,5],[74,0,49,3],[76,0,12,47],[76,28,54,6],[76,61,54,23,"childRouters"],[76,73,54,6],[76,75,54,37,"routeConfigs"],[76,87,54,6],[76,89,54,51,"config"],[76,95,54,6],[76,96,12,47],[77,0,12,47],[77,8,52,4,"getPathAndParamsForRoute"],[77,32,12,47],[77,53,52,4,"getPathAndParamsForRoute"],[77,77,12,47],[78,0,12,47],[78,8,53,4,"getActionForPathAndParams"],[78,34,12,47],[78,55,53,4,"getActionForPathAndParams"],[78,80,12,47],[80,0,56,2],[80,13,56,11,"resetChildRoute"],[80,28,56,2],[80,29,56,27,"routeName"],[80,38,56,2],[80,40,56,38],[81,0,57,4],[81,10,57,8,"initialParams"],[81,23,57,21],[81,26,57,24,"routeName"],[81,35,57,33],[81,40,57,38,"initialRouteName"],[81,56,57,24],[81,59,57,57,"initialRouteParams"],[81,77,57,24],[81,80,57,78],[81,84,57,4],[82,0,61,4],[82,10,61,8,"params"],[82,16,61,14],[82,19,61,17,"getParamsForRoute"],[82,36,61,34],[82,37,61,35,"routeName"],[82,46,61,34],[82,48,61,46,"initialParams"],[82,61,61,34],[82,62,61,4],[83,0,62,4],[83,10,62,10,"childRouter"],[83,21,62,21],[83,24,62,24,"childRouters"],[83,36,62,36],[83,37,62,37,"routeName"],[83,46,62,36],[83,47,62,4],[85,0,64,4],[85,10,64,8,"childRouter"],[85,21,64,4],[85,23,64,21],[86,0,65,6],[86,12,65,12,"childAction"],[86,23,65,23],[86,26,65,26,"NavigationActions"],[86,43,65,43],[86,44,65,44,"init"],[86,48,65,26],[86,50,65,6],[87,0,66,6],[87,47,66,18,"childRouter"],[87,58,66,29],[87,59,66,30,"getStateForAction"],[87,76,66,18],[87,77,66,48,"childAction"],[87,88,66,18],[87,89,66,6],[88,0,67,8,"key"],[88,10,67,8,"key"],[88,13,67,11],[88,15,67,13,"routeName"],[88,24,66,6],[89,0,68,8,"routeName"],[89,10,68,8,"routeName"],[89,19,68,17],[89,21,68,8,"routeName"],[90,0,66,6],[90,11,69,12,"params"],[90,17,69,18],[90,20,69,21],[91,0,70,10,"params"],[91,10,70,10,"params"],[91,16,70,16],[91,18,70,10,"params"],[92,0,69,21],[92,9,69,18],[92,12,71,12],[92,14,66,6],[93,0,73,5],[95,0,75,4],[96,0,76,6,"key"],[96,8,76,6,"key"],[96,11,76,9],[96,13,76,11,"routeName"],[96,22,75,4],[97,0,77,6,"routeName"],[97,8,77,6,"routeName"],[97,17,77,15],[97,19,77,6,"routeName"],[98,0,75,4],[98,9,78,10,"params"],[98,15,78,16],[98,18,78,19],[99,0,79,8,"params"],[99,8,79,8,"params"],[99,14,79,14],[99,16,79,8,"params"],[100,0,78,19],[100,7,78,16],[100,10,80,10],[100,12,75,4],[101,0,82,3],[103,0,84,2],[103,13,84,11,"getNextState"],[103,25,84,2],[103,26,84,24,"action"],[103,32,84,2],[103,34,84,32,"prevState"],[103,43,84,2],[103,45,84,43,"possibleNextState"],[103,62,84,2],[103,64,84,62],[104,0,85,4],[104,15,85,13,"updateNextStateHistory"],[104,37,85,4],[104,38,85,36,"prevState"],[104,47,85,4],[104,49,85,47,"nextState"],[104,58,85,4],[104,60,85,58],[105,0,86,6],[105,12,86,10,"backBehavior"],[105,24,86,22],[105,29,86,27],[105,38,86,10],[105,42,86,40,"prevState"],[105,51,86,49],[105,55,86,53,"nextState"],[105,64,86,40],[105,68,86,66,"nextState"],[105,77,86,75],[105,78,86,76,"index"],[105,83,86,66],[105,88,86,86,"prevState"],[105,97,86,95],[105,98,86,96,"index"],[105,103,86,6],[105,105,86,103],[106,0,87,8],[106,17,87,15,"nextState"],[106,26,87,8],[107,0,88,7],[109,0,90,6],[109,12,90,10,"nextRouteKeyHistory"],[109,31,90,29],[109,34,90,32,"prevState"],[109,43,90,41],[109,46,90,44,"prevState"],[109,55,90,53],[109,56,90,54,"routeKeyHistory"],[109,71,90,41],[109,74,90,72],[109,76,90,6],[111,0,92,6],[111,12,92,10,"action"],[111,18,92,16],[111,19,92,17,"type"],[111,23,92,10],[111,28,92,26,"NavigationActions"],[111,45,92,43],[111,46,92,44,"NAVIGATE"],[111,54,92,6],[111,56,92,54],[112,0,93,8,"nextRouteKeyHistory"],[112,10,93,8,"nextRouteKeyHistory"],[112,29,93,27],[112,65,93,34,"nextRouteKeyHistory"],[112,84,93,27],[112,85,93,8],[113,0,95,8],[113,14,95,14,"keyToAdd"],[113,22,95,22],[113,25,95,25,"nextState"],[113,34,95,34],[113,35,95,35,"routes"],[113,41,95,25],[113,42,95,42,"nextState"],[113,51,95,51],[113,52,95,52,"index"],[113,57,95,25],[113,59,95,59,"key"],[113,62,95,8],[114,0,96,8,"nextRouteKeyHistory"],[114,10,96,8,"nextRouteKeyHistory"],[114,29,96,27],[114,32,96,30,"nextRouteKeyHistory"],[114,51,96,49],[114,52,96,50,"filter"],[114,58,96,30],[114,59,96,57],[114,69,96,57,"k"],[114,70,96,58],[115,0,96,58],[115,19,96,62,"k"],[115,20,96,63],[115,25,96,68,"keyToAdd"],[115,33,96,58],[116,0,96,58],[116,11,96,30],[116,12,96,8],[117,0,98,8,"nextRouteKeyHistory"],[117,10,98,8,"nextRouteKeyHistory"],[117,29,98,27],[117,30,98,28,"push"],[117,34,98,8],[117,35,98,33,"keyToAdd"],[117,43,98,8],[118,0,99,7],[118,9,92,6],[118,15,99,13],[118,19,99,17,"action"],[118,25,99,23],[118,26,99,24,"type"],[118,30,99,17],[118,35,99,33,"NavigationActions"],[118,52,99,50],[118,53,99,51,"BACK"],[118,57,99,13],[118,59,99,57],[119,0,100,8,"nextRouteKeyHistory"],[119,10,100,8,"nextRouteKeyHistory"],[119,29,100,27],[119,65,100,34,"nextRouteKeyHistory"],[119,84,100,27],[119,85,100,8],[120,0,102,8,"nextRouteKeyHistory"],[120,10,102,8,"nextRouteKeyHistory"],[120,29,102,27],[120,30,102,28,"pop"],[120,33,102,8],[121,0,103,7],[123,0,105,6],[123,47,105,18,"nextState"],[123,56,105,6],[124,0,106,8,"routeKeyHistory"],[124,10,106,8,"routeKeyHistory"],[124,25,106,23],[124,27,106,25,"nextRouteKeyHistory"],[125,0,105,6],[126,0,108,5],[128,0,110,4],[128,10,110,8,"nextState"],[128,19,110,17],[128,22,110,20,"possibleNextState"],[128,39,110,4],[130,0,112,4],[130,10,112,8,"prevState"],[130,19,112,17],[130,23,112,21,"possibleNextState"],[130,40,112,8],[130,44,112,42,"prevState"],[130,53,112,51],[130,54,112,52,"index"],[130,59,112,42],[130,64,112,62,"possibleNextState"],[130,81,112,79],[130,82,112,80,"index"],[130,87,112,8],[130,91,112,89,"resetOnBlur"],[130,102,112,4],[130,104,112,102],[131,0,113,6],[131,12,113,12,"prevRouteName"],[131,25,113,25],[131,28,113,28,"prevState"],[131,37,113,37],[131,38,113,38,"routes"],[131,44,113,28],[131,45,113,45,"prevState"],[131,54,113,54],[131,55,113,55,"index"],[131,60,113,28],[131,62,113,62,"routeName"],[131,71,113,6],[132,0,114,6],[132,12,114,12,"nextRoutes"],[132,22,114,22],[132,58,114,29,"possibleNextState"],[132,75,114,46],[132,76,114,47,"routes"],[132,82,114,22],[132,83,114,6],[133,0,115,6,"nextRoutes"],[133,8,115,6,"nextRoutes"],[133,18,115,16],[133,19,115,17,"prevState"],[133,28,115,26],[133,29,115,27,"index"],[133,34,115,16],[133,35,115,6],[133,38,115,36,"resetChildRoute"],[133,53,115,51],[133,54,115,52,"prevRouteName"],[133,67,115,51],[133,68,115,6],[134,0,116,6,"nextState"],[134,8,116,6,"nextState"],[134,17,116,15],[134,52,116,23,"possibleNextState"],[134,69,116,15],[135,0,117,8,"routes"],[135,10,117,8,"routes"],[135,16,117,14],[135,18,117,16,"nextRoutes"],[136,0,116,15],[136,10,116,6],[137,0,119,5],[139,0,121,4],[139,13,121,11,"updateNextStateHistory"],[139,35,121,33],[139,36,121,34,"prevState"],[139,45,121,33],[139,47,121,45,"nextState"],[139,56,121,33],[139,57,121,4],[140,0,122,3],[142,0,124,2],[142,13,124,11,"getInitialState"],[142,28,124,2],[142,31,124,29],[143,0,125,4],[143,10,125,10,"routes"],[143,16,125,16],[143,19,125,19,"order"],[143,24,125,24],[143,25,125,25,"map"],[143,28,125,19],[143,29,125,29,"resetChildRoute"],[143,44,125,19],[143,45,125,4],[144,0,126,4],[144,10,126,10,"initialState"],[144,22,126,22],[144,25,126,25],[145,0,127,6,"routes"],[145,8,127,6,"routes"],[145,14,127,12],[145,16,127,6,"routes"],[145,22,126,25],[146,0,128,6,"index"],[146,8,128,6,"index"],[146,13,128,11],[146,15,128,13,"initialRouteIndex"],[147,0,126,25],[147,7,126,4],[149,0,131,4],[149,10,131,8,"backBehavior"],[149,22,131,20],[149,27,131,25],[149,36,131,4],[149,38,131,36],[150,0,132,6],[150,12,132,12,"initialKey"],[150,22,132,22],[150,25,132,25,"routes"],[150,31,132,31],[150,32,132,32,"initialRouteIndex"],[150,49,132,31],[150,50,132,25],[150,51,132,51,"key"],[150,54,132,6],[151,0,133,6,"initialState"],[151,8,133,6,"initialState"],[151,20,133,18],[151,21,133,19],[151,38,133,18],[151,39,133,6],[151,42,133,40],[151,43,133,41,"initialKey"],[151,53,133,40],[151,54,133,6],[152,0,134,5],[154,0,136,4],[154,13,136,11,"initialState"],[154,25,136,4],[155,0,137,3],[157,0,139,2],[157,11,139,9],[158,0,140,4,"childRouters"],[158,6,140,4,"childRouters"],[158,18,140,16],[158,20,140,4,"childRouters"],[158,32,139,9],[159,0,142,4,"getActionCreators"],[159,6,142,4,"getActionCreators"],[159,23,139,9],[159,52,142,22,"route"],[159,57,139,9],[159,59,142,29,"stateKey"],[159,67,139,9],[159,69,142,39],[160,0,143,6],[160,15,143,13,"getCustomActionCreators"],[160,38,143,36],[160,39,143,37,"route"],[160,44,143,36],[160,46,143,44,"stateKey"],[160,54,143,36],[160,55,143,6],[161,0,144,5],[161,7,139,9],[162,0,146,4,"getStateForAction"],[162,6,146,4,"getStateForAction"],[162,23,139,9],[162,52,146,22,"action"],[162,58,139,9],[162,60,146,30,"inputState"],[162,70,139,9],[162,72,146,42],[163,0,147,6],[163,12,147,10,"prevState"],[163,21,147,19],[163,24,147,22,"inputState"],[163,34,147,32],[163,55,147,40,"inputState"],[163,65,147,32],[163,69,148,10,"inputState"],[163,79,147,6],[164,0,149,6],[164,12,149,10,"state"],[164,17,149,15],[164,20,149,18,"inputState"],[164,30,149,28],[164,34,149,32,"getInitialState"],[164,49,149,47],[164,51,149,6],[165,0,150,6],[165,12,150,10,"activeChildIndex"],[165,28,150,26],[165,31,150,29,"state"],[165,36,150,34],[165,37,150,35,"index"],[165,42,150,6],[167,0,152,6],[167,12,152,10,"action"],[167,18,152,16],[167,19,152,17,"type"],[167,23,152,10],[167,28,152,26,"NavigationActions"],[167,45,152,43],[167,46,152,44,"INIT"],[167,50,152,6],[167,52,152,50],[168,0,152,50],[168,14,158,10,"params"],[168,20,152,50],[168,23,159,12,"action"],[168,29,152,50],[168,30,158,10,"params"],[168,36,152,50],[170,0,161,8],[170,14,161,12,"params"],[170,20,161,8],[170,22,161,20],[171,0,162,10,"state"],[171,12,162,10,"state"],[171,17,162,15],[171,18,162,16,"routes"],[171,24,162,10],[171,27,162,25,"state"],[171,32,162,30],[171,33,162,31,"routes"],[171,39,162,25],[171,40,162,38,"map"],[171,43,162,25],[171,44,162,42],[171,54,162,42,"route"],[171,59,162,47],[172,0,162,47],[172,53,162,57,"route"],[172,58,162,47],[173,0,163,12,"params"],[173,16,163,12,"params"],[173,22,163,18],[173,70,163,25,"route"],[173,75,163,30],[173,76,163,31,"params"],[173,82,163,18],[173,85,164,17,"params"],[173,91,163,18],[173,94,165,18,"route"],[173,99,165,23],[173,100,165,24,"routeName"],[173,109,165,18],[173,114,165,38,"initialRouteName"],[173,130,165,18],[173,133,165,57,"initialRouteParams"],[173,151,165,18],[173,154,165,78],[173,158,163,18],[174,0,162,47],[175,0,162,47],[175,13,162,25],[175,14,162,10],[176,0,168,9],[177,0,169,7],[179,0,171,6],[179,12,171,10,"action"],[179,18,171,16],[179,19,171,17,"type"],[179,23,171,10],[179,28,171,26,"SwitchActions"],[179,41,171,39],[179,42,171,40,"JUMP_TO"],[179,49,171,10],[179,54,171,52,"action"],[179,60,171,58],[179,61,171,59,"key"],[179,64,171,52],[179,68,171,66],[179,72,171,52],[179,76,171,74,"action"],[179,82,171,80],[179,83,171,81,"key"],[179,86,171,74],[179,91,171,89,"state"],[179,96,171,94],[179,97,171,95,"key"],[179,100,171,10],[179,101,171,6],[179,103,171,101],[180,0,171,101],[180,14,173,10,"params"],[180,21,171,101],[180,24,174,12,"action"],[180,30,171,101],[180,31,173,10,"params"],[180,37,171,101],[181,0,175,8],[181,14,175,14,"index"],[181,19,175,19],[181,22,175,22,"state"],[181,27,175,27],[181,28,175,28,"routes"],[181,34,175,22],[181,35,175,35,"findIndex"],[181,44,175,22],[181,45,175,45],[181,55,175,45,"route"],[181,60,175,50],[182,0,175,50],[182,19,175,54,"route"],[182,24,175,59],[182,25,175,60,"routeName"],[182,34,175,54],[182,39,175,74,"action"],[182,45,175,80],[182,46,175,81,"routeName"],[182,55,175,50],[183,0,175,50],[183,11,175,22],[183,12,175,8],[185,0,177,8],[185,14,177,12,"index"],[185,19,177,17],[185,24,177,22],[185,25,177,23],[185,26,177,8],[185,28,177,26],[186,0,178,10],[186,18,178,16],[186,22,178,20,"Error"],[186,27,178,16],[186,28,178,26],[186,56,178,54,"concat"],[186,62,178,26],[186,63,178,61,"action"],[186,69,178,67],[186,70,178,68,"routeName"],[186,79,178,26],[186,81,178,79],[186,116,178,26],[186,118,178,116,"concat"],[186,124,178,26],[186,125,178,123,"action"],[186,131,178,129],[186,132,178,130,"key"],[186,135,178,26],[186,137,178,135],[186,143,178,26],[186,147,178,145],[186,166,178,164,"concat"],[186,172,178,145],[186,173,178,171,"state"],[186,178,178,176],[186,179,178,177,"routes"],[186,185,178,171],[186,186,178,184,"map"],[186,189,178,171],[186,190,178,188],[186,200,178,188,"route"],[186,205,178,193],[187,0,178,193],[187,21,178,197],[187,25,178,201,"concat"],[187,31,178,197],[187,32,178,208,"route"],[187,37,178,213],[187,38,178,214,"routeName"],[187,47,178,197],[187,49,178,225],[187,52,178,197],[187,53,178,193],[188,0,178,193],[188,13,178,171],[188,15,178,231,"join"],[188,19,178,171],[188,20,178,236],[188,23,178,171],[188,24,178,145],[188,25,178,16],[188,26,178,10],[189,0,179,9],[191,0,181,8],[191,17,181,15,"getNextState"],[191,29,181,27],[191,30,181,28,"action"],[191,36,181,27],[191,38,181,36,"prevState"],[191,47,181,27],[191,81,181,52,"state"],[191,86,181,27],[192,0,182,10,"routes"],[192,12,182,10,"routes"],[192,18,182,16],[192,20,182,18,"params"],[192,27,182,24],[192,30,182,27,"state"],[192,35,182,32],[192,36,182,33,"routes"],[192,42,182,27],[192,43,182,40,"map"],[192,46,182,27],[192,47,182,44],[192,57,182,45,"route"],[192,62,182,44],[192,64,182,52,"i"],[192,65,182,44],[193,0,182,44],[193,21,182,58,"i"],[193,22,182,59],[193,27,182,64,"index"],[193,32,182,58],[193,67,182,77,"route"],[193,72,182,58],[194,0,183,12,"params"],[194,16,183,12,"params"],[194,22,183,18],[194,56,183,25,"route"],[194,61,183,30],[194,62,183,31,"params"],[194,68,183,18],[194,71,184,17,"params"],[194,78,183,18],[195,0,182,58],[195,19,186,14,"route"],[195,24,182,44],[196,0,182,44],[196,13,182,27],[196,14,182,24],[196,17,186,23,"state"],[196,22,186,28],[196,23,186,29,"routes"],[196,29,181,27],[197,0,187,10,"index"],[197,12,187,10,"index"],[197,17,187,15],[197,19,187,10,"index"],[198,0,181,27],[198,13,181,8],[199,0,189,7],[201,0,192,6],[201,12,192,12,"activeChildLastState"],[201,32,192,32],[201,35,192,35,"state"],[201,40,192,40],[201,41,192,41,"routes"],[201,47,192,35],[201,48,192,48,"state"],[201,53,192,53],[201,54,192,54,"index"],[201,59,192,35],[201,60,192,6],[202,0,193,6],[202,12,193,12,"activeChildRouter"],[202,29,193,29],[202,32,193,32,"childRouters"],[202,44,193,44],[202,45,193,45,"order"],[202,50,193,50],[202,51,193,51,"state"],[202,56,193,56],[202,57,193,57,"index"],[202,62,193,50],[202,63,193,44],[202,64,193,6],[204,0,195,6],[204,12,195,10,"activeChildRouter"],[204,29,195,6],[204,31,195,29],[205,0,196,8],[205,14,196,14,"activeChildState"],[205,30,196,30],[205,33,196,33,"activeChildRouter"],[205,50,196,50],[205,51,196,51,"getStateForAction"],[205,68,196,33],[205,69,196,69,"action"],[205,75,196,33],[205,77,196,77,"activeChildLastState"],[205,97,196,33],[205,98,196,8],[207,0,198,8],[207,14,198,12],[207,15,198,13,"activeChildState"],[207,31,198,12],[207,35,198,33,"inputState"],[207,45,198,8],[207,47,198,45],[208,0,199,10],[208,19,199,17],[208,23,199,10],[209,0,200,9],[211,0,202,8],[211,14,202,12,"activeChildState"],[211,30,202,28],[211,34,202,32,"activeChildState"],[211,50,202,48],[211,55,202,53,"activeChildLastState"],[211,75,202,8],[211,77,202,75],[212,0,203,10],[212,16,203,16,"routes"],[212,22,203,22],[212,58,203,29,"state"],[212,63,203,34],[212,64,203,35,"routes"],[212,70,203,22],[212,71,203,10],[213,0,204,10,"routes"],[213,12,204,10,"routes"],[213,18,204,16],[213,19,204,17,"state"],[213,24,204,22],[213,25,204,23,"index"],[213,30,204,16],[213,31,204,10],[213,34,204,32,"activeChildState"],[213,50,204,10],[214,0,205,10],[214,19,205,17,"getNextState"],[214,31,205,29],[214,32,205,30,"action"],[214,38,205,29],[214,40,205,38,"prevState"],[214,49,205,29],[214,83,205,54,"state"],[214,88,205,29],[215,0,206,12,"routes"],[215,14,206,12,"routes"],[215,20,206,18],[215,22,206,12,"routes"],[216,0,205,29],[216,15,205,10],[217,0,208,9],[218,0,209,7],[220,0,213,6],[220,12,213,12,"isBackEligible"],[220,26,213,26],[220,29,213,29,"action"],[220,35,213,35],[220,36,213,36,"key"],[220,39,213,29],[220,43,213,43],[220,47,213,29],[220,51,213,51,"action"],[220,57,213,57],[220,58,213,58,"key"],[220,61,213,51],[220,66,213,66,"activeChildLastState"],[220,86,213,86],[220,87,213,87,"key"],[220,90,213,6],[222,0,215,6],[222,12,215,10,"action"],[222,18,215,16],[222,19,215,17,"type"],[222,23,215,10],[222,28,215,26,"NavigationActions"],[222,45,215,43],[222,46,215,44,"BACK"],[222,50,215,6],[222,52,215,50],[223,0,216,8],[223,14,216,12,"isBackEligible"],[223,28,216,26],[223,32,216,30,"backBehavior"],[223,44,216,42],[223,49,216,47],[223,63,216,8],[223,65,216,63],[224,0,217,10,"activeChildIndex"],[224,12,217,10,"activeChildIndex"],[224,28,217,26],[224,31,217,29,"initialRouteIndex"],[224,48,217,10],[225,0,218,9],[225,11,216,8],[225,17,218,15],[225,21,218,19,"isBackEligible"],[225,35,218,33],[225,39,218,37,"backBehavior"],[225,51,218,49],[225,56,218,54],[225,63,218,15],[225,65,218,63],[226,0,219,10,"activeChildIndex"],[226,12,219,10,"activeChildIndex"],[226,28,219,26],[226,31,219,29,"Math"],[226,35,219,33],[226,36,219,34,"max"],[226,39,219,29],[226,40,219,38],[226,41,219,29],[226,43,219,41,"activeChildIndex"],[226,59,219,57],[226,62,219,60],[226,63,219,29],[226,64,219,10],[227,0,220,9],[227,11,218,15],[227,17,222,13],[227,21,222,17,"isBackEligible"],[227,35,222,31],[227,39,222,35,"backBehavior"],[227,51,222,47],[227,56,222,52],[227,65,222,17],[227,69,222,65,"state"],[227,74,222,70],[227,75,222,71,"routeKeyHistory"],[227,90,222,65],[227,91,222,87,"length"],[227,97,222,65],[227,100,222,96],[227,101,222,13],[227,103,222,99],[228,0,223,12],[228,18,223,18,"routeKey"],[228,26,223,26],[228,29,223,29,"state"],[228,34,223,34],[228,35,223,35,"routeKeyHistory"],[228,50,223,29],[228,51,223,51,"state"],[228,56,223,56],[228,57,223,57,"routeKeyHistory"],[228,72,223,51],[228,73,223,73,"length"],[228,79,223,51],[228,82,223,82],[228,83,223,29],[228,84,223,12],[229,0,224,12,"activeChildIndex"],[229,14,224,12,"activeChildIndex"],[229,30,224,28],[229,33,224,31,"order"],[229,38,224,36],[229,39,224,37,"indexOf"],[229,46,224,31],[229,47,224,45,"routeKey"],[229,55,224,31],[229,56,224,12],[230,0,225,11],[231,0,226,7],[233,0,228,6],[233,12,228,10,"didNavigate"],[233,23,228,21],[233,26,228,24],[233,31,228,6],[235,0,230,6],[235,12,230,10,"action"],[235,18,230,16],[235,19,230,17,"type"],[235,23,230,10],[235,28,230,26,"NavigationActions"],[235,45,230,43],[235,46,230,44,"NAVIGATE"],[235,54,230,6],[235,56,230,54],[236,0,231,8,"didNavigate"],[236,10,231,8,"didNavigate"],[236,21,231,19],[236,24,231,22],[236,25,231,23],[236,26,231,24,"order"],[236,31,231,29],[236,32,231,30,"find"],[236,36,231,24],[236,37,231,35],[236,47,231,36,"childId"],[236,54,231,35],[236,56,231,45,"i"],[236,57,231,35],[236,59,231,51],[237,0,232,10],[237,16,232,14,"childId"],[237,23,232,21],[237,28,232,26,"action"],[237,34,232,32],[237,35,232,33,"routeName"],[237,44,232,10],[237,46,232,44],[238,0,233,12,"activeChildIndex"],[238,14,233,12,"activeChildIndex"],[238,30,233,28],[238,33,233,31,"i"],[238,34,233,12],[239,0,234,12],[239,21,234,19],[239,25,234,12],[240,0,235,11],[242,0,237,10],[242,19,237,17],[242,24,237,10],[243,0,238,9],[243,11,231,24],[243,12,231,8],[245,0,240,8],[245,14,240,12,"didNavigate"],[245,25,240,8],[245,27,240,25],[246,0,241,10],[246,16,241,16,"childState"],[246,26,241,26],[246,29,241,29,"state"],[246,34,241,34],[246,35,241,35,"routes"],[246,41,241,29],[246,42,241,42,"activeChildIndex"],[246,58,241,29],[246,59,241,10],[247,0,242,10],[247,16,242,16,"childRouter"],[247,27,242,27],[247,30,242,30,"childRouters"],[247,42,242,42],[247,43,242,43,"action"],[247,49,242,49],[247,50,242,50,"routeName"],[247,59,242,42],[247,60,242,10],[248,0,243,10],[248,16,243,14,"newChildState"],[248,29,243,27],[248,32,243,30,"childState"],[248,42,243,10],[250,0,245,10],[250,16,245,14,"action"],[250,22,245,20],[250,23,245,21,"action"],[250,29,245,14],[250,33,245,31,"childRouter"],[250,44,245,10],[250,46,245,44],[251,0,246,12],[251,18,246,18,"childStateUpdate"],[251,34,246,34],[251,37,246,37,"childRouter"],[251,48,246,48],[251,49,246,49,"getStateForAction"],[251,66,246,37],[251,67,246,67,"action"],[251,73,246,73],[251,74,246,74,"action"],[251,80,246,37],[251,82,246,82,"childState"],[251,92,246,37],[251,93,246,12],[253,0,248,12],[253,18,248,16,"childStateUpdate"],[253,34,248,12],[253,36,248,34],[254,0,249,14,"newChildState"],[254,16,249,14,"newChildState"],[254,29,249,27],[254,32,249,30,"childStateUpdate"],[254,48,249,14],[255,0,250,13],[256,0,251,11],[258,0,253,10],[258,16,253,14,"action"],[258,22,253,20],[258,23,253,21,"params"],[258,29,253,10],[258,31,253,29],[259,0,254,12,"newChildState"],[259,14,254,12,"newChildState"],[259,27,254,25],[259,62,254,33,"newChildState"],[259,75,254,25],[260,0,255,14,"params"],[260,16,255,14,"params"],[260,22,255,20],[260,56,255,28,"newChildState"],[260,69,255,41],[260,70,255,42,"params"],[260,76,255,28],[260,80,255,52],[260,82,255,20],[260,85,256,19,"action"],[260,91,256,25],[260,92,256,26,"params"],[260,98,255,20],[261,0,254,25],[261,16,254,12],[262,0,259,11],[264,0,261,10],[264,16,261,14,"newChildState"],[264,29,261,27],[264,34,261,32,"childState"],[264,44,261,10],[264,46,261,44],[265,0,262,12],[265,18,262,18,"routes"],[265,25,262,24],[265,61,262,31,"state"],[265,66,262,36],[265,67,262,37,"routes"],[265,73,262,24],[265,74,262,12],[267,0,263,12,"routes"],[267,14,263,12,"routes"],[267,21,263,18],[267,22,263,19,"activeChildIndex"],[267,38,263,18],[267,39,263,12],[267,42,263,39,"newChildState"],[267,55,263,12],[269,0,264,12],[269,18,264,18,"nextState"],[269,27,264,27],[269,62,264,35,"state"],[269,67,264,27],[270,0,265,14,"routes"],[270,16,265,14,"routes"],[270,22,265,20],[270,24,265,14,"routes"],[270,31,264,27],[271,0,266,14,"index"],[271,16,266,14,"index"],[271,21,266,19],[271,23,266,21,"activeChildIndex"],[272,0,264,27],[272,16,264,12],[274,0,268,12],[274,21,268,19,"getNextState"],[274,33,268,31],[274,34,268,32,"action"],[274,40,268,31],[274,42,268,40,"prevState"],[274,51,268,31],[274,53,268,51,"nextState"],[274,62,268,31],[274,63,268,12],[275,0,269,11],[275,13,261,10],[275,19,269,17],[275,23,269,21,"newChildState"],[275,36,269,34],[275,41,269,39,"childState"],[275,51,269,21],[275,55,269,53,"state"],[275,60,269,58],[275,61,269,59,"index"],[275,66,269,53],[275,71,269,69,"activeChildIndex"],[275,87,269,21],[275,91,269,89,"prevState"],[275,100,269,17],[275,102,269,100],[276,0,270,12],[276,21,270,19],[276,25,270,12],[277,0,271,11],[278,0,272,9],[279,0,273,7],[281,0,275,6],[281,12,275,10,"action"],[281,18,275,16],[281,19,275,17,"type"],[281,23,275,10],[281,28,275,26,"NavigationActions"],[281,45,275,43],[281,46,275,44,"SET_PARAMS"],[281,56,275,6],[281,58,275,56],[282,0,276,8],[282,14,276,14,"key"],[282,17,276,17],[282,20,276,20,"action"],[282,26,276,26],[282,27,276,27,"key"],[282,30,276,8],[283,0,277,8],[283,14,277,14,"lastRoute"],[283,23,277,23],[283,26,277,26,"state"],[283,31,277,31],[283,32,277,32,"routes"],[283,38,277,26],[283,39,277,39,"find"],[283,43,277,26],[283,44,277,44],[283,54,277,44,"route"],[283,59,277,49],[284,0,277,49],[284,19,277,53,"route"],[284,24,277,58],[284,25,277,59,"key"],[284,28,277,53],[284,33,277,67,"key"],[284,36,277,49],[285,0,277,49],[285,11,277,26],[285,12,277,8],[287,0,279,8],[287,14,279,12,"lastRoute"],[287,23,279,8],[287,25,279,23],[288,0,280,10],[288,16,280,16,"params"],[288,24,280,22],[288,59,280,30,"lastRoute"],[288,68,280,39],[288,69,280,40,"params"],[288,75,280,22],[288,78,281,15,"action"],[288,84,281,21],[288,85,281,22,"params"],[288,91,280,22],[288,92,280,10],[290,0,283,10],[290,16,283,16,"routes"],[290,24,283,22],[290,60,283,29,"state"],[290,65,283,34],[290,66,283,35,"routes"],[290,72,283,22],[290,73,283,10],[292,0,284,10,"routes"],[292,12,284,10,"routes"],[292,20,284,16],[292,21,284,17,"state"],[292,26,284,22],[292,27,284,23,"routes"],[292,33,284,17],[292,34,284,30,"indexOf"],[292,41,284,17],[292,42,284,38,"lastRoute"],[292,51,284,17],[292,52,284,16],[292,53,284,10],[292,88,284,57,"lastRoute"],[292,97,284,10],[293,0,285,12,"params"],[293,14,285,12,"params"],[293,20,285,18],[293,22,285,12,"params"],[294,0,284,10],[295,0,287,10],[295,19,287,17,"getNextState"],[295,31,287,29],[295,32,287,30,"action"],[295,38,287,29],[295,40,287,38,"prevState"],[295,49,287,29],[295,83,287,54,"state"],[295,88,287,29],[296,0,288,12,"routes"],[296,14,288,12,"routes"],[296,20,288,18],[296,22,288,12,"routes"],[297,0,287,29],[297,15,287,10],[298,0,290,9],[299,0,291,7],[301,0,293,6],[301,12,293,10,"activeChildIndex"],[301,28,293,26],[301,33,293,31,"state"],[301,38,293,36],[301,39,293,37,"index"],[301,44,293,6],[301,46,293,44],[302,0,294,8],[302,17,294,15,"getNextState"],[302,29,294,27],[302,30,294,28,"action"],[302,36,294,27],[302,38,294,36,"prevState"],[302,47,294,27],[302,81,294,52,"state"],[302,86,294,27],[303,0,295,10,"index"],[303,12,295,10,"index"],[303,17,295,15],[303,19,295,17,"activeChildIndex"],[304,0,294,27],[304,13,294,8],[305,0,297,7],[305,9,293,6],[305,15,297,13],[305,19,297,17,"didNavigate"],[305,30,297,28],[305,34,297,32],[305,35,297,33,"inputState"],[305,45,297,13],[305,47,297,45],[306,0,298,8],[306,17,298,15,"state"],[306,22,298,8],[307,0,299,7],[307,9,297,13],[307,15,299,13],[307,19,299,17,"didNavigate"],[307,30,299,13],[307,32,299,30],[308,0,300,8],[308,35,300,20,"state"],[308,40,300,8],[309,0,302,7],[311,0,304,6],[311,12,304,12,"isActionBackOrPop"],[311,29,304,29],[311,32,304,32,"action"],[311,38,304,38],[311,39,304,39,"type"],[311,43,304,32],[311,48,304,48,"NavigationActions"],[311,65,304,65],[311,66,304,66,"BACK"],[311,70,304,32],[311,74,304,74,"action"],[311,80,304,80],[311,81,304,81,"type"],[311,85,304,74],[311,90,304,90,"StackActions"],[311,102,304,102],[311,103,304,103,"POP"],[311,106,304,32],[311,110,304,110,"action"],[311,116,304,116],[311,117,304,117,"type"],[311,121,304,110],[311,126,304,126,"StackActions"],[311,138,304,138],[311,139,304,139,"POP_TO_TOP"],[311,149,304,6],[312,0,305,6],[312,12,305,12,"sendActionToInactiveChildren"],[312,40,305,40],[312,43,305,43],[312,44,305,44,"isActionBackOrPop"],[312,61,305,43],[312,65,305,65,"action"],[312,71,305,71],[312,72,305,72,"type"],[312,76,305,65],[312,81,305,81,"NavigationActions"],[312,98,305,98],[312,99,305,99,"BACK"],[312,103,305,65],[312,107,305,107,"action"],[312,113,305,113],[312,114,305,114,"key"],[312,117,305,107],[312,121,305,121],[312,125,305,6],[314,0,309,6],[314,12,309,10,"sendActionToInactiveChildren"],[314,40,309,6],[314,42,309,40],[315,0,310,8],[315,14,310,12,"index"],[315,20,310,17],[315,23,310,20,"state"],[315,28,310,25],[315,29,310,26,"index"],[315,34,310,8],[316,0,311,8],[316,14,311,12,"routes"],[316,22,311,18],[316,25,311,21,"state"],[316,30,311,26],[316,31,311,27,"routes"],[316,37,311,8],[317,0,312,8,"order"],[317,10,312,8,"order"],[317,15,312,13],[317,16,312,14,"find"],[317,20,312,8],[317,21,312,19],[317,31,312,20,"childId"],[317,38,312,19],[317,40,312,29,"i"],[317,41,312,19],[317,43,312,35],[318,0,313,10],[318,16,313,16,"childRouter"],[318,27,313,27],[318,30,313,30,"childRouters"],[318,42,313,42],[318,43,313,43,"childId"],[318,50,313,42],[318,51,313,10],[320,0,315,10],[320,16,315,14,"i"],[320,17,315,15],[320,22,315,20,"index"],[320,28,315,10],[320,30,315,27],[321,0,316,12],[321,21,316,19],[321,26,316,12],[322,0,317,11],[324,0,319,10],[324,16,319,14,"childState"],[324,26,319,24],[324,29,319,27,"routes"],[324,37,319,33],[324,38,319,34,"i"],[324,39,319,33],[324,40,319,10],[326,0,321,10],[326,16,321,14,"childRouter"],[326,27,321,10],[326,29,321,27],[327,0,322,12,"childState"],[327,14,322,12,"childState"],[327,24,322,22],[327,27,322,25,"childRouter"],[327,38,322,36],[327,39,322,37,"getStateForAction"],[327,56,322,25],[327,57,322,55,"action"],[327,63,322,25],[327,65,322,63,"childState"],[327,75,322,25],[327,76,322,12],[328,0,323,11],[330,0,325,10],[330,16,325,14],[330,17,325,15,"childState"],[330,27,325,10],[330,29,325,27],[331,0,326,12,"index"],[331,14,326,12,"index"],[331,20,326,17],[331,23,326,20,"i"],[331,24,326,12],[332,0,327,12],[332,21,327,19],[332,25,327,12],[333,0,328,11],[335,0,330,10],[335,16,330,14,"childState"],[335,26,330,24],[335,31,330,29,"routes"],[335,39,330,35],[335,40,330,36,"i"],[335,41,330,35],[335,42,330,10],[335,44,330,40],[336,0,331,12,"routes"],[336,14,331,12,"routes"],[336,22,331,18],[336,58,331,25,"routes"],[336,66,331,18],[336,67,331,12],[337,0,332,12,"routes"],[337,14,332,12,"routes"],[337,22,332,18],[337,23,332,19,"i"],[337,24,332,18],[337,25,332,12],[337,28,332,24,"childState"],[337,38,332,12],[338,0,333,12,"index"],[338,14,333,12,"index"],[338,20,333,17],[338,23,333,20,"i"],[338,24,333,12],[339,0,334,12],[339,21,334,19],[339,25,334,12],[340,0,335,11],[342,0,337,10],[342,19,337,17],[342,24,337,10],[343,0,338,9],[343,11,312,8],[345,0,341,8],[345,14,341,12,"action"],[345,20,341,18],[345,21,341,19,"preserveFocus"],[345,34,341,8],[345,36,341,34],[346,0,342,10,"index"],[346,12,342,10,"index"],[346,18,342,15],[346,21,342,18,"state"],[346,26,342,23],[346,27,342,24,"index"],[346,32,342,10],[347,0,343,9],[349,0,345,8],[349,14,345,12,"index"],[349,20,345,17],[349,25,345,22,"state"],[349,30,345,27],[349,31,345,28,"index"],[349,36,345,12],[349,40,345,37,"routes"],[349,48,345,43],[349,53,345,48,"state"],[349,58,345,53],[349,59,345,54,"routes"],[349,65,345,8],[349,67,345,62],[350,0,346,10],[350,19,346,17,"getNextState"],[350,31,346,29],[350,32,346,30,"action"],[350,38,346,29],[350,40,346,38,"prevState"],[350,49,346,29],[350,83,346,54,"state"],[350,88,346,29],[351,0,347,12,"index"],[351,14,347,12,"index"],[351,19,347,17],[351,21,347,12,"index"],[351,27,346,29],[352,0,348,12,"routes"],[352,14,348,12,"routes"],[352,20,348,18],[352,22,348,12,"routes"],[353,0,346,29],[353,15,346,10],[354,0,350,9],[355,0,351,7],[357,0,353,6],[357,15,353,13,"state"],[357,20,353,6],[358,0,354,5],[358,7,139,9],[359,0,356,4,"getComponentForState"],[359,6,356,4,"getComponentForState"],[359,26,139,9],[359,58,356,25,"state"],[359,63,139,9],[359,65,356,32],[360,0,357,6],[360,12,357,12,"routeName"],[360,21,357,21],[360,24,357,24,"state"],[360,29,357,29],[360,30,357,30,"routes"],[360,36,357,24],[360,37,357,37,"state"],[360,42,357,42],[360,43,357,43,"index"],[360,48,357,24],[360,50,357,50,"routeName"],[360,59,357,6],[361,0,358,6],[361,32,358,16,"routeName"],[361,41,358,6],[361,43,358,27],[361,82,358,66,"concat"],[361,88,358,27],[361,89,358,73,"state"],[361,94,358,78],[361,95,358,79,"index"],[361,100,358,27],[361,102,358,86],[361,194,358,27],[361,195,358,6],[362,0,359,6],[362,12,359,12,"childRouter"],[362,23,359,23],[362,26,359,26,"childRouters"],[362,38,359,38],[362,39,359,39,"routeName"],[362,48,359,38],[362,49,359,6],[364,0,361,6],[364,12,361,10,"childRouter"],[364,23,361,6],[364,25,361,23],[365,0,362,8],[365,17,362,15,"childRouter"],[365,28,362,26],[365,29,362,27,"getComponentForState"],[365,49,362,15],[365,50,362,48,"state"],[365,55,362,53],[365,56,362,54,"routes"],[365,62,362,48],[365,63,362,61,"state"],[365,68,362,66],[365,69,362,67,"index"],[365,74,362,48],[365,75,362,15],[365,76,362,8],[366,0,363,7],[368,0,365,6],[368,15,365,13],[368,51,365,35,"routeConfigs"],[368,63,365,13],[368,65,365,49,"routeName"],[368,74,365,13],[368,75,365,6],[369,0,366,5],[369,7,139,9],[370,0,368,4,"getComponentForRouteName"],[370,6,368,4,"getComponentForRouteName"],[370,30,139,9],[370,66,368,29,"routeName"],[370,75,139,9],[370,77,368,40],[371,0,369,6],[371,15,369,13],[371,51,369,35,"routeConfigs"],[371,63,369,13],[371,65,369,49,"routeName"],[371,74,369,13],[371,75,369,6],[372,0,370,5],[372,7,139,9],[373,0,372,4,"getPathAndParamsForState"],[373,6,372,4,"getPathAndParamsForState"],[373,30,139,9],[373,66,372,29,"state"],[373,71,139,9],[373,73,372,36],[374,0,373,6],[374,12,373,12,"route"],[374,17,373,17],[374,20,373,20,"state"],[374,25,373,25],[374,26,373,26,"routes"],[374,32,373,20],[374,33,373,33,"state"],[374,38,373,38],[374,39,373,39,"index"],[374,44,373,20],[374,45,373,6],[375,0,374,6],[375,15,374,13,"getPathAndParamsForRoute"],[375,39,374,37],[375,40,374,38,"route"],[375,45,374,37],[375,46,374,6],[376,0,375,5],[376,7,139,9],[377,0,377,4,"getActionForPathAndParams"],[377,6,377,4,"getActionForPathAndParams"],[377,31,139,9],[377,68,377,30,"path"],[377,72,139,9],[377,74,377,36,"params"],[377,80,139,9],[377,82,377,44],[378,0,378,6],[378,15,378,13,"getActionForPathAndParams"],[378,41,378,38],[378,42,378,39,"path"],[378,46,378,38],[378,48,378,45,"params"],[378,54,378,38],[378,55,378,6],[379,0,379,5],[379,7,139,9],[380,0,381,4,"getScreenOptions"],[380,6,381,4,"getScreenOptions"],[380,22,381,20],[380,24,381,22],[380,57,381,41,"routeConfigs"],[380,69,381,22],[380,71,381,55,"config"],[380,77,381,61],[380,78,381,62,"defaultNavigationOptions"],[380,102,381,22],[381,0,139,9],[381,5,139,2],[382,0,383,1],[382,3]],"functionMap":{"names":["<global>","defaultActionCreators","<anonymous>","order.map$argument_0","order.forEach$argument_0","getParamsForRoute","resetChildRoute","getNextState","updateNextStateHistory","nextRouteKeyHistory.filter$argument_0","getInitialState","getActionCreators","getStateForAction","state.routes.map$argument_0","state.routes.findIndex$argument_0","order.find$argument_0","state.routes.find$argument_0","getComponentForState","getComponentForRouteName","getPathAndParamsForState","getActionForPathAndParams"],"mappings":"AAA;8BCS,UD;gBEE;uHCc,yBD;gBEI;GFO;EGE;GHU;EIO;GJ0B;EKE;ICC;yDCW,mBD;KDY;GLc;EQE;GRa;ISK;KTE;IUE;0CCgB;YDK;6CEQ,6CF;4LCG,yCD;4CCI;mBDI;mCG6C;SHO;4CIuC,0BJ;mBGmC;SH0B;KVgB;IeE;KfU;IgBE;KhBE;IiBE;KjBG;IkBE;KlBE;CFI"}},"type":"js/module"}]}