{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"big.js","data":{"isAsync":false}},{"name":"../nativefiledocumentsutils","data":{"isAsync":false}},{"name":"react-native-fs","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.exists = exists;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _big = _$$_REQUIRE(_dependencyMap[2], \"big.js\");\n\n  var _nativefiledocumentsutils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../nativefiledocumentsutils\"));\n\n  var _reactNativeFs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"react-native-fs\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  function exists(filepath, pathType, writeToLog) {\n    var fullPath;\n    return _regenerator.default.async(function exists$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!filepath) {\n              Promise.reject(\"No file path specified\");\n            }\n\n            if (!pathType) {\n              Promise.reject(\"No path type specified\");\n            }\n\n            if (writeToLog) {\n              _nativefiledocumentsutils.default.writeToLog({\n                actionName: \"exists\",\n                logType: \"Parameters\",\n                logMessage: JSON.stringify({\n                  filepath: filepath,\n                  pathType: pathType\n                })\n              });\n            }\n\n            fullPath = _nativefiledocumentsutils.default.getFullPath(filepath, pathType, _reactNativeFs.default, _reactNative.Platform.OS);\n\n            if (writeToLog) {\n              _nativefiledocumentsutils.default.writeToLog({\n                actionName: \"exists\",\n                logType: \"Info\",\n                logMessage: \"Full path: \" + fullPath\n              });\n            }\n\n            return _context.abrupt(\"return\", _reactNativeFs.default.exists(fullPath));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});","lineCount":63,"map":[[11,0,8,0],[13,0,12,0],[15,0,13,0],[17,0,14,0],[19,0,25,7],[19,11,25,22,"exists"],[19,17,25,7],[19,18,25,29,"filepath"],[19,26,25,7],[19,28,25,39,"pathType"],[19,36,25,7],[19,38,25,49,"writeToLog"],[19,48,25,7],[20,0,25,7],[21,0,25,7],[22,0,25,7],[23,0,25,7],[24,0,25,7],[25,0,28,1],[25,16,28,5],[25,17,28,6,"filepath"],[25,25,28,1],[25,27,28,16],[26,0,29,2,"Promise"],[26,14,29,2,"Promise"],[26,21,29,9],[26,22,29,10,"reject"],[26,28,29,2],[26,29,29,17],[26,53,29,2],[27,0,30,2],[29,0,31,1],[29,16,31,5],[29,17,31,6,"pathType"],[29,25,31,1],[29,27,31,16],[30,0,32,2,"Promise"],[30,14,32,2,"Promise"],[30,21,32,9],[30,22,32,10,"reject"],[30,28,32,2],[30,29,32,17],[30,53,32,2],[31,0,33,2],[33,0,34,1],[33,16,34,5,"writeToLog"],[33,26,34,1],[33,28,34,17],[34,0,35,2,"NativeFileDocumentsUtils"],[34,48,35,27,"writeToLog"],[34,58,35,2],[34,59,35,38],[35,0,36,3,"actionName"],[35,16,36,3,"actionName"],[35,26,36,13],[35,28,36,15],[35,36,35,38],[36,0,37,3,"logType"],[36,16,37,3,"logType"],[36,23,37,10],[36,25,37,12],[36,37,35,38],[37,0,38,3,"logMessage"],[37,16,38,3,"logMessage"],[37,26,38,13],[37,28,38,15,"JSON"],[37,32,38,19],[37,33,38,20,"stringify"],[37,42,38,15],[37,43,38,30],[38,0,39,4,"filepath"],[38,18,39,4,"filepath"],[38,26,39,12],[38,28,39,14,"filepath"],[38,36,38,30],[39,0,40,4,"pathType"],[39,18,40,4,"pathType"],[39,26,40,12],[39,28,40,14,"pathType"],[40,0,38,30],[40,17,38,15],[41,0,35,38],[41,15,35,2],[42,0,43,2],[44,0,45,7,"fullPath"],[44,12,45,7,"fullPath"],[44,20,25,7],[44,23,45,18,"NativeFileDocumentsUtils"],[44,57,45,43,"getFullPath"],[44,68,45,18],[44,69,45,55,"filepath"],[44,77,45,18],[44,79,45,65,"pathType"],[44,87,45,18],[44,89,45,75,"RNFS"],[44,111,45,18],[44,113,45,81,"Platform"],[44,135,45,90,"OS"],[44,137,45,18],[44,138,25,7],[46,0,47,1],[46,16,47,5,"writeToLog"],[46,26,47,1],[46,28,47,17],[47,0,48,2,"NativeFileDocumentsUtils"],[47,48,48,27,"writeToLog"],[47,58,48,2],[47,59,48,38],[48,0,49,3,"actionName"],[48,16,49,3,"actionName"],[48,26,49,13],[48,28,49,15],[48,36,48,38],[49,0,50,3,"logType"],[49,16,50,3,"logType"],[49,23,50,10],[49,25,50,12],[49,31,48,38],[50,0,51,3,"logMessage"],[50,16,51,3,"logMessage"],[50,26,51,13],[50,28,51,15],[50,44,51,31,"fullPath"],[51,0,48,38],[51,15,48,2],[52,0,53,2],[54,0,25,7],[54,45,55,8,"RNFS"],[54,68,55,13,"exists"],[54,74,55,8],[54,75,55,20,"fullPath"],[54,83,55,8],[54,84,25,7],[56,0,25,7],[57,0,25,7],[58,0,25,7],[59,0,25,7],[60,0,25,7],[61,0,25,7],[62,0,25,7]],"functionMap":{"names":["<global>","exists"],"mappings":"AAA;OCwB;CDiC"}},"type":"js/module"}]}