{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"big.js","data":{"isAsync":false}},{"name":"../nativefiledocumentsutils","data":{"isAsync":false}},{"name":"react-native-fs","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.saveToMendixFileDocument = saveToMendixFileDocument;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _big = _$$_REQUIRE(_dependencyMap[2], \"big.js\");\n\n  var _nativefiledocumentsutils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../nativefiledocumentsutils\"));\n\n  var _reactNativeFs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"react-native-fs\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[5], \"react-native\");\n\n  function saveToMendixFileDocument(filepath, pathType, fileDocument, fileName, writeToLog) {\n    var entity, guid, fullPath;\n    return _regenerator.default.async(function saveToMendixFileDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!filepath) {\n              Promise.reject(\"No file path specified\");\n            }\n\n            if (!pathType) {\n              Promise.reject(\"No path type specified\");\n            }\n\n            if (!fileDocument) {\n              Promise.reject(\"No file document specified\");\n            }\n\n            if (!fileDocument.inheritsFrom(\"System.FileDocument\")) {\n              entity = picfileDocumentture.getEntity();\n              Promise.reject(new Error(\"Entity \" + entity + \" does not inherit from System.FileDocument\"));\n            }\n\n            if (!fileName) {\n              Promise.reject(\"No file name specified\");\n            }\n\n            guid = fileDocument.getGuid();\n\n            if (writeToLog) {\n              _nativefiledocumentsutils.default.writeToLog({\n                actionName: \"saveToMendixFileDocument\",\n                logType: \"Parameters\",\n                logMessage: JSON.stringify({\n                  filepath: filepath,\n                  pathType: pathType,\n                  guid: guid\n                })\n              });\n            }\n\n            fullPath = _nativefiledocumentsutils.default.getFullPath(filepath, pathType, _reactNativeFs.default, _reactNative.Platform.OS);\n\n            if (writeToLog) {\n              _nativefiledocumentsutils.default.writeToLog({\n                actionName: \"saveToMendixFileDocument\",\n                logType: \"Info\",\n                logMessage: \"Full path: \" + fullPath\n              });\n            }\n\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              fetch(fullPath).then(function (res) {\n                return res.blob();\n              }).then(function (blob) {\n                var onSuccess = function onSuccess() {\n                  return resolve(true);\n                };\n\n                var onError = function onError(error) {\n                  _nativefiledocumentsutils.default.writeToLog({\n                    actionName: \"saveToMendixFileDocument\",\n                    logType: \"Exception\",\n                    logMessage: JSON.stringify(error)\n                  });\n\n                  reject(error);\n                };\n\n                mx.data.saveDocument(guid, fileName, {}, blob, onSuccess, onError);\n              });\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});","lineCount":99,"map":[[11,0,8,0],[13,0,12,0],[15,0,13,0],[17,0,14,0],[19,0,29,7],[19,11,29,22,"saveToMendixFileDocument"],[19,35,29,7],[19,36,29,47,"filepath"],[19,44,29,7],[19,46,29,57,"pathType"],[19,54,29,7],[19,56,29,67,"fileDocument"],[19,68,29,7],[19,70,29,81,"fileName"],[19,78,29,7],[19,80,29,91,"writeToLog"],[19,90,29,7],[20,0,29,7],[21,0,29,7],[22,0,29,7],[23,0,29,7],[24,0,29,7],[25,0,32,1],[25,16,32,5],[25,17,32,6,"filepath"],[25,25,32,1],[25,27,32,16],[26,0,33,2,"Promise"],[26,14,33,2,"Promise"],[26,21,33,9],[26,22,33,10,"reject"],[26,28,33,2],[26,29,33,17],[26,53,33,2],[27,0,34,2],[29,0,35,1],[29,16,35,5],[29,17,35,6,"pathType"],[29,25,35,1],[29,27,35,16],[30,0,36,2,"Promise"],[30,14,36,2,"Promise"],[30,21,36,9],[30,22,36,10,"reject"],[30,28,36,2],[30,29,36,17],[30,53,36,2],[31,0,37,2],[33,0,38,1],[33,16,38,5],[33,17,38,6,"fileDocument"],[33,29,38,1],[33,31,38,20],[34,0,39,2,"Promise"],[34,14,39,2,"Promise"],[34,21,39,9],[34,22,39,10,"reject"],[34,28,39,2],[34,29,39,17],[34,57,39,2],[35,0,40,2],[37,0,41,4],[37,16,41,8],[37,17,41,9,"fileDocument"],[37,29,41,21],[37,30,41,22,"inheritsFrom"],[37,42,41,9],[37,43,41,35],[37,64,41,9],[37,65,41,4],[37,67,41,59],[38,0,42,14,"entity"],[38,14,42,14,"entity"],[38,20,41,59],[38,23,42,23,"picfileDocumentture"],[38,42,42,42],[38,43,42,43,"getEntity"],[38,52,42,23],[38,54,41,59],[39,0,43,8,"Promise"],[39,14,43,8,"Promise"],[39,21,43,15],[39,22,43,16,"reject"],[39,28,43,8],[39,29,43,23],[39,33,43,27,"Error"],[39,38,43,23],[39,39,43,33],[39,51,43,45,"entity"],[39,57,43,33],[39,60,43,54],[39,104,43,23],[39,105,43,8],[40,0,44,5],[42,0,45,1],[42,16,45,5],[42,17,45,6,"fileName"],[42,25,45,1],[42,27,45,16],[43,0,46,2,"Promise"],[43,14,46,2,"Promise"],[43,21,46,9],[43,22,46,10,"reject"],[43,28,46,2],[43,29,46,17],[43,53,46,2],[44,0,47,2],[46,0,48,7,"guid"],[46,12,48,7,"guid"],[46,16,29,7],[46,19,48,14,"fileDocument"],[46,31,48,26],[46,32,48,27,"getGuid"],[46,39,48,14],[46,41,29,7],[48,0,49,1],[48,16,49,5,"writeToLog"],[48,26,49,1],[48,28,49,17],[49,0,50,2,"NativeFileDocumentsUtils"],[49,48,50,27,"writeToLog"],[49,58,50,2],[49,59,50,38],[50,0,51,3,"actionName"],[50,16,51,3,"actionName"],[50,26,51,13],[50,28,51,15],[50,54,50,38],[51,0,52,3,"logType"],[51,16,52,3,"logType"],[51,23,52,10],[51,25,52,12],[51,37,50,38],[52,0,53,3,"logMessage"],[52,16,53,3,"logMessage"],[52,26,53,13],[52,28,53,15,"JSON"],[52,32,53,19],[52,33,53,20,"stringify"],[52,42,53,15],[52,43,53,30],[53,0,54,4,"filepath"],[53,18,54,4,"filepath"],[53,26,54,12],[53,28,54,14,"filepath"],[53,36,53,30],[54,0,55,4,"pathType"],[54,18,55,4,"pathType"],[54,26,55,12],[54,28,55,14,"pathType"],[54,36,53,30],[55,0,56,4,"guid"],[55,18,56,4,"guid"],[55,22,56,8],[55,24,56,10,"guid"],[56,0,53,30],[56,17,53,15],[57,0,50,38],[57,15,50,2],[58,0,59,2],[60,0,61,7,"fullPath"],[60,12,61,7,"fullPath"],[60,20,29,7],[60,23,61,18,"NativeFileDocumentsUtils"],[60,57,61,43,"getFullPath"],[60,68,61,18],[60,69,61,55,"filepath"],[60,77,61,18],[60,79,61,65,"pathType"],[60,87,61,18],[60,89,61,75,"RNFS"],[60,111,61,18],[60,113,61,81,"Platform"],[60,135,61,90,"OS"],[60,137,61,18],[60,138,29,7],[62,0,63,1],[62,16,63,5,"writeToLog"],[62,26,63,1],[62,28,63,17],[63,0,64,2,"NativeFileDocumentsUtils"],[63,48,64,27,"writeToLog"],[63,58,64,2],[63,59,64,38],[64,0,65,3,"actionName"],[64,16,65,3,"actionName"],[64,26,65,13],[64,28,65,15],[64,54,64,38],[65,0,66,3,"logType"],[65,16,66,3,"logType"],[65,23,66,10],[65,25,66,12],[65,31,64,38],[66,0,67,3,"logMessage"],[66,16,67,3,"logMessage"],[66,26,67,13],[66,28,67,15],[66,44,67,31,"fullPath"],[67,0,64,38],[67,15,64,2],[68,0,69,2],[70,0,29,7],[70,45,71,8],[70,49,71,12,"Promise"],[70,56,71,8],[70,57,71,20],[70,67,71,21,"resolve"],[70,74,71,20],[70,76,71,30,"reject"],[70,82,71,20],[70,84,71,41],[71,0,72,2,"fetch"],[71,14,72,2,"fetch"],[71,19,72,7],[71,20,72,8,"fullPath"],[71,28,72,7],[71,29,72,2],[71,30,73,4,"then"],[71,34,72,2],[71,35,73,9],[71,45,73,9,"res"],[71,48,73,12],[72,0,73,12],[72,23,73,16,"res"],[72,26,73,19],[72,27,73,20,"blob"],[72,31,73,16],[72,33,73,12],[73,0,73,12],[73,15,72,2],[73,17,74,4,"then"],[73,21,72,2],[73,22,74,9],[73,32,74,9,"blob"],[73,36,74,13],[73,38,74,17],[74,0,75,3],[74,20,75,9,"onSuccess"],[74,29,75,18],[74,32,75,21],[74,41,75,9,"onSuccess"],[74,50,75,21],[75,0,75,21],[75,25,75,27,"resolve"],[75,32,75,34],[75,33,75,35],[75,37,75,34],[75,38,75,21],[76,0,75,21],[76,17,75,3],[78,0,76,3],[78,20,76,9,"onError"],[78,27,76,16],[78,30,76,19],[78,39,76,9,"onError"],[78,46,76,19],[78,47,76,20,"error"],[78,52,76,19],[78,54,76,30],[79,0,78,4,"NativeFileDocumentsUtils"],[79,52,78,29,"writeToLog"],[79,62,78,4],[79,63,78,40],[80,0,79,5,"actionName"],[80,20,79,5,"actionName"],[80,30,79,15],[80,32,79,17],[80,58,78,40],[81,0,80,5,"logType"],[81,20,80,5,"logType"],[81,27,80,12],[81,29,80,14],[81,40,78,40],[82,0,81,5,"logMessage"],[82,20,81,5,"logMessage"],[82,30,81,15],[82,32,81,17,"JSON"],[82,36,81,21],[82,37,81,22,"stringify"],[82,46,81,17],[82,47,81,32,"error"],[82,52,81,17],[83,0,78,40],[83,19,78,4],[85,0,83,4,"reject"],[85,18,83,4,"reject"],[85,24,83,10],[85,25,83,11,"error"],[85,30,83,10],[85,31,83,4],[86,0,84,4],[86,17,76,3],[88,0,85,3,"mx"],[88,16,85,3,"mx"],[88,18,85,5],[88,19,85,6,"data"],[88,23,85,3],[88,24,85,11,"saveDocument"],[88,36,85,3],[88,37,85,24,"guid"],[88,41,85,3],[88,43,85,30,"fileName"],[88,51,85,3],[88,53,85,40],[88,55,85,3],[88,57,85,44,"blob"],[88,61,85,3],[88,63,85,50,"onSuccess"],[88,72,85,3],[88,74,85,61,"onError"],[88,81,85,3],[89,0,86,3],[89,15,72,2],[90,0,87,2],[90,13,71,8],[90,14,29,7],[92,0,29,7],[93,0,29,7],[94,0,29,7],[95,0,29,7],[96,0,29,7],[97,0,29,7],[98,0,29,7]],"functionMap":{"names":["<global>","saveToMendixFileDocument","Promise$argument_0","fetch.then$argument_0","fetch.then.then$argument_0","onSuccess","onError"],"mappings":"AAA;OC4B;oBC0C;SCE,iBD;SEC;qBCC,mBD;mBEC;IFQ;GFE;EDC;CDG"}},"type":"js/module"}]}