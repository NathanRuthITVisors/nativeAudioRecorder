{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"../DeprecatedPropTypes/DeprecatedTextPropTypes","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../Components/View/ReactNativeViewAttributes","data":{"isAsync":false}},{"name":"./TextAncestor","data":{"isAsync":false}},{"name":"../Components/Touchable/Touchable","data":{"isAsync":false}},{"name":"../ReactNative/UIManager","data":{"isAsync":false}},{"name":"../Renderer/shims/createReactNativeComponentClass","data":{"isAsync":false}},{"name":"nullthrows","data":{"isAsync":false}},{"name":"../StyleSheet/processColor","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _extends = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var _assertThisInitialized = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/assertThisInitialized\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\");\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var DeprecatedTextPropTypes = _$$_REQUIRE(_dependencyMap[8], \"../DeprecatedPropTypes/DeprecatedTextPropTypes\");\n\n  var React = _$$_REQUIRE(_dependencyMap[9], \"react\");\n\n  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[10], \"../Components/View/ReactNativeViewAttributes\");\n\n  var TextAncestor = _$$_REQUIRE(_dependencyMap[11], \"./TextAncestor\");\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[12], \"../Components/Touchable/Touchable\");\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[13], \"../ReactNative/UIManager\");\n\n  var createReactNativeComponentClass = _$$_REQUIRE(_dependencyMap[14], \"../Renderer/shims/createReactNativeComponentClass\");\n\n  var nullthrows = _$$_REQUIRE(_dependencyMap[15], \"nullthrows\");\n\n  var processColor = _$$_REQUIRE(_dependencyMap[16], \"../StyleSheet/processColor\");\n\n  var PRESS_RECT_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var viewConfig = {\n    validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewAttributes.UIView), {}, {\n      isHighlighted: true,\n      numberOfLines: true,\n      ellipsizeMode: true,\n      allowFontScaling: true,\n      maxFontSizeMultiplier: true,\n      disabled: true,\n      selectable: true,\n      selectionColor: true,\n      adjustsFontSizeToFit: true,\n      minimumFontScale: true,\n      textBreakStrategy: true,\n      onTextLayout: true,\n      onInlineViewLayout: true,\n      dataDetectorType: true\n    }),\n    directEventTypes: {\n      topTextLayout: {\n        registrationName: 'onTextLayout'\n      },\n      topInlineViewLayout: {\n        registrationName: 'onInlineViewLayout'\n      }\n    },\n    uiViewClassName: 'RCTText'\n  };\n\n  var TouchableText = function (_React$Component) {\n    _inherits(TouchableText, _React$Component);\n\n    var _super = _createSuper(TouchableText);\n\n    function TouchableText() {\n      var _this;\n\n      _classCallCheck(this, TouchableText);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = _objectSpread(_objectSpread({}, Touchable.Mixin.touchableGetInitialState()), {}, {\n        isHighlighted: false,\n        createResponderHandlers: _this._createResponseHandlers.bind(_assertThisInitialized(_this)),\n        responseHandlers: null\n      });\n      return _this;\n    }\n\n    _createClass(TouchableText, [{\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n\n        if (isTouchable(props)) {\n          props = _objectSpread(_objectSpread(_objectSpread({}, props), this.state.responseHandlers), {}, {\n            isHighlighted: this.state.isHighlighted\n          });\n        }\n\n        if (props.selectionColor != null) {\n          props = _objectSpread(_objectSpread({}, props), {}, {\n            selectionColor: processColor(props.selectionColor)\n          });\n        }\n\n        if (__DEV__) {\n          if (Touchable.TOUCH_TARGET_DEBUG && props.onPress != null) {\n            props = _objectSpread(_objectSpread({}, props), {}, {\n              style: [props.style, {\n                color: 'magenta'\n              }]\n            });\n          }\n        }\n\n        return React.createElement(TextAncestor.Consumer, null, function (hasTextAncestor) {\n          return hasTextAncestor ? React.createElement(RCTVirtualText, _extends({}, props, {\n            ref: props.forwardedRef\n          })) : React.createElement(TextAncestor.Provider, {\n            value: true\n          }, React.createElement(RCTText, _extends({}, props, {\n            ref: props.forwardedRef\n          })));\n        });\n      }\n    }, {\n      key: \"_createResponseHandlers\",\n      value: function _createResponseHandlers() {\n        var _this2 = this;\n\n        return {\n          onStartShouldSetResponder: function onStartShouldSetResponder() {\n            var onStartShouldSetResponder = _this2.props.onStartShouldSetResponder;\n            var shouldSetResponder = (onStartShouldSetResponder == null ? false : onStartShouldSetResponder()) || isTouchable(_this2.props);\n\n            if (shouldSetResponder) {\n              _this2._attachTouchHandlers();\n            }\n\n            return shouldSetResponder;\n          },\n          onResponderGrant: function onResponderGrant(event, dispatchID) {\n            nullthrows(_this2.touchableHandleResponderGrant)(event, dispatchID);\n\n            if (_this2.props.onResponderGrant != null) {\n              _this2.props.onResponderGrant.call(_this2, event, dispatchID);\n            }\n          },\n          onResponderMove: function onResponderMove(event) {\n            nullthrows(_this2.touchableHandleResponderMove)(event);\n\n            if (_this2.props.onResponderMove != null) {\n              _this2.props.onResponderMove.call(_this2, event);\n            }\n          },\n          onResponderRelease: function onResponderRelease(event) {\n            nullthrows(_this2.touchableHandleResponderRelease)(event);\n\n            if (_this2.props.onResponderRelease != null) {\n              _this2.props.onResponderRelease.call(_this2, event);\n            }\n          },\n          onResponderTerminate: function onResponderTerminate(event) {\n            nullthrows(_this2.touchableHandleResponderTerminate)(event);\n\n            if (_this2.props.onResponderTerminate != null) {\n              _this2.props.onResponderTerminate.call(_this2, event);\n            }\n          },\n          onResponderTerminationRequest: function onResponderTerminationRequest() {\n            var onResponderTerminationRequest = _this2.props.onResponderTerminationRequest;\n\n            if (!nullthrows(_this2.touchableHandleResponderTerminationRequest)()) {\n              return false;\n            }\n\n            if (onResponderTerminationRequest == null) {\n              return true;\n            }\n\n            return onResponderTerminationRequest();\n          }\n        };\n      }\n    }, {\n      key: \"_attachTouchHandlers\",\n      value: function _attachTouchHandlers() {\n        var _this3 = this;\n\n        if (this.touchableGetPressRectOffset != null) {\n          return;\n        }\n\n        for (var key in Touchable.Mixin) {\n          if (typeof Touchable.Mixin[key] === 'function') {\n            this[key] = Touchable.Mixin[key].bind(this);\n          }\n        }\n\n        this.touchableHandleActivePressIn = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: true\n            });\n          }\n        };\n\n        this.touchableHandleActivePressOut = function () {\n          if (!_this3.props.suppressHighlighting && isTouchable(_this3.props)) {\n            _this3.setState({\n              isHighlighted: false\n            });\n          }\n        };\n\n        this.touchableHandlePress = function (event) {\n          if (_this3.props.onPress != null) {\n            _this3.props.onPress(event);\n          }\n        };\n\n        this.touchableHandleLongPress = function (event) {\n          if (_this3.props.onLongPress != null) {\n            _this3.props.onLongPress(event);\n          }\n        };\n\n        this.touchableGetPressRectOffset = function () {\n          return _this3.props.pressRetentionOffset == null ? PRESS_RECT_OFFSET : _this3.props.pressRetentionOffset;\n        };\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(nextProps, prevState) {\n        return prevState.responseHandlers == null && isTouchable(nextProps) ? {\n          responseHandlers: prevState.createResponderHandlers()\n        } : null;\n      }\n    }]);\n\n    return TouchableText;\n  }(React.Component);\n\n  TouchableText.defaultProps = {\n    accessible: true,\n    allowFontScaling: true,\n    ellipsizeMode: 'tail'\n  };\n  TouchableText.viewConfig = viewConfig;\n\n  var isTouchable = function isTouchable(props) {\n    return props.onPress != null || props.onLongPress != null || props.onStartShouldSetResponder != null;\n  };\n\n  var RCTText = createReactNativeComponentClass(viewConfig.uiViewClassName, function () {\n    return viewConfig;\n  });\n  var RCTVirtualText = UIManager.getViewManagerConfig('RCTVirtualText') == null ? RCTText : createReactNativeComponentClass('RCTVirtualText', function () {\n    return {\n      validAttributes: _objectSpread(_objectSpread({}, ReactNativeViewAttributes.UIView), {}, {\n        isHighlighted: true,\n        maxFontSizeMultiplier: true\n      }),\n      uiViewClassName: 'RCTVirtualText'\n    };\n  });\n\n  var Text = function Text(props, forwardedRef) {\n    return React.createElement(TouchableText, _extends({}, props, {\n      forwardedRef: forwardedRef\n    }));\n  };\n\n  var TextToExport = React.forwardRef(Text);\n  TextToExport.displayName = 'Text';\n  TextToExport.propTypes = DeprecatedTextPropTypes;\n  module.exports = TextToExport;\n});","lineCount":292,"map":[[2,0,11,0],[28,0,13,0],[28,6,13,6,"DeprecatedTextPropTypes"],[28,29,13,29],[28,32,13,32,"require"],[28,43,13,39],[28,112,13,0],[30,0,14,0],[30,6,14,6,"React"],[30,11,14,11],[30,14,14,14,"require"],[30,25,14,21],[30,53,14,0],[32,0,15,0],[32,6,15,6,"ReactNativeViewAttributes"],[32,31,15,31],[32,34,15,34,"require"],[32,45,15,41],[32,113,15,0],[34,0,16,0],[34,6,16,6,"TextAncestor"],[34,18,16,18],[34,21,16,21,"require"],[34,32,16,28],[34,70,16,0],[36,0,17,0],[36,6,17,6,"Touchable"],[36,15,17,15],[36,18,17,18,"require"],[36,29,17,25],[36,86,17,0],[38,0,18,0],[38,6,18,6,"UIManager"],[38,15,18,15],[38,18,18,18,"require"],[38,29,18,25],[38,77,18,0],[40,0,20,0],[40,6,20,6,"createReactNativeComponentClass"],[40,37,20,37],[40,40,20,40,"require"],[40,51,20,47],[40,124,20,0],[42,0,21,0],[42,6,21,6,"nullthrows"],[42,16,21,16],[42,19,21,19,"require"],[42,30,21,26],[42,64,21,0],[44,0,22,0],[44,6,22,6,"processColor"],[44,18,22,18],[44,21,22,21,"require"],[44,32,22,28],[44,82,22,0],[46,0,52,0],[46,6,52,6,"PRESS_RECT_OFFSET"],[46,23,52,23],[46,26,52,26],[47,0,52,27,"top"],[47,4,52,27,"top"],[47,7,52,30],[47,9,52,32],[47,11,52,26],[48,0,52,36,"left"],[48,4,52,36,"left"],[48,8,52,40],[48,10,52,42],[48,12,52,26],[49,0,52,46,"right"],[49,4,52,46,"right"],[49,9,52,51],[49,11,52,53],[49,13,52,26],[50,0,52,57,"bottom"],[50,4,52,57,"bottom"],[50,10,52,63],[50,12,52,65],[51,0,52,26],[51,3,52,0],[52,0,54,0],[52,6,54,6,"viewConfig"],[52,16,54,16],[52,19,54,19],[53,0,55,2,"validAttributes"],[53,4,55,2,"validAttributes"],[53,19,55,17],[53,53,56,7,"ReactNativeViewAttributes"],[53,78,56,32],[53,79,56,33,"UIView"],[53,85,55,17],[54,0,57,4,"isHighlighted"],[54,6,57,4,"isHighlighted"],[54,19,57,17],[54,21,57,19],[54,25,55,17],[55,0,58,4,"numberOfLines"],[55,6,58,4,"numberOfLines"],[55,19,58,17],[55,21,58,19],[55,25,55,17],[56,0,59,4,"ellipsizeMode"],[56,6,59,4,"ellipsizeMode"],[56,19,59,17],[56,21,59,19],[56,25,55,17],[57,0,60,4,"allowFontScaling"],[57,6,60,4,"allowFontScaling"],[57,22,60,20],[57,24,60,22],[57,28,55,17],[58,0,61,4,"maxFontSizeMultiplier"],[58,6,61,4,"maxFontSizeMultiplier"],[58,27,61,25],[58,29,61,27],[58,33,55,17],[59,0,62,4,"disabled"],[59,6,62,4,"disabled"],[59,14,62,12],[59,16,62,14],[59,20,55,17],[60,0,63,4,"selectable"],[60,6,63,4,"selectable"],[60,16,63,14],[60,18,63,16],[60,22,55,17],[61,0,64,4,"selectionColor"],[61,6,64,4,"selectionColor"],[61,20,64,18],[61,22,64,20],[61,26,55,17],[62,0,65,4,"adjustsFontSizeToFit"],[62,6,65,4,"adjustsFontSizeToFit"],[62,26,65,24],[62,28,65,26],[62,32,55,17],[63,0,66,4,"minimumFontScale"],[63,6,66,4,"minimumFontScale"],[63,22,66,20],[63,24,66,22],[63,28,55,17],[64,0,67,4,"textBreakStrategy"],[64,6,67,4,"textBreakStrategy"],[64,23,67,21],[64,25,67,23],[64,29,55,17],[65,0,68,4,"onTextLayout"],[65,6,68,4,"onTextLayout"],[65,18,68,16],[65,20,68,18],[65,24,55,17],[66,0,69,4,"onInlineViewLayout"],[66,6,69,4,"onInlineViewLayout"],[66,24,69,22],[66,26,69,24],[66,30,55,17],[67,0,70,4,"dataDetectorType"],[67,6,70,4,"dataDetectorType"],[67,22,70,20],[67,24,70,22],[68,0,55,17],[68,6,54,19],[69,0,72,2,"directEventTypes"],[69,4,72,2,"directEventTypes"],[69,20,72,18],[69,22,72,20],[70,0,73,4,"topTextLayout"],[70,6,73,4,"topTextLayout"],[70,19,73,17],[70,21,73,19],[71,0,74,6,"registrationName"],[71,8,74,6,"registrationName"],[71,24,74,22],[71,26,74,24],[72,0,73,19],[72,7,72,20],[73,0,76,4,"topInlineViewLayout"],[73,6,76,4,"topInlineViewLayout"],[73,25,76,23],[73,27,76,25],[74,0,77,6,"registrationName"],[74,8,77,6,"registrationName"],[74,24,77,22],[74,26,77,24],[75,0,76,25],[76,0,72,20],[76,5,54,19],[77,0,80,2,"uiViewClassName"],[77,4,80,2,"uiViewClassName"],[77,19,80,17],[77,21,80,19],[78,0,54,19],[78,3,54,0],[80,6,88,6,"TouchableText"],[80,19],[95,12,109,2,"state"],[95,17],[95,52,110,7,"Touchable"],[95,61,110,16],[95,62,110,17,"Mixin"],[95,67,110,7],[95,68,110,23,"touchableGetInitialState"],[95,92,110,7],[95,94],[96,0,111,4,"isHighlighted"],[96,8,111,4,"isHighlighted"],[96,21,111,17],[96,23,111,19],[96,28],[97,0,112,4,"createResponderHandlers"],[97,8,112,4,"createResponderHandlers"],[97,31,112,27],[97,33,112,29],[97,39,112,34,"_createResponseHandlers"],[97,62,112,29],[97,63,112,58,"bind"],[97,67,112,29],[97,98],[98,0,113,4,"responseHandlers"],[98,8,113,4,"responseHandlers"],[98,24,113,20],[98,26,113,22],[105,31,129,23],[106,0,130,4],[106,12,130,8,"props"],[106,17,130,13],[106,20,130,16],[106,25,130,21,"props"],[106,30,130,4],[108,0,131,4],[108,12,131,8,"isTouchable"],[108,23,131,19],[108,24,131,20,"props"],[108,29,131,19],[108,30,131,4],[108,32,131,28],[109,0,132,6,"props"],[109,10,132,6,"props"],[109,15,132,11],[109,64,133,11,"props"],[109,69,132,11],[109,72,134,11],[109,77,134,16,"state"],[109,82,134,11],[109,83,134,22,"responseHandlers"],[109,99,132,11],[110,0,135,8,"isHighlighted"],[110,12,135,8,"isHighlighted"],[110,25,135,21],[110,27,135,23],[110,32,135,28,"state"],[110,37,135,23],[110,38,135,34,"isHighlighted"],[111,0,132,11],[111,12,132,6],[112,0,137,5],[114,0,138,4],[114,12,138,8,"props"],[114,17,138,13],[114,18,138,14,"selectionColor"],[114,32,138,8],[114,36,138,32],[114,40,138,4],[114,42,138,38],[115,0,139,6,"props"],[115,10,139,6,"props"],[115,15,139,11],[115,50,140,11,"props"],[115,55,139,11],[116,0,141,8,"selectionColor"],[116,12,141,8,"selectionColor"],[116,26,141,22],[116,28,141,24,"processColor"],[116,40,141,36],[116,41,141,37,"props"],[116,46,141,42],[116,47,141,43,"selectionColor"],[116,61,141,36],[117,0,139,11],[117,12,139,6],[118,0,143,5],[120,0,144,4],[120,12,144,8,"__DEV__"],[120,19,144,4],[120,21,144,17],[121,0,145,6],[121,14,145,10,"Touchable"],[121,23,145,19],[121,24,145,20,"TOUCH_TARGET_DEBUG"],[121,42,145,10],[121,46,145,42,"props"],[121,51,145,47],[121,52,145,48,"onPress"],[121,59,145,42],[121,63,145,59],[121,67,145,6],[121,69,145,65],[122,0,146,8,"props"],[122,12,146,8,"props"],[122,17,146,13],[122,52,147,13,"props"],[122,57,146,13],[123,0,148,10,"style"],[123,14,148,10,"style"],[123,19,148,15],[123,21,148,17],[123,22,148,18,"props"],[123,27,148,23],[123,28,148,24,"style"],[123,33,148,17],[123,35,148,31],[124,0,148,32,"color"],[124,16,148,32,"color"],[124,21,148,37],[124,23,148,39],[125,0,148,31],[125,15,148,17],[126,0,146,13],[126,14,146,8],[127,0,150,7],[128,0,151,5],[130,0,152,4],[130,15,153,6],[130,35,153,7],[130,47,153,6],[130,48,153,20],[130,56,153,6],[130,64,154,9],[130,74,154,9,"hasTextAncestor"],[130,89,154,24],[131,0,154,24],[131,17,155,10,"hasTextAncestor"],[131,32,155,25],[131,35,156,12],[131,55,156,13],[131,69,156,12],[131,84,156,32,"props"],[131,89,156,12],[132,0,156,39],[132,12,156,39],[132,15,156,42],[132,17,156,44,"props"],[132,22,156,49],[132,23,156,50,"forwardedRef"],[133,0,156,12],[133,13,155,25],[133,16,158,12],[133,36,158,13],[133,48,158,12],[133,49,158,26],[133,57,158,12],[134,0,158,35],[134,12,158,35],[134,17,158,40],[134,19,158,42],[135,0,158,12],[135,13,159,14],[135,33,159,15],[135,40,159,14],[135,55,159,27,"props"],[135,60,159,14],[136,0,159,34],[136,12,159,34],[136,15,159,37],[136,17,159,39,"props"],[136,22,159,44],[136,23,159,45,"forwardedRef"],[137,0,159,14],[137,13,158,12],[137,14,154,24],[138,0,154,24],[138,9,153,6],[138,10,152,4],[139,0,165,3],[142,48,167,46],[143,0,167,46],[145,0,168,4],[145,15,168,11],[146,0,169,6,"onStartShouldSetResponder"],[146,10,169,6,"onStartShouldSetResponder"],[146,35,169,31],[146,37,169,33],[146,74,169,48],[147,0,169,48],[147,16,170,15,"onStartShouldSetResponder"],[147,41,169,48],[147,44,170,44],[147,50,170,48],[147,51,170,49,"props"],[147,56,169,48],[147,57,170,15,"onStartShouldSetResponder"],[147,82,169,48],[148,0,171,8],[148,16,171,14,"shouldSetResponder"],[148,34,171,32],[148,37,172,10],[148,38,172,11,"onStartShouldSetResponder"],[148,63,172,36],[148,67,172,40],[148,71,172,11],[148,74,173,14],[148,79,172,11],[148,82,174,14,"onStartShouldSetResponder"],[148,107,174,39],[148,109,172,10],[148,114,174,46,"isTouchable"],[148,125,174,57],[148,126,174,58],[148,132,174,62],[148,133,174,63,"props"],[148,138,174,57],[148,139,171,8],[150,0,176,8],[150,16,176,12,"shouldSetResponder"],[150,34,176,8],[150,36,176,32],[151,0,177,10],[151,14,177,10],[151,20,177,14],[151,21,177,15,"_attachTouchHandlers"],[151,41,177,10],[152,0,178,9],[154,0,179,8],[154,19,179,15,"shouldSetResponder"],[154,37,179,8],[155,0,180,7],[155,11,168,11],[156,0,181,6,"onResponderGrant"],[156,10,181,6,"onResponderGrant"],[156,26,181,22],[156,28,181,24],[156,54,181,25,"event"],[156,59,181,24],[156,61,181,44,"dispatchID"],[156,71,181,24],[156,73,181,73],[157,0,182,8,"nullthrows"],[157,12,182,8,"nullthrows"],[157,22,182,18],[157,23,182,19],[157,29,182,23],[157,30,182,24,"touchableHandleResponderGrant"],[157,59,182,18],[157,60,182,8],[157,61,182,55,"event"],[157,66,182,8],[157,68,182,62,"dispatchID"],[157,78,182,8],[159,0,183,8],[159,16,183,12],[159,22,183,16],[159,23,183,17,"props"],[159,28,183,12],[159,29,183,23,"onResponderGrant"],[159,45,183,12],[159,49,183,43],[159,53,183,8],[159,55,183,49],[160,0,184,10],[160,14,184,10],[160,20,184,14],[160,21,184,15,"props"],[160,26,184,10],[160,27,184,21,"onResponderGrant"],[160,43,184,10],[160,44,184,38,"call"],[160,48,184,10],[160,49,184,43],[160,55,184,10],[160,57,184,49,"event"],[160,62,184,10],[160,64,184,56,"dispatchID"],[160,74,184,10],[161,0,185,9],[162,0,186,7],[162,11,168,11],[163,0,187,6,"onResponderMove"],[163,10,187,6,"onResponderMove"],[163,25,187,21],[163,27,187,23],[163,52,187,24,"event"],[163,57,187,23],[163,59,187,52],[164,0,188,8,"nullthrows"],[164,12,188,8,"nullthrows"],[164,22,188,18],[164,23,188,19],[164,29,188,23],[164,30,188,24,"touchableHandleResponderMove"],[164,58,188,18],[164,59,188,8],[164,60,188,54,"event"],[164,65,188,8],[166,0,189,8],[166,16,189,12],[166,22,189,16],[166,23,189,17,"props"],[166,28,189,12],[166,29,189,23,"onResponderMove"],[166,44,189,12],[166,48,189,42],[166,52,189,8],[166,54,189,48],[167,0,190,10],[167,14,190,10],[167,20,190,14],[167,21,190,15,"props"],[167,26,190,10],[167,27,190,21,"onResponderMove"],[167,42,190,10],[167,43,190,37,"call"],[167,47,190,10],[167,48,190,42],[167,54,190,10],[167,56,190,48,"event"],[167,61,190,10],[168,0,191,9],[169,0,192,7],[169,11,168,11],[170,0,193,6,"onResponderRelease"],[170,10,193,6,"onResponderRelease"],[170,28,193,24],[170,30,193,26],[170,58,193,27,"event"],[170,63,193,26],[170,65,193,55],[171,0,194,8,"nullthrows"],[171,12,194,8,"nullthrows"],[171,22,194,18],[171,23,194,19],[171,29,194,23],[171,30,194,24,"touchableHandleResponderRelease"],[171,61,194,18],[171,62,194,8],[171,63,194,57,"event"],[171,68,194,8],[173,0,195,8],[173,16,195,12],[173,22,195,16],[173,23,195,17,"props"],[173,28,195,12],[173,29,195,23,"onResponderRelease"],[173,47,195,12],[173,51,195,45],[173,55,195,8],[173,57,195,51],[174,0,196,10],[174,14,196,10],[174,20,196,14],[174,21,196,15,"props"],[174,26,196,10],[174,27,196,21,"onResponderRelease"],[174,45,196,10],[174,46,196,40,"call"],[174,50,196,10],[174,51,196,45],[174,57,196,10],[174,59,196,51,"event"],[174,64,196,10],[175,0,197,9],[176,0,198,7],[176,11,168,11],[177,0,199,6,"onResponderTerminate"],[177,10,199,6,"onResponderTerminate"],[177,30,199,26],[177,32,199,28],[177,62,199,29,"event"],[177,67,199,28],[177,69,199,57],[178,0,200,8,"nullthrows"],[178,12,200,8,"nullthrows"],[178,22,200,18],[178,23,200,19],[178,29,200,23],[178,30,200,24,"touchableHandleResponderTerminate"],[178,63,200,18],[178,64,200,8],[178,65,200,59,"event"],[178,70,200,8],[180,0,201,8],[180,16,201,12],[180,22,201,16],[180,23,201,17,"props"],[180,28,201,12],[180,29,201,23,"onResponderTerminate"],[180,49,201,12],[180,53,201,47],[180,57,201,8],[180,59,201,53],[181,0,202,10],[181,14,202,10],[181,20,202,14],[181,21,202,15,"props"],[181,26,202,10],[181,27,202,21,"onResponderTerminate"],[181,47,202,10],[181,48,202,42,"call"],[181,52,202,10],[181,53,202,47],[181,59,202,10],[181,61,202,53,"event"],[181,66,202,10],[182,0,203,9],[183,0,204,7],[183,11,168,11],[184,0,205,6,"onResponderTerminationRequest"],[184,10,205,6,"onResponderTerminationRequest"],[184,39,205,35],[184,41,205,37],[184,82,205,52],[185,0,205,52],[185,16,206,15,"onResponderTerminationRequest"],[185,45,205,52],[185,48,206,48],[185,54,206,52],[185,55,206,53,"props"],[185,60,205,52],[185,61,206,15,"onResponderTerminationRequest"],[185,90,205,52],[187,0,207,8],[187,16,207,12],[187,17,207,13,"nullthrows"],[187,27,207,23],[187,28,207,24],[187,34,207,28],[187,35,207,29,"touchableHandleResponderTerminationRequest"],[187,77,207,23],[187,78,207,13],[187,80,207,8],[187,82,207,76],[188,0,208,10],[188,21,208,17],[188,26,208,10],[189,0,209,9],[191,0,210,8],[191,16,210,12,"onResponderTerminationRequest"],[191,45,210,41],[191,49,210,45],[191,53,210,8],[191,55,210,51],[192,0,211,10],[192,21,211,17],[192,25,211,10],[193,0,212,9],[195,0,213,8],[195,19,213,15,"onResponderTerminationRequest"],[195,48,213,44],[195,50,213,8],[196,0,214,7],[197,0,168,11],[197,9,168,4],[198,0,216,3],[201,45,221,31],[202,0,221,31],[204,0,222,4],[204,12,222,8],[204,17,222,13,"touchableGetPressRectOffset"],[204,44,222,8],[204,48,222,44],[204,52,222,4],[204,54,222,50],[205,0,223,6],[206,0,224,5],[208,0,225,4],[208,13,225,9],[208,17,225,15,"key"],[208,20,225,4],[208,24,225,22,"Touchable"],[208,33,225,31],[208,34,225,32,"Mixin"],[208,39,225,4],[208,41,225,39],[209,0,226,6],[209,14,226,10],[209,21,226,17,"Touchable"],[209,30,226,26],[209,31,226,27,"Mixin"],[209,36,226,17],[209,37,226,33,"key"],[209,40,226,17],[209,41,226,10],[209,46,226,42],[209,56,226,6],[209,58,226,54],[210,0,227,9],[210,16,227,8],[210,17,227,20,"key"],[210,20,227,8],[210,24,227,27,"Touchable"],[210,33,227,36],[210,34,227,37,"Mixin"],[210,39,227,27],[210,40,227,43,"key"],[210,43,227,27],[210,45,227,48,"bind"],[210,49,227,27],[210,50,227,53],[210,54,227,27],[210,55,227,8],[211,0,228,7],[212,0,229,5],[214,0,230,4],[214,13,230,9,"touchableHandleActivePressIn"],[214,41,230,4],[214,44,230,40],[214,56,230,52],[215,0,231,6],[215,14,231,10],[215,15,231,11],[215,21,231,15],[215,22,231,16,"props"],[215,27,231,11],[215,28,231,22,"suppressHighlighting"],[215,48,231,10],[215,52,231,46,"isTouchable"],[215,63,231,57],[215,64,231,58],[215,70,231,62],[215,71,231,63,"props"],[215,76,231,57],[215,77,231,6],[215,79,231,71],[216,0,232,8],[216,12,232,8],[216,18,232,12],[216,19,232,13,"setState"],[216,27,232,8],[216,28,232,22],[217,0,232,23,"isHighlighted"],[217,14,232,23,"isHighlighted"],[217,27,232,36],[217,29,232,38],[218,0,232,22],[218,13,232,8],[219,0,233,7],[220,0,234,5],[220,9,230,4],[222,0,235,4],[222,13,235,9,"touchableHandleActivePressOut"],[222,42,235,4],[222,45,235,41],[222,57,235,53],[223,0,236,6],[223,14,236,10],[223,15,236,11],[223,21,236,15],[223,22,236,16,"props"],[223,27,236,11],[223,28,236,22,"suppressHighlighting"],[223,48,236,10],[223,52,236,46,"isTouchable"],[223,63,236,57],[223,64,236,58],[223,70,236,62],[223,71,236,63,"props"],[223,76,236,57],[223,77,236,6],[223,79,236,71],[224,0,237,8],[224,12,237,8],[224,18,237,12],[224,19,237,13,"setState"],[224,27,237,8],[224,28,237,22],[225,0,237,23,"isHighlighted"],[225,14,237,23,"isHighlighted"],[225,27,237,36],[225,29,237,38],[226,0,237,22],[226,13,237,8],[227,0,238,7],[228,0,239,5],[228,9,235,4],[230,0,240,4],[230,13,240,9,"touchableHandlePress"],[230,33,240,4],[230,36,240,32],[230,46,240,33,"event"],[230,51,240,32],[230,53,240,61],[231,0,241,6],[231,14,241,10],[231,20,241,14],[231,21,241,15,"props"],[231,26,241,10],[231,27,241,21,"onPress"],[231,34,241,10],[231,38,241,32],[231,42,241,6],[231,44,241,38],[232,0,242,8],[232,12,242,8],[232,18,242,12],[232,19,242,13,"props"],[232,24,242,8],[232,25,242,19,"onPress"],[232,32,242,8],[232,33,242,27,"event"],[232,38,242,8],[233,0,243,7],[234,0,244,5],[234,9,240,4],[236,0,245,4],[236,13,245,9,"touchableHandleLongPress"],[236,37,245,4],[236,40,245,36],[236,50,245,37,"event"],[236,55,245,36],[236,57,245,65],[237,0,246,6],[237,14,246,10],[237,20,246,14],[237,21,246,15,"props"],[237,26,246,10],[237,27,246,21,"onLongPress"],[237,38,246,10],[237,42,246,36],[237,46,246,6],[237,48,246,42],[238,0,247,8],[238,12,247,8],[238,18,247,12],[238,19,247,13,"props"],[238,24,247,8],[238,25,247,19,"onLongPress"],[238,36,247,8],[238,37,247,31,"event"],[238,42,247,8],[239,0,248,7],[240,0,249,5],[240,9,245,4],[242,0,250,4],[242,13,250,9,"touchableGetPressRectOffset"],[242,40,250,4],[242,43,250,39],[243,0,250,39],[243,17,251,6],[243,23,251,10],[243,24,251,11,"props"],[243,29,251,6],[243,30,251,17,"pressRetentionOffset"],[243,50,251,6],[243,54,251,41],[243,58,251,6],[243,61,252,10,"PRESS_RECT_OFFSET"],[243,78,251,6],[243,81,253,10],[243,87,253,14],[243,88,253,15,"props"],[243,93,253,10],[243,94,253,21,"pressRetentionOffset"],[243,114,250,39],[244,0,250,39],[244,9,250,4],[245,0,254,3],[248,47,117,4,"nextProps"],[248,56],[248,58,118,4,"prevState"],[248,67],[248,69,119,26],[249,0,120,4],[249,15,120,11,"prevState"],[249,24,120,20],[249,25,120,21,"responseHandlers"],[249,41,120,11],[249,45,120,41],[249,49,120,11],[249,53,120,49,"isTouchable"],[249,64,120,60],[249,65,120,61,"nextProps"],[249,74,120,60],[249,75,120,11],[249,78,121,8],[250,0,122,10,"responseHandlers"],[250,10,122,10,"responseHandlers"],[250,26,122,26],[250,28,122,28,"prevState"],[250,37,122,37],[250,38,122,38,"createResponderHandlers"],[250,61,122,28],[251,0,121,8],[251,9,120,11],[251,12,124,8],[251,16,120,4],[252,0,125,3],[256,4,88,28,"React"],[256,9,88,33],[256,10,88,34,"Component"],[256,19],[258,0,88,6,"TouchableText"],[258,2,88,6,"TouchableText"],[258,15],[258,16,89,9,"defaultProps"],[258,28],[258,31,89,24],[259,0,90,4,"accessible"],[259,4,90,4,"accessible"],[259,14,90,14],[259,16,90,16],[259,20,89,24],[260,0,91,4,"allowFontScaling"],[260,4,91,4,"allowFontScaling"],[260,20,91,20],[260,22,91,22],[260,26,89,24],[261,0,92,4,"ellipsizeMode"],[261,4,92,4,"ellipsizeMode"],[261,17,92,17],[261,19,92,19],[262,0,89,24],[262,3],[263,0,88,6,"TouchableText"],[263,2,88,6,"TouchableText"],[263,15],[263,16,127,9,"viewConfig"],[263,26],[263,29,127,22,"viewConfig"],[263,39],[265,0,257,0],[265,6,257,6,"isTouchable"],[265,17,257,17],[265,20,257,20],[265,29,257,6,"isTouchable"],[265,40,257,20],[265,41,257,21,"props"],[265,46,257,20],[266,0,257,20],[266,11,258,2,"props"],[266,16,258,7],[266,17,258,8,"onPress"],[266,24,258,2],[266,28,258,19],[266,32,258,2],[266,36,259,2,"props"],[266,41,259,7],[266,42,259,8,"onLongPress"],[266,53,259,2],[266,57,259,23],[266,61,258,2],[266,65,260,2,"props"],[266,70,260,7],[266,71,260,8,"onStartShouldSetResponder"],[266,96,260,2],[266,100,260,37],[266,104,257,20],[267,0,257,20],[267,3,257,0],[269,0,262,0],[269,6,262,6,"RCTText"],[269,13,262,13],[269,16,262,16,"createReactNativeComponentClass"],[269,47,262,47],[269,48,263,2,"viewConfig"],[269,58,263,12],[269,59,263,13,"uiViewClassName"],[269,74,262,47],[269,76,264,2],[270,0,264,2],[270,11,264,8,"viewConfig"],[270,21,264,2],[271,0,264,2],[271,3,262,47],[271,4,262,0],[272,0,267,0],[272,6,267,6,"RCTVirtualText"],[272,20,267,20],[272,23,268,2,"UIManager"],[272,32,268,11],[272,33,268,12,"getViewManagerConfig"],[272,53,268,2],[272,54,268,33],[272,70,268,2],[272,75,268,54],[272,79,268,2],[272,82,269,6,"RCTText"],[272,89,268,2],[272,92,270,6,"createReactNativeComponentClass"],[272,123,270,37],[272,124,270,38],[272,140,270,37],[272,142,270,56],[273,0,270,56],[273,11,270,63],[274,0,271,8,"validAttributes"],[274,6,271,8,"validAttributes"],[274,21,271,23],[274,55,272,13,"ReactNativeViewAttributes"],[274,80,272,38],[274,81,272,39,"UIView"],[274,87,271,23],[275,0,273,10,"isHighlighted"],[275,8,273,10,"isHighlighted"],[275,21,273,23],[275,23,273,25],[275,27,271,23],[276,0,274,10,"maxFontSizeMultiplier"],[276,8,274,10,"maxFontSizeMultiplier"],[276,29,274,31],[276,31,274,33],[277,0,271,23],[277,8,270,63],[278,0,276,8,"uiViewClassName"],[278,6,276,8,"uiViewClassName"],[278,21,276,23],[278,23,276,25],[279,0,270,63],[279,5,270,56],[280,0,270,56],[280,3,270,37],[280,4,267,0],[282,0,279,0],[282,6,279,6,"Text"],[282,10,279,10],[282,13,279,13],[282,22,279,6,"Text"],[282,26,279,13],[282,27,280,2,"props"],[282,32,279,13],[282,34,281,2,"forwardedRef"],[282,46,279,13],[282,48,282,5],[283,0,283,2],[283,11,283,9],[283,31,283,10],[283,44,283,9],[283,59,283,28,"props"],[283,64,283,9],[284,0,283,35],[284,6,283,35],[284,18,283,47],[284,20,283,49,"forwardedRef"],[285,0,283,9],[285,7,283,2],[286,0,284,1],[286,3,279,0],[288,0,285,0],[288,6,285,6,"TextToExport"],[288,18,285,18],[288,21,285,21,"React"],[288,26,285,26],[288,27,285,27,"forwardRef"],[288,37,285,21],[288,38,285,38,"Text"],[288,42,285,21],[288,43,285,0],[289,0,286,0,"TextToExport"],[289,2,286,0,"TextToExport"],[289,14,286,12],[289,15,286,13,"displayName"],[289,26,286,0],[289,29,286,27],[289,35,286,0],[290,0,292,0,"TextToExport"],[290,2,292,0,"TextToExport"],[290,14,292,12],[290,15,292,13,"propTypes"],[290,24,292,0],[290,27,292,25,"DeprecatedTextPropTypes"],[290,50,292,0],[291,0,294,0,"module"],[291,2,294,0,"module"],[291,8,294,6],[291,9,294,7,"exports"],[291,16,294,0],[291,19,294,19,"TextToExport"],[291,31,294,0]],"functionMap":{"names":["<global>","TouchableText","TouchableText.getDerivedStateFromProps","TouchableText#render","TextAncestor.Consumer.props.children","TouchableText#_createResponseHandlers","onStartShouldSetResponder","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","TouchableText#_attachTouchHandlers","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandlePress","touchableHandleLongPress","touchableGetPressRectOffset","isTouchable","createReactNativeComponentClass$argument_1","Text"],"mappings":"AAA;ACuF;EC4B;GDS;EEI;SCyB;WDO;GFI;EIE;iCCE;ODW;wBEC;OFK;uBGC;OHK;0BIC;OJK;4BKC;OLK;qCMC;ONS;GJE;EWK;wCCS;KDI;yCEC;KFI;gCGC;KHI;oCIC;KJI;uCKC;yCLG;GXC;CDC;oBkBE;yClBG;EmBI,gBnB;wDmBM;QnBO;aoBE;CpBK"}},"type":"js/module"}]}