{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}},{"name":"../util","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFont = extractFont;\n  exports.setTSpan = setTSpan;\n  exports.default = extractText;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractLengthList\"));\n\n  var _util = _$$_REQUIRE(_dependencyMap[5], \"../util\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var fontRegExp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?(?:%|px|em|pt|pc|mm|cm|in]))*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\n  var fontFamilyPrefix = /^[\\s\"']*/;\n  var fontFamilySuffix = /[\\s\"']*$/;\n  var commaReg = /\\s*,\\s*/g;\n  var cachedFontObjectsFromString = {};\n\n  function extractSingleFontFamily(fontFamilyString) {\n    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '') : null;\n  }\n\n  function parseFontString(font) {\n    if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n      return cachedFontObjectsFromString[font];\n    }\n\n    var match = fontRegExp.exec(font);\n\n    if (!match) {\n      cachedFontObjectsFromString[font] = null;\n      return null;\n    }\n\n    var isBold = /bold/.exec(match[1]);\n    var isItalic = /italic/.exec(match[1]);\n    cachedFontObjectsFromString[font] = {\n      fontSize: match[2] || 12,\n      fontWeight: isBold ? 'bold' : 'normal',\n      fontStyle: isItalic ? 'italic' : 'normal',\n      fontFamily: extractSingleFontFamily(match[3])\n    };\n    return cachedFontObjectsFromString[font];\n  }\n\n  function extractFont(props) {\n    var fontData = props.fontData,\n        fontStyle = props.fontStyle,\n        fontVariant = props.fontVariant,\n        fontWeight = props.fontWeight,\n        fontStretch = props.fontStretch,\n        fontSize = props.fontSize,\n        fontFamily = props.fontFamily,\n        textAnchor = props.textAnchor,\n        textDecoration = props.textDecoration,\n        letterSpacing = props.letterSpacing,\n        wordSpacing = props.wordSpacing,\n        kerning = props.kerning,\n        fontFeatureSettings = props.fontFeatureSettings,\n        fontVariantLigatures = props.fontVariantLigatures,\n        fontVariationSettings = props.fontVariationSettings,\n        font = props.font;\n    var ownedFont = (0, _util.pickNotNil)({\n      fontData: fontData,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontStretch: fontStretch,\n      fontSize: fontSize,\n      fontFamily: extractSingleFontFamily(fontFamily),\n      textAnchor: textAnchor,\n      textDecoration: textDecoration,\n      letterSpacing: letterSpacing,\n      wordSpacing: wordSpacing,\n      kerning: kerning,\n      fontFeatureSettings: fontFeatureSettings,\n      fontVariantLigatures: fontVariantLigatures,\n      fontVariationSettings: fontVariationSettings\n    });\n    var baseFont = typeof font === 'string' ? parseFontString(font) : font;\n    return _objectSpread(_objectSpread({}, baseFont), ownedFont);\n  }\n\n  var TSpan;\n\n  function setTSpan(TSpanImplementation) {\n    TSpan = TSpanImplementation;\n  }\n\n  function getChild(child) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return _react.default.createElement(TSpan, null, String(child));\n    } else {\n      return child;\n    }\n  }\n\n  function extractText(props, container) {\n    var x = props.x,\n        y = props.y,\n        dx = props.dx,\n        dy = props.dy,\n        rotate = props.rotate,\n        children = props.children,\n        inlineSize = props.inlineSize,\n        baselineShift = props.baselineShift,\n        verticalAlign = props.verticalAlign,\n        alignmentBaseline = props.alignmentBaseline;\n    var textChildren = typeof children === 'string' || typeof children === 'number' ? container ? _react.default.createElement(TSpan, null, String(children)) : null : _react.Children.count(children) > 1 || Array.isArray(children) ? _react.Children.map(children, getChild) : children;\n    return {\n      content: textChildren === null ? String(children) : null,\n      children: textChildren,\n      inlineSize: inlineSize,\n      baselineShift: baselineShift,\n      verticalAlign: verticalAlign,\n      alignmentBaseline: alignmentBaseline,\n      font: extractFont(props),\n      x: (0, _extractLengthList.default)(x),\n      y: (0, _extractLengthList.default)(y),\n      dx: (0, _extractLengthList.default)(dx),\n      dy: (0, _extractLengthList.default)(dy),\n      rotate: (0, _extractLengthList.default)(rotate)\n    };\n  }\n});","lineCount":137,"map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[25,0,6,0],[25,6,6,6,"fontRegExp"],[25,16,6,16],[25,19,6,19],[25,134,6,0],[26,0,7,0],[26,6,7,6,"fontFamilyPrefix"],[26,22,7,22],[26,25,7,25],[26,35,7,0],[27,0,8,0],[27,6,8,6,"fontFamilySuffix"],[27,22,8,22],[27,25,8,25],[27,35,8,0],[28,0,9,0],[28,6,9,6,"commaReg"],[28,14,9,14],[28,17,9,17],[28,27,9,0],[29,0,11,0],[29,6,11,6,"cachedFontObjectsFromString"],[29,33,18,1],[29,36,18,4],[29,38,11,0],[31,0,20,0],[31,11,20,9,"extractSingleFontFamily"],[31,34,20,0],[31,35,20,33,"fontFamilyString"],[31,51,20,0],[31,53,20,60],[32,0,24,2],[32,11,24,9,"fontFamilyString"],[32,27,24,25],[32,30,25,6,"fontFamilyString"],[32,46,25,22],[32,47,26,9,"split"],[32,52,25,6],[32,53,26,15,"commaReg"],[32,61,25,6],[32,63,26,25],[32,64,25,6],[32,66,27,9,"replace"],[32,73,25,6],[32,74,27,17,"fontFamilyPrefix"],[32,90,25,6],[32,92,27,35],[32,94,25,6],[32,96,28,9,"replace"],[32,103,25,6],[32,104,28,17,"fontFamilySuffix"],[32,120,25,6],[32,122,28,35],[32,124,25,6],[32,125,24,25],[32,128,29,6],[32,132,24,2],[33,0,30,1],[35,0,32,0],[35,11,32,9,"parseFontString"],[35,26,32,0],[35,27,32,25,"font"],[35,31,32,0],[35,33,32,39],[36,0,33,2],[36,8,33,6,"cachedFontObjectsFromString"],[36,35,33,33],[36,36,33,34,"hasOwnProperty"],[36,50,33,6],[36,51,33,49,"font"],[36,55,33,6],[36,56,33,2],[36,58,33,56],[37,0,34,4],[37,13,34,11,"cachedFontObjectsFromString"],[37,40,34,38],[37,41,34,39,"font"],[37,45,34,38],[37,46,34,4],[38,0,35,3],[40,0,36,2],[40,8,36,8,"match"],[40,13,36,13],[40,16,36,16,"fontRegExp"],[40,26,36,26],[40,27,36,27,"exec"],[40,31,36,16],[40,32,36,32,"font"],[40,36,36,16],[40,37,36,2],[42,0,37,2],[42,8,37,6],[42,9,37,7,"match"],[42,14,37,2],[42,16,37,14],[43,0,38,4,"cachedFontObjectsFromString"],[43,6,38,4,"cachedFontObjectsFromString"],[43,33,38,31],[43,34,38,32,"font"],[43,38,38,31],[43,39,38,4],[43,42,38,40],[43,46,38,4],[44,0,39,4],[44,13,39,11],[44,17,39,4],[45,0,40,3],[47,0,41,2],[47,8,41,8,"isBold"],[47,14,41,14],[47,17,41,17],[47,24,41,24,"exec"],[47,28,41,17],[47,29,41,29,"match"],[47,34,41,34],[47,35,41,35],[47,36,41,34],[47,37,41,17],[47,38,41,2],[48,0,42,2],[48,8,42,8,"isItalic"],[48,16,42,16],[48,19,42,19],[48,28,42,28,"exec"],[48,32,42,19],[48,33,42,33,"match"],[48,38,42,38],[48,39,42,39],[48,40,42,38],[48,41,42,19],[48,42,42,2],[49,0,43,2,"cachedFontObjectsFromString"],[49,4,43,2,"cachedFontObjectsFromString"],[49,31,43,29],[49,32,43,30,"font"],[49,36,43,29],[49,37,43,2],[49,40,43,38],[50,0,44,4,"fontSize"],[50,6,44,4,"fontSize"],[50,14,44,12],[50,16,44,14,"match"],[50,21,44,19],[50,22,44,20],[50,23,44,19],[50,24,44,14],[50,28,44,26],[50,30,43,38],[51,0,45,4,"fontWeight"],[51,6,45,4,"fontWeight"],[51,16,45,14],[51,18,45,16,"isBold"],[51,24,45,22],[51,27,45,25],[51,33,45,22],[51,36,45,34],[51,44,43,38],[52,0,46,4,"fontStyle"],[52,6,46,4,"fontStyle"],[52,15,46,13],[52,17,46,15,"isItalic"],[52,25,46,23],[52,28,46,26],[52,36,46,23],[52,39,46,37],[52,47,43,38],[53,0,47,4,"fontFamily"],[53,6,47,4,"fontFamily"],[53,16,47,14],[53,18,47,16,"extractSingleFontFamily"],[53,41,47,39],[53,42,47,40,"match"],[53,47,47,45],[53,48,47,46],[53,49,47,45],[53,50,47,39],[54,0,43,38],[54,5,43,2],[55,0,49,2],[55,11,49,9,"cachedFontObjectsFromString"],[55,38,49,36],[55,39,49,37,"font"],[55,43,49,36],[55,44,49,2],[56,0,50,1],[58,0,71,7],[58,11,71,16,"extractFont"],[58,22,71,7],[58,23,71,28,"props"],[58,28,71,7],[58,30,71,46],[59,0,71,46],[59,8,73,4,"fontData"],[59,16,71,46],[59,19,89,6,"props"],[59,24,71,46],[59,25,73,4,"fontData"],[59,33,71,46],[60,0,71,46],[60,8,74,4,"fontStyle"],[60,17,71,46],[60,20,89,6,"props"],[60,25,71,46],[60,26,74,4,"fontStyle"],[60,35,71,46],[61,0,71,46],[61,8,75,4,"fontVariant"],[61,19,71,46],[61,22,89,6,"props"],[61,27,71,46],[61,28,75,4,"fontVariant"],[61,39,71,46],[62,0,71,46],[62,8,76,4,"fontWeight"],[62,18,71,46],[62,21,89,6,"props"],[62,26,71,46],[62,27,76,4,"fontWeight"],[62,37,71,46],[63,0,71,46],[63,8,77,4,"fontStretch"],[63,19,71,46],[63,22,89,6,"props"],[63,27,71,46],[63,28,77,4,"fontStretch"],[63,39,71,46],[64,0,71,46],[64,8,78,4,"fontSize"],[64,16,71,46],[64,19,89,6,"props"],[64,24,71,46],[64,25,78,4,"fontSize"],[64,33,71,46],[65,0,71,46],[65,8,79,4,"fontFamily"],[65,18,71,46],[65,21,89,6,"props"],[65,26,71,46],[65,27,79,4,"fontFamily"],[65,37,71,46],[66,0,71,46],[66,8,80,4,"textAnchor"],[66,18,71,46],[66,21,89,6,"props"],[66,26,71,46],[66,27,80,4,"textAnchor"],[66,37,71,46],[67,0,71,46],[67,8,81,4,"textDecoration"],[67,22,71,46],[67,25,89,6,"props"],[67,30,71,46],[67,31,81,4,"textDecoration"],[67,45,71,46],[68,0,71,46],[68,8,82,4,"letterSpacing"],[68,21,71,46],[68,24,89,6,"props"],[68,29,71,46],[68,30,82,4,"letterSpacing"],[68,43,71,46],[69,0,71,46],[69,8,83,4,"wordSpacing"],[69,19,71,46],[69,22,89,6,"props"],[69,27,71,46],[69,28,83,4,"wordSpacing"],[69,39,71,46],[70,0,71,46],[70,8,84,4,"kerning"],[70,15,71,46],[70,18,89,6,"props"],[70,23,71,46],[70,24,84,4,"kerning"],[70,31,71,46],[71,0,71,46],[71,8,85,4,"fontFeatureSettings"],[71,27,71,46],[71,30,89,6,"props"],[71,35,71,46],[71,36,85,4,"fontFeatureSettings"],[71,55,71,46],[72,0,71,46],[72,8,86,4,"fontVariantLigatures"],[72,28,71,46],[72,31,89,6,"props"],[72,36,71,46],[72,37,86,4,"fontVariantLigatures"],[72,57,71,46],[73,0,71,46],[73,8,87,4,"fontVariationSettings"],[73,29,71,46],[73,32,89,6,"props"],[73,37,71,46],[73,38,87,4,"fontVariationSettings"],[73,59,71,46],[74,0,71,46],[74,8,88,4,"font"],[74,12,71,46],[74,15,89,6,"props"],[74,20,71,46],[74,21,88,4,"font"],[74,25,71,46],[75,0,91,2],[75,8,91,8,"ownedFont"],[75,17,91,17],[75,20,91,20],[75,42,91,31],[76,0,92,4,"fontData"],[76,6,92,4,"fontData"],[76,14,92,12],[76,16,92,4,"fontData"],[76,24,91,31],[77,0,93,4,"fontStyle"],[77,6,93,4,"fontStyle"],[77,15,93,13],[77,17,93,4,"fontStyle"],[77,26,91,31],[78,0,94,4,"fontVariant"],[78,6,94,4,"fontVariant"],[78,17,94,15],[78,19,94,4,"fontVariant"],[78,30,91,31],[79,0,95,4,"fontWeight"],[79,6,95,4,"fontWeight"],[79,16,95,14],[79,18,95,4,"fontWeight"],[79,28,91,31],[80,0,96,4,"fontStretch"],[80,6,96,4,"fontStretch"],[80,17,96,15],[80,19,96,4,"fontStretch"],[80,30,91,31],[81,0,97,4,"fontSize"],[81,6,97,4,"fontSize"],[81,14,97,12],[81,16,97,4,"fontSize"],[81,24,91,31],[82,0,98,4,"fontFamily"],[82,6,98,4,"fontFamily"],[82,16,98,14],[82,18,98,16,"extractSingleFontFamily"],[82,41,98,39],[82,42,98,40,"fontFamily"],[82,52,98,39],[82,53,91,31],[83,0,99,4,"textAnchor"],[83,6,99,4,"textAnchor"],[83,16,99,14],[83,18,99,4,"textAnchor"],[83,28,91,31],[84,0,100,4,"textDecoration"],[84,6,100,4,"textDecoration"],[84,20,100,18],[84,22,100,4,"textDecoration"],[84,36,91,31],[85,0,101,4,"letterSpacing"],[85,6,101,4,"letterSpacing"],[85,19,101,17],[85,21,101,4,"letterSpacing"],[85,34,91,31],[86,0,102,4,"wordSpacing"],[86,6,102,4,"wordSpacing"],[86,17,102,15],[86,19,102,4,"wordSpacing"],[86,30,91,31],[87,0,103,4,"kerning"],[87,6,103,4,"kerning"],[87,13,103,11],[87,15,103,4,"kerning"],[87,22,91,31],[88,0,104,4,"fontFeatureSettings"],[88,6,104,4,"fontFeatureSettings"],[88,25,104,23],[88,27,104,4,"fontFeatureSettings"],[88,46,91,31],[89,0,105,4,"fontVariantLigatures"],[89,6,105,4,"fontVariantLigatures"],[89,26,105,24],[89,28,105,4,"fontVariantLigatures"],[89,48,91,31],[90,0,106,4,"fontVariationSettings"],[90,6,106,4,"fontVariationSettings"],[90,27,106,25],[90,29,106,4,"fontVariationSettings"],[91,0,91,31],[91,5,91,20],[91,6,91,2],[92,0,109,2],[92,8,109,8,"baseFont"],[92,16,109,16],[92,19,109,19],[92,26,109,26,"font"],[92,30,109,19],[92,35,109,35],[92,43,109,19],[92,46,109,46,"parseFontString"],[92,61,109,61],[92,62,109,62,"font"],[92,66,109,61],[92,67,109,19],[92,70,109,70,"font"],[92,74,109,2],[93,0,111,2],[93,43,111,14,"baseFont"],[93,51,111,2],[93,54,111,27,"ownedFont"],[93,63,111,2],[94,0,112,1],[96,0,114,0],[96,6,114,4,"TSpan"],[96,11,114,0],[98,0,116,7],[98,11,116,16,"setTSpan"],[98,19,116,7],[98,20,116,25,"TSpanImplementation"],[98,39,116,7],[98,41,116,61],[99,0,117,2,"TSpan"],[99,4,117,2,"TSpan"],[99,9,117,7],[99,12,117,10,"TSpanImplementation"],[99,31,117,2],[100,0,118,1],[102,0,120,0],[102,11,120,9,"getChild"],[102,19,120,0],[102,20,120,18,"child"],[102,25,120,0],[102,27,120,70],[103,0,121,2],[103,8,121,6],[103,15,121,13,"child"],[103,20,121,6],[103,25,121,23],[103,33,121,6],[103,37,121,35],[103,44,121,42,"child"],[103,49,121,35],[103,54,121,52],[103,62,121,2],[103,64,121,62],[104,0,122,4],[104,13,122,11],[104,42,122,12],[104,47,122,11],[104,55,122,19,"String"],[104,61,122,25],[104,62,122,26,"child"],[104,67,122,25],[104,68,122,11],[104,69,122,4],[105,0,123,3],[105,5,121,2],[105,11,123,9],[106,0,124,4],[106,13,124,11,"child"],[106,18,124,4],[107,0,125,3],[108,0,126,1],[110,0,141,15],[110,11,141,24,"extractText"],[110,22,141,15],[110,23,141,36,"props"],[110,28,141,15],[110,30,141,54,"container"],[110,39,141,15],[110,41,141,74],[111,0,141,74],[111,8,143,4,"x"],[111,9,141,74],[111,12,153,6,"props"],[111,17,141,74],[111,18,143,4,"x"],[111,19,141,74],[112,0,141,74],[112,8,144,4,"y"],[112,9,141,74],[112,12,153,6,"props"],[112,17,141,74],[112,18,144,4,"y"],[112,19,141,74],[113,0,141,74],[113,8,145,4,"dx"],[113,10,141,74],[113,13,153,6,"props"],[113,18,141,74],[113,19,145,4,"dx"],[113,21,141,74],[114,0,141,74],[114,8,146,4,"dy"],[114,10,141,74],[114,13,153,6,"props"],[114,18,141,74],[114,19,146,4,"dy"],[114,21,141,74],[115,0,141,74],[115,8,147,4,"rotate"],[115,14,141,74],[115,17,153,6,"props"],[115,22,141,74],[115,23,147,4,"rotate"],[115,29,141,74],[116,0,141,74],[116,8,148,4,"children"],[116,16,141,74],[116,19,153,6,"props"],[116,24,141,74],[116,25,148,4,"children"],[116,33,141,74],[117,0,141,74],[117,8,149,4,"inlineSize"],[117,18,141,74],[117,21,153,6,"props"],[117,26,141,74],[117,27,149,4,"inlineSize"],[117,37,141,74],[118,0,141,74],[118,8,150,4,"baselineShift"],[118,21,141,74],[118,24,153,6,"props"],[118,29,141,74],[118,30,150,4,"baselineShift"],[118,43,141,74],[119,0,141,74],[119,8,151,4,"verticalAlign"],[119,21,141,74],[119,24,153,6,"props"],[119,29,141,74],[119,30,151,4,"verticalAlign"],[119,43,141,74],[120,0,141,74],[120,8,152,4,"alignmentBaseline"],[120,25,141,74],[120,28,153,6,"props"],[120,33,141,74],[120,34,152,4,"alignmentBaseline"],[120,51,141,74],[121,0,155,2],[121,8,155,8,"textChildren"],[121,20,155,20],[121,23,156,4],[121,30,156,11,"children"],[121,38,156,4],[121,43,156,24],[121,51,156,4],[121,55,156,36],[121,62,156,43,"children"],[121,70,156,36],[121,75,156,56],[121,83,156,4],[121,86,157,6,"container"],[121,95,157,15],[121,98,158,8],[121,127,158,9],[121,132,158,8],[121,140,158,16,"String"],[121,146,158,22],[121,147,158,23,"children"],[121,155,158,22],[121,156,158,8],[121,157,157,15],[121,160,159,10],[121,164,156,4],[121,167,160,8,"Children"],[121,183,160,17,"count"],[121,188,160,8],[121,189,160,23,"children"],[121,197,160,8],[121,201,160,35],[121,202,160,8],[121,206,160,40,"Array"],[121,211,160,45],[121,212,160,46,"isArray"],[121,219,160,40],[121,220,160,54,"children"],[121,228,160,40],[121,229,160,8],[121,232,161,6,"Children"],[121,248,161,15,"map"],[121,251,161,6],[121,252,161,19,"children"],[121,260,161,6],[121,262,161,29,"getChild"],[121,270,161,6],[121,271,160,8],[121,274,163,6,"children"],[121,282,155,2],[122,0,166,2],[122,11,166,9],[123,0,167,4,"content"],[123,6,167,4,"content"],[123,13,167,11],[123,15,167,13,"textChildren"],[123,27,167,25],[123,32,167,30],[123,36,167,13],[123,39,167,37,"String"],[123,45,167,43],[123,46,167,44,"children"],[123,54,167,43],[123,55,167,13],[123,58,167,56],[123,62,166,9],[124,0,168,4,"children"],[124,6,168,4,"children"],[124,14,168,12],[124,16,168,14,"textChildren"],[124,28,166,9],[125,0,169,4,"inlineSize"],[125,6,169,4,"inlineSize"],[125,16,169,14],[125,18,169,4,"inlineSize"],[125,28,166,9],[126,0,170,4,"baselineShift"],[126,6,170,4,"baselineShift"],[126,19,170,17],[126,21,170,4,"baselineShift"],[126,34,166,9],[127,0,171,4,"verticalAlign"],[127,6,171,4,"verticalAlign"],[127,19,171,17],[127,21,171,4,"verticalAlign"],[127,34,166,9],[128,0,172,4,"alignmentBaseline"],[128,6,172,4,"alignmentBaseline"],[128,23,172,21],[128,25,172,4,"alignmentBaseline"],[128,42,166,9],[129,0,173,4,"font"],[129,6,173,4,"font"],[129,10,173,8],[129,12,173,10,"extractFont"],[129,23,173,21],[129,24,173,22,"props"],[129,29,173,21],[129,30,166,9],[130,0,174,4,"x"],[130,6,174,4,"x"],[130,7,174,5],[130,9,174,7],[130,41,174,25,"x"],[130,42,174,7],[130,43,166,9],[131,0,175,4,"y"],[131,6,175,4,"y"],[131,7,175,5],[131,9,175,7],[131,41,175,25,"y"],[131,42,175,7],[131,43,166,9],[132,0,176,4,"dx"],[132,6,176,4,"dx"],[132,8,176,6],[132,10,176,8],[132,42,176,26,"dx"],[132,44,176,8],[132,45,166,9],[133,0,177,4,"dy"],[133,6,177,4,"dy"],[133,8,177,6],[133,10,177,8],[133,42,177,26,"dy"],[133,44,177,8],[133,45,166,9],[134,0,178,4,"rotate"],[134,6,178,4,"rotate"],[134,12,178,10],[134,14,178,12],[134,46,178,30,"rotate"],[134,52,178,12],[135,0,166,9],[135,5,166,2],[136,0,180,1]],"functionMap":{"names":["<global>","extractSingleFontFamily","parseFontString","extractFont","setTSpan","getChild","extractText"],"mappings":"AAA;ACmB;CDU;AEE;CFkB;OGqB;CHyC;OII;CJE;AKE;CLM;eMe;CNuC"}},"type":"js/module"}]}