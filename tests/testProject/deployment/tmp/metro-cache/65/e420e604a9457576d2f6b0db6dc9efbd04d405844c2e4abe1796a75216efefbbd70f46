{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./a8e2e490.js","data":{"isAsync":false}},{"name":"./44c8ff49.js","data":{"isAsync":false}},{"name":"./52372dbe.js","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.a = createNonEnumFormatter;\n  exports.c = createFormatter;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _a8e2e = _$$_REQUIRE(_dependencyMap[3], \"./a8e2e490.js\");\n\n  var _c8ff = _$$_REQUIRE(_dependencyMap[4], \"./44c8ff49.js\");\n\n  var _dbe = _$$_REQUIRE(_dependencyMap[5], \"./52372dbe.js\");\n\n  var DefaultDateTimeFormatter = function () {\n    function DefaultDateTimeFormatter(config) {\n      (0, _classCallCheck2.default)(this, DefaultDateTimeFormatter);\n      this.config = config, this.type = _dbe.F.DateTime;\n    }\n\n    (0, _createClass2.default)(DefaultDateTimeFormatter, [{\n      key: \"format\",\n      value: function format(value) {\n        return !value || isNaN(value.getTime()) ? \"\" : (0, _c8ff.f)(value, this.config);\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(value, fallbackDate) {\n        if (\"\" === value) return {\n          valid: !0,\n          value: void 0\n        };\n        var result = (0, _c8ff.p)(value, this.config, fallbackDate);\n        return void 0 === result ? {\n          valid: !1\n        } : {\n          valid: !0,\n          value: result\n        };\n      }\n    }, {\n      key: \"getFormatPlaceholder\",\n      value: function getFormatPlaceholder() {\n        return (0, _c8ff.k)(this.config);\n      }\n    }, {\n      key: \"withConfig\",\n      value: function withConfig(config) {\n        return new DefaultDateTimeFormatter(config);\n      }\n    }]);\n    return DefaultDateTimeFormatter;\n  }();\n\n  var DefaultEnumFormatter = function () {\n    function DefaultEnumFormatter(enumeration) {\n      (0, _classCallCheck2.default)(this, DefaultEnumFormatter);\n      this.enumeration = enumeration;\n    }\n\n    (0, _createClass2.default)(DefaultEnumFormatter, [{\n      key: \"format\",\n      value: function format(value) {\n        return value ? (0, _a8e2e.t)(this.enumeration, value) : \"\";\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(_value) {\n        throw new Error(\"Enumeration values cannot be parsed\");\n      }\n    }]);\n    return DefaultEnumFormatter;\n  }();\n\n  var DefaultNumberFormatter = function () {\n    function DefaultNumberFormatter(config) {\n      (0, _classCallCheck2.default)(this, DefaultNumberFormatter);\n      this.config = config, this.type = _dbe.F.Number;\n    }\n\n    (0, _createClass2.default)(DefaultNumberFormatter, [{\n      key: \"format\",\n      value: function format(value) {\n        return value ? (0, _c8ff.a)(value, this.config.groupDigits, this.config.decimalPrecision) : \"\";\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(inputValue) {\n        if (\"\" === inputValue) return {\n          valid: !0,\n          value: void 0\n        };\n        var result = (0, _c8ff.b)(inputValue, this.config.decimalPrecision);\n        return void 0 === result ? {\n          valid: !1\n        } : {\n          valid: !0,\n          value: result\n        };\n      }\n    }, {\n      key: \"withConfig\",\n      value: function withConfig(config) {\n        return new DefaultNumberFormatter(config);\n      }\n    }]);\n    return DefaultNumberFormatter;\n  }();\n\n  function createFormatter(entity, attribute, config) {\n    var metaObject = mx.meta.getEntity(entity),\n        attributeType = metaObject.getAttributeType(attribute);\n    return \"Enum\" === attributeType ? new DefaultEnumFormatter(metaObject.getEnumeration(attribute)) : createNonEnumFormatter(attributeType, config);\n  }\n\n  function createNonEnumFormatter(attributeType, config) {\n    var _a, _b;\n\n    switch (attributeType) {\n      case \"DateTime\":\n        return new DefaultDateTimeFormatter(null !== (_a = config.dateFormat) && void 0 !== _a ? _a : {\n          type: \"date\"\n        });\n\n      case \"Integer\":\n      case \"Long\":\n      case \"Decimal\":\n        return new DefaultNumberFormatter(null !== (_b = config.numberFormat) && void 0 !== _b ? _b : {\n          groupDigits: !1\n        });\n\n      default:\n        return {\n          format: function format(value) {\n            return (0, _c8ff.g)(value, attributeType);\n          },\n          parse: function parse(inputValue) {\n            var value = (0, _c8ff.l)(inputValue, attributeType);\n            return void 0 !== value ? {\n              valid: !0,\n              value: value\n            } : {\n              valid: !1\n            };\n          }\n        };\n    }\n  }\n});","lineCount":154,"map":[[14,0,1,0],[16,0,1,53],[18,0,1,209],[20,6,1,261,"DefaultDateTimeFormatter"],[20,30],[21,0,1,286],[21,38,1,298,"config"],[21,44,1,286],[21,46,1,305],[22,0,1,305],[23,0,1,306],[23,11,1,311,"config"],[23,17,1,306],[23,20,1,318,"config"],[23,26,1,306],[23,28,1,325],[23,33,1,330,"type"],[23,37,1,325],[23,40,1,335,"FormatterType"],[23,47,1,349,"DateTime"],[23,55,1,306],[24,0,1,358],[28,29,1,365,"value"],[28,34],[28,36,1,371],[29,0,1,372],[29,15,1,378],[29,16,1,379,"value"],[29,21,1,378],[29,25,1,386,"isNaN"],[29,30,1,391],[29,31,1,392,"value"],[29,36,1,397],[29,37,1,398,"getTime"],[29,44,1,392],[29,46,1,391],[29,47,1,378],[29,50,1,409],[29,52,1,378],[29,55,1,412],[29,68,1,423,"value"],[29,73,1,412],[29,75,1,429],[29,80,1,434,"config"],[29,86,1,412],[29,87,1,372],[30,0,1,442],[33,28,1,448,"value"],[33,33],[33,35,1,454,"fallbackDate"],[33,47],[33,49,1,467],[34,0,1,468],[34,12,1,471],[34,19,1,476,"value"],[34,24,1,468],[34,26,1,482],[34,33,1,488],[35,0,1,489,"valid"],[35,10,1,489,"valid"],[35,15,1,494],[35,17,1,495],[35,18,1,496],[35,19,1,488],[36,0,1,498,"value"],[36,10,1,498,"value"],[36,15,1,503],[36,17,1,504],[36,22,1,509],[37,0,1,488],[37,9,1,482],[38,0,1,512],[38,12,1,518,"result"],[38,18,1,524],[38,21,1,525],[38,34,1,535,"value"],[38,39,1,525],[38,41,1,541],[38,46,1,546,"config"],[38,52,1,525],[38,54,1,553,"fallbackDate"],[38,66,1,525],[38,67,1,512],[39,0,1,567],[39,15,1,574],[39,20,1,579],[39,21,1,574],[39,26,1,583,"result"],[39,32,1,574],[39,35,1,590],[40,0,1,591,"valid"],[40,10,1,591,"valid"],[40,15,1,596],[40,17,1,597],[40,18,1,598],[41,0,1,590],[41,9,1,574],[41,12,1,601],[42,0,1,602,"valid"],[42,10,1,602,"valid"],[42,15,1,607],[42,17,1,608],[42,18,1,609],[42,19,1,601],[43,0,1,611,"value"],[43,10,1,611,"value"],[43,15,1,616],[43,17,1,617,"result"],[44,0,1,601],[44,9,1,567],[45,0,1,625],[48,45,1,647],[49,0,1,648],[49,15,1,655],[49,28,1,680],[49,33,1,685,"config"],[49,39,1,655],[49,40,1,648],[50,0,1,693],[53,33,1,704,"config"],[53,39],[53,41,1,711],[54,0,1,712],[54,15,1,719],[54,19,1,723,"DefaultDateTimeFormatter"],[54,43,1,719],[54,44,1,748,"config"],[54,50,1,719],[54,51,1,712],[55,0,1,756],[60,6,1,763,"DefaultEnumFormatter"],[60,26],[61,0,1,784],[61,34,1,796,"enumeration"],[61,45,1,784],[61,47,1,808],[62,0,1,808],[63,0,1,809],[63,11,1,814,"enumeration"],[63,22,1,809],[63,25,1,826,"enumeration"],[63,36,1,809],[64,0,1,838],[68,29,1,845,"value"],[68,34],[68,36,1,851],[69,0,1,852],[69,15,1,859,"value"],[69,20,1,864],[69,23,1,865],[69,37,1,886],[69,42,1,891,"enumeration"],[69,53,1,865],[69,55,1,903,"value"],[69,60,1,865],[69,61,1,864],[69,64,1,910],[69,66,1,852],[70,0,1,913],[73,28,1,919,"_value"],[73,34],[73,36,1,926],[74,0,1,927],[74,14,1,933],[74,18,1,937,"Error"],[74,23,1,933],[74,24,1,943],[74,61,1,933],[74,62,1,927],[75,0,1,982],[80,6,1,989,"DefaultNumberFormatter"],[80,28],[81,0,1,1012],[81,36,1,1024,"config"],[81,42,1,1012],[81,44,1,1031],[82,0,1,1031],[83,0,1,1032],[83,11,1,1037,"config"],[83,17,1,1032],[83,20,1,1044,"config"],[83,26,1,1032],[83,28,1,1051],[83,33,1,1056,"type"],[83,37,1,1051],[83,40,1,1061,"FormatterType"],[83,47,1,1075,"Number"],[83,53,1,1032],[84,0,1,1082],[88,29,1,1089,"value"],[88,34],[88,36,1,1095],[89,0,1,1096],[89,15,1,1103,"value"],[89,20,1,1108],[89,23,1,1109],[89,36,1,1122,"value"],[89,41,1,1109],[89,43,1,1128],[89,48,1,1133,"config"],[89,54,1,1128],[89,55,1,1140,"groupDigits"],[89,66,1,1109],[89,68,1,1152],[89,73,1,1157,"config"],[89,79,1,1152],[89,80,1,1164,"decimalPrecision"],[89,96,1,1109],[89,97,1,1108],[89,100,1,1182],[89,102,1,1096],[90,0,1,1185],[93,28,1,1191,"inputValue"],[93,38],[93,40,1,1202],[94,0,1,1203],[94,12,1,1206],[94,19,1,1211,"inputValue"],[94,29,1,1203],[94,31,1,1222],[94,38,1,1228],[95,0,1,1229,"valid"],[95,10,1,1229,"valid"],[95,15,1,1234],[95,17,1,1235],[95,18,1,1236],[95,19,1,1228],[96,0,1,1238,"value"],[96,10,1,1238,"value"],[96,15,1,1243],[96,17,1,1244],[96,22,1,1249],[97,0,1,1228],[97,9,1,1222],[98,0,1,1252],[98,12,1,1258,"result"],[98,18,1,1264],[98,21,1,1265],[98,34,1,1277,"inputValue"],[98,44,1,1265],[98,46,1,1288],[98,51,1,1293,"config"],[98,57,1,1288],[98,58,1,1300,"decimalPrecision"],[98,74,1,1265],[98,75,1,1252],[99,0,1,1318],[99,15,1,1325],[99,20,1,1330],[99,21,1,1325],[99,26,1,1334,"result"],[99,32,1,1325],[99,35,1,1341],[100,0,1,1342,"valid"],[100,10,1,1342,"valid"],[100,15,1,1347],[100,17,1,1348],[100,18,1,1349],[101,0,1,1341],[101,9,1,1325],[101,12,1,1352],[102,0,1,1353,"valid"],[102,10,1,1353,"valid"],[102,15,1,1358],[102,17,1,1359],[102,18,1,1360],[102,19,1,1352],[103,0,1,1362,"value"],[103,10,1,1362,"value"],[103,15,1,1367],[103,17,1,1368,"result"],[104,0,1,1352],[104,9,1,1318],[105,0,1,1376],[108,33,1,1387,"config"],[108,39],[108,41,1,1394],[109,0,1,1395],[109,15,1,1402],[109,19,1,1406,"DefaultNumberFormatter"],[109,41,1,1402],[109,42,1,1429,"config"],[109,48,1,1402],[109,49,1,1395],[110,0,1,1437],[115,0,1,1438],[115,11,1,1447,"createFormatter"],[115,26,1,1438],[115,27,1,1463,"entity"],[115,33,1,1438],[115,35,1,1470,"attribute"],[115,44,1,1438],[115,46,1,1480,"config"],[115,52,1,1438],[115,54,1,1487],[116,0,1,1488],[116,8,1,1494,"metaObject"],[116,18,1,1504],[116,21,1,1505,"mx"],[116,23,1,1507],[116,24,1,1508,"meta"],[116,28,1,1505],[116,29,1,1513,"getEntity"],[116,38,1,1505],[116,39,1,1523,"entity"],[116,45,1,1505],[116,46,1,1488],[117,0,1,1488],[117,8,1,1531,"attributeType"],[117,21,1,1544],[117,24,1,1545,"metaObject"],[117,34,1,1555],[117,35,1,1556,"getAttributeType"],[117,51,1,1545],[117,52,1,1573,"attribute"],[117,61,1,1545],[117,62,1,1488],[118,0,1,1584],[118,11,1,1590],[118,22,1,1599,"attributeType"],[118,35,1,1590],[118,38,1,1613],[118,42,1,1617,"DefaultEnumFormatter"],[118,62,1,1613],[118,63,1,1638,"metaObject"],[118,73,1,1648],[118,74,1,1649,"getEnumeration"],[118,88,1,1638],[118,89,1,1664,"attribute"],[118,98,1,1638],[118,99,1,1613],[118,100,1,1590],[118,103,1,1676,"createNonEnumFormatter"],[118,125,1,1698],[118,126,1,1699,"attributeType"],[118,139,1,1698],[118,141,1,1713,"config"],[118,147,1,1698],[118,148,1,1584],[119,0,1,1721],[121,0,1,1721],[121,11,1,1730,"createNonEnumFormatter"],[121,33,1,1721],[121,34,1,1753,"attributeType"],[121,47,1,1721],[121,49,1,1767,"config"],[121,55,1,1721],[121,57,1,1774],[122,0,1,1775],[122,8,1,1779,"_a"],[122,10,1,1775],[122,12,1,1782,"_b"],[122,14,1,1775],[124,0,1,1785],[124,12,1,1792,"attributeType"],[124,25,1,1785],[125,0,1,1807],[125,11,1,1811],[125,21,1,1807],[126,0,1,1822],[126,15,1,1829],[126,19,1,1833,"DefaultDateTimeFormatter"],[126,43,1,1829],[126,44,1,1858],[126,54,1,1866,"_a"],[126,56,1,1868],[126,59,1,1869,"config"],[126,65,1,1875],[126,66,1,1876,"dateFormat"],[126,76,1,1858],[126,81,1,1889],[126,86,1,1894],[126,87,1,1889],[126,92,1,1898,"_a"],[126,94,1,1858],[126,97,1,1901,"_a"],[126,99,1,1858],[126,102,1,1904],[127,0,1,1905,"type"],[127,10,1,1905,"type"],[127,14,1,1909],[127,16,1,1910],[128,0,1,1904],[128,9,1,1829],[128,10,1,1822],[130,0,1,1919],[130,11,1,1923],[130,20,1,1919],[131,0,1,1933],[131,11,1,1937],[131,17,1,1933],[132,0,1,1944],[132,11,1,1948],[132,20,1,1944],[133,0,1,1958],[133,15,1,1965],[133,19,1,1969,"DefaultNumberFormatter"],[133,41,1,1965],[133,42,1,1992],[133,52,1,2000,"_b"],[133,54,1,2002],[133,57,1,2003,"config"],[133,63,1,2009],[133,64,1,2010,"numberFormat"],[133,76,1,1992],[133,81,1,2025],[133,86,1,2030],[133,87,1,2025],[133,92,1,2034,"_b"],[133,94,1,1992],[133,97,1,2037,"_b"],[133,99,1,1992],[133,102,1,2040],[134,0,1,2041,"groupDigits"],[134,10,1,2041,"groupDigits"],[134,21,1,2052],[134,23,1,2053],[134,24,1,2054],[135,0,1,2040],[135,9,1,1965],[135,10,1,1958],[137,0,1,2058],[138,0,1,2066],[138,15,1,2072],[139,0,1,2073,"format"],[139,10,1,2073,"format"],[139,16,1,2079],[139,18,1,2080],[139,34,1,2080,"value"],[139,39,1,2085],[140,0,1,2085],[140,19,1,2087],[140,32,1,2099,"value"],[140,37,1,2087],[140,39,1,2105,"attributeType"],[140,52,1,2087],[140,53,1,2085],[141,0,1,2085],[141,11,1,2072],[142,0,1,2120,"parse"],[142,10,1,2120,"parse"],[142,15,1,2125],[142,17,1,2126],[142,32,1,2126,"inputValue"],[142,42,1,2136],[142,44,1,2138],[143,0,1,2139],[143,16,1,2145,"value"],[143,21,1,2150],[143,24,1,2151],[143,37,1,2162,"inputValue"],[143,47,1,2151],[143,49,1,2173,"attributeType"],[143,62,1,2151],[143,63,1,2139],[144,0,1,2188],[144,19,1,2195],[144,24,1,2200],[144,25,1,2195],[144,30,1,2204,"value"],[144,35,1,2195],[144,38,1,2210],[145,0,1,2211,"valid"],[145,14,1,2211,"valid"],[145,19,1,2216],[145,21,1,2217],[145,22,1,2218],[145,23,1,2210],[146,0,1,2220,"value"],[146,14,1,2220,"value"],[146,19,1,2225],[146,21,1,2226,"value"],[147,0,1,2210],[147,13,1,2195],[147,16,1,2233],[148,0,1,2234,"valid"],[148,14,1,2234,"valid"],[148,19,1,2239],[148,21,1,2240],[148,22,1,2241],[149,0,1,2233],[149,13,1,2188],[150,0,1,2244],[151,0,1,2072],[151,9,1,2066],[152,0,1,1785],[153,0,1,2247]],"functionMap":{"names":["<global>","DefaultDateTimeFormatter","DefaultDateTimeFormatter#constructor","DefaultDateTimeFormatter#format","DefaultDateTimeFormatter#parse","DefaultDateTimeFormatter#getFormatPlaceholder","DefaultDateTimeFormatter#withConfig","DefaultEnumFormatter","DefaultEnumFormatter#constructor","DefaultEnumFormatter#format","DefaultEnumFormatter#parse","DefaultNumberFormatter","DefaultNumberFormatter#constructor","DefaultNumberFormatter#format","DefaultNumberFormatter#parse","DefaultNumberFormatter#withConfig","createFormatter","createNonEnumFormatter","format","parse"],"mappings":"AAA,+PC,+BC,wEC,oFC,uLC,oEC,+DL,CM,2BC,sDC,2EC,qEH,CI,6BC,sEC,uGC,+LC,6DJ,CK,2RC,uWC,uCD,OE,sHF,GjB"}},"type":"js/module"}]}