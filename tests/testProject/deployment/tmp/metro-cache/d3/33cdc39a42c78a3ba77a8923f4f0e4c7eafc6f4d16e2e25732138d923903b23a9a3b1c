{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"../StyleSheet/StyleSheet","data":{"isAsync":false}},{"name":"../Text/Text","data":{"isAsync":false}},{"name":"./Touchable/TouchableNativeFeedback","data":{"isAsync":false}},{"name":"./Touchable/TouchableOpacity","data":{"isAsync":false}},{"name":"./View/View","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var Platform = _$$_REQUIRE(_dependencyMap[6], \"../Utilities/Platform\");\n\n  var React = _$$_REQUIRE(_dependencyMap[7], \"react\");\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[8], \"../StyleSheet/StyleSheet\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[9], \"../Text/Text\");\n\n  var TouchableNativeFeedback = _$$_REQUIRE(_dependencyMap[10], \"./Touchable/TouchableNativeFeedback\");\n\n  var TouchableOpacity = _$$_REQUIRE(_dependencyMap[11], \"./Touchable/TouchableOpacity\");\n\n  var View = _$$_REQUIRE(_dependencyMap[12], \"./View/View\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[13], \"invariant\");\n\n  var Button = function (_React$Component) {\n    _inherits(Button, _React$Component);\n\n    var _super = _createSuper(Button);\n\n    function Button() {\n      _classCallCheck(this, Button);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Button, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            color = _this$props.color,\n            onPress = _this$props.onPress,\n            touchSoundDisabled = _this$props.touchSoundDisabled,\n            title = _this$props.title,\n            hasTVPreferredFocus = _this$props.hasTVPreferredFocus,\n            nextFocusDown = _this$props.nextFocusDown,\n            nextFocusForward = _this$props.nextFocusForward,\n            nextFocusLeft = _this$props.nextFocusLeft,\n            nextFocusRight = _this$props.nextFocusRight,\n            nextFocusUp = _this$props.nextFocusUp,\n            disabled = _this$props.disabled,\n            testID = _this$props.testID;\n        var buttonStyles = [styles.button];\n        var textStyles = [styles.text];\n\n        if (color) {\n          if (\"android\" === 'ios') {\n            textStyles.push({\n              color: color\n            });\n          } else {\n            buttonStyles.push({\n              backgroundColor: color\n            });\n          }\n        }\n\n        var accessibilityStates = [];\n\n        if (disabled) {\n          buttonStyles.push(styles.buttonDisabled);\n          textStyles.push(styles.textDisabled);\n          accessibilityStates.push('disabled');\n        }\n\n        invariant(typeof title === 'string', 'The title prop of a Button must be a string');\n        var formattedTitle = \"android\" === 'android' ? title.toUpperCase() : title;\n        var Touchable = \"android\" === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n        return React.createElement(Touchable, {\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: \"button\",\n          accessibilityStates: accessibilityStates,\n          hasTVPreferredFocus: hasTVPreferredFocus,\n          nextFocusDown: nextFocusDown,\n          nextFocusForward: nextFocusForward,\n          nextFocusLeft: nextFocusLeft,\n          nextFocusRight: nextFocusRight,\n          nextFocusUp: nextFocusUp,\n          testID: testID,\n          disabled: disabled,\n          onPress: onPress,\n          touchSoundDisabled: touchSoundDisabled\n        }, React.createElement(View, {\n          style: buttonStyles\n        }, React.createElement(Text, {\n          style: textStyles,\n          disabled: disabled\n        }, formattedTitle)));\n      }\n    }]);\n\n    return Button;\n  }(React.Component);\n\n  var styles = StyleSheet.create({\n    button: {\n      elevation: 4,\n      backgroundColor: '#2196F3',\n      borderRadius: 2\n    },\n    text: _objectSpread({\n      textAlign: 'center',\n      padding: 8\n    }, {\n      color: 'white',\n      fontWeight: '500'\n    }),\n    buttonDisabled: {\n      elevation: 0,\n      backgroundColor: '#dfdfdf'\n    },\n    textDisabled: {\n      color: '#a1a1a1'\n    }\n  });\n  module.exports = Button;\n});","lineCount":142,"map":[[2,0,11,0],[24,0,13,0],[24,6,13,6,"Platform"],[24,14,13,14],[24,17,13,17,"require"],[24,28,13,24],[24,72,13,0],[26,0,14,0],[26,6,14,6,"React"],[26,11,14,11],[26,14,14,14,"require"],[26,25,14,21],[26,53,14,0],[28,0,15,0],[28,6,15,6,"StyleSheet"],[28,16,15,16],[28,19,15,19,"require"],[28,30,15,26],[28,77,15,0],[30,0,16,0],[30,6,16,6,"Text"],[30,10,16,10],[30,13,16,13,"require"],[30,24,16,20],[30,59,16,0],[32,0,17,0],[32,6,17,6,"TouchableNativeFeedback"],[32,29,17,29],[32,32,17,32,"require"],[32,43,17,39],[32,102,17,0],[34,0,18,0],[34,6,18,6,"TouchableOpacity"],[34,22,18,22],[34,25,18,25,"require"],[34,36,18,32],[34,88,18,0],[36,0,19,0],[36,6,19,6,"View"],[36,10,19,10],[36,13,19,13,"require"],[36,24,19,20],[36,59,19,0],[38,0,21,0],[38,6,21,6,"invariant"],[38,15,21,15],[38,18,21,18,"require"],[38,29,21,25],[38,62,21,0],[40,6,130,6,"Button"],[40,12],[53,31,131,23],[54,0,131,23],[54,26,146,8],[54,31,146,13,"props"],[54,36,131,23],[55,0,131,23],[55,12,133,6,"accessibilityLabel"],[55,30,131,23],[55,45,133,6,"accessibilityLabel"],[55,63,131,23],[56,0,131,23],[56,12,134,6,"color"],[56,17,131,23],[56,32,134,6,"color"],[56,37,131,23],[57,0,131,23],[57,12,135,6,"onPress"],[57,19,131,23],[57,34,135,6,"onPress"],[57,41,131,23],[58,0,131,23],[58,12,136,6,"touchSoundDisabled"],[58,30,131,23],[58,45,136,6,"touchSoundDisabled"],[58,63,131,23],[59,0,131,23],[59,12,137,6,"title"],[59,17,131,23],[59,32,137,6,"title"],[59,37,131,23],[60,0,131,23],[60,12,138,6,"hasTVPreferredFocus"],[60,31,131,23],[60,46,138,6,"hasTVPreferredFocus"],[60,65,131,23],[61,0,131,23],[61,12,139,6,"nextFocusDown"],[61,25,131,23],[61,40,139,6,"nextFocusDown"],[61,53,131,23],[62,0,131,23],[62,12,140,6,"nextFocusForward"],[62,28,131,23],[62,43,140,6,"nextFocusForward"],[62,59,131,23],[63,0,131,23],[63,12,141,6,"nextFocusLeft"],[63,25,131,23],[63,40,141,6,"nextFocusLeft"],[63,53,131,23],[64,0,131,23],[64,12,142,6,"nextFocusRight"],[64,26,131,23],[64,41,142,6,"nextFocusRight"],[64,55,131,23],[65,0,131,23],[65,12,143,6,"nextFocusUp"],[65,23,131,23],[65,38,143,6,"nextFocusUp"],[65,49,131,23],[66,0,131,23],[66,12,144,6,"disabled"],[66,20,131,23],[66,35,144,6,"disabled"],[66,43,131,23],[67,0,131,23],[67,12,145,6,"testID"],[67,18,131,23],[67,33,145,6,"testID"],[67,39,131,23],[68,0,147,4],[68,12,147,10,"buttonStyles"],[68,24,147,22],[68,27,147,25],[68,28,147,26,"styles"],[68,34,147,32],[68,35,147,33,"button"],[68,41,147,25],[68,42,147,4],[69,0,148,4],[69,12,148,10,"textStyles"],[69,22,148,20],[69,25,148,23],[69,26,148,24,"styles"],[69,32,148,30],[69,33,148,31,"text"],[69,37,148,23],[69,38,148,4],[71,0,149,4],[71,12,149,8,"color"],[71,17,149,4],[71,19,149,15],[72,0,150,6],[72,14,150,10],[72,28,150,26],[72,33,150,6],[72,35,150,33],[73,0,151,8,"textStyles"],[73,12,151,8,"textStyles"],[73,22,151,18],[73,23,151,19,"push"],[73,27,151,8],[73,28,151,24],[74,0,151,25,"color"],[74,14,151,25,"color"],[74,19,151,30],[74,21,151,32,"color"],[75,0,151,24],[75,13,151,8],[76,0,152,7],[76,11,150,6],[76,17,152,13],[77,0,153,8,"buttonStyles"],[77,12,153,8,"buttonStyles"],[77,24,153,20],[77,25,153,21,"push"],[77,29,153,8],[77,30,153,26],[78,0,153,27,"backgroundColor"],[78,14,153,27,"backgroundColor"],[78,29,153,42],[78,31,153,44,"color"],[79,0,153,26],[79,13,153,8],[80,0,154,7],[81,0,155,5],[83,0,156,4],[83,12,156,10,"accessibilityStates"],[83,31,156,29],[83,34,156,32],[83,36,156,4],[85,0,157,4],[85,12,157,8,"disabled"],[85,20,157,4],[85,22,157,18],[86,0,158,6,"buttonStyles"],[86,10,158,6,"buttonStyles"],[86,22,158,18],[86,23,158,19,"push"],[86,27,158,6],[86,28,158,24,"styles"],[86,34,158,30],[86,35,158,31,"buttonDisabled"],[86,49,158,6],[87,0,159,6,"textStyles"],[87,10,159,6,"textStyles"],[87,20,159,16],[87,21,159,17,"push"],[87,25,159,6],[87,26,159,22,"styles"],[87,32,159,28],[87,33,159,29,"textDisabled"],[87,45,159,6],[88,0,160,6,"accessibilityStates"],[88,10,160,6,"accessibilityStates"],[88,29,160,25],[88,30,160,26,"push"],[88,34,160,6],[88,35,160,31],[88,45,160,6],[89,0,161,5],[91,0,162,4,"invariant"],[91,8,162,4,"invariant"],[91,17,162,13],[91,18,163,6],[91,25,163,13,"title"],[91,30,163,6],[91,35,163,23],[91,43,162,13],[91,45,164,6],[91,90,162,13],[91,91,162,4],[92,0,166,4],[92,12,166,10,"formattedTitle"],[92,26,166,24],[92,29,167,6],[92,43,167,22],[92,52,167,6],[92,55,167,34,"title"],[92,60,167,39],[92,61,167,40,"toUpperCase"],[92,72,167,34],[92,74,167,6],[92,77,167,56,"title"],[92,82,166,4],[93,0,168,4],[93,12,168,10,"Touchable"],[93,21,168,19],[93,24,169,6],[93,38,169,22],[93,47,169,6],[93,50,169,34,"TouchableNativeFeedback"],[93,73,169,6],[93,76,169,60,"TouchableOpacity"],[93,92,168,4],[94,0,170,4],[94,15,171,6],[94,35,171,7],[94,44,171,6],[95,0,172,8],[95,10,172,8],[95,28,172,26],[95,30,172,28,"accessibilityLabel"],[95,48,171,6],[96,0,173,8],[96,10,173,8],[96,27,173,25],[96,29,173,26],[96,37,171,6],[97,0,174,8],[97,10,174,8],[97,29,174,27],[97,31,174,29,"accessibilityStates"],[97,50,171,6],[98,0,175,8],[98,10,175,8],[98,29,175,27],[98,31,175,29,"hasTVPreferredFocus"],[98,50,171,6],[99,0,176,8],[99,10,176,8],[99,23,176,21],[99,25,176,23,"nextFocusDown"],[99,38,171,6],[100,0,177,8],[100,10,177,8],[100,26,177,24],[100,28,177,26,"nextFocusForward"],[100,44,171,6],[101,0,178,8],[101,10,178,8],[101,23,178,21],[101,25,178,23,"nextFocusLeft"],[101,38,171,6],[102,0,179,8],[102,10,179,8],[102,24,179,22],[102,26,179,24,"nextFocusRight"],[102,40,171,6],[103,0,180,8],[103,10,180,8],[103,21,180,19],[103,23,180,21,"nextFocusUp"],[103,34,171,6],[104,0,181,8],[104,10,181,8],[104,16,181,14],[104,18,181,16,"testID"],[104,24,171,6],[105,0,182,8],[105,10,182,8],[105,18,182,16],[105,20,182,18,"disabled"],[105,28,171,6],[106,0,183,8],[106,10,183,8],[106,17,183,15],[106,19,183,17,"onPress"],[106,26,171,6],[107,0,184,8],[107,10,184,8],[107,28,184,26],[107,30,184,28,"touchSoundDisabled"],[108,0,171,6],[108,11,185,8],[108,31,185,9],[108,35,185,8],[109,0,185,14],[109,10,185,14],[109,15,185,19],[109,17,185,21,"buttonStyles"],[110,0,185,8],[110,11,186,10],[110,31,186,11],[110,35,186,10],[111,0,186,16],[111,10,186,16],[111,15,186,21],[111,17,186,23,"textStyles"],[111,27,186,10],[112,0,186,35],[112,10,186,35],[112,18,186,43],[112,20,186,45,"disabled"],[113,0,186,10],[113,11,187,13,"formattedTitle"],[113,25,186,10],[113,26,185,8],[113,27,171,6],[113,28,170,4],[114,0,192,3],[118,4,130,21,"React"],[118,9,130,26],[118,10,130,27,"Component"],[118,19],[120,0,195,0],[120,6,195,6,"styles"],[120,12,195,12],[120,15,195,15,"StyleSheet"],[120,25,195,25],[120,26,195,26,"create"],[120,32,195,15],[120,33,195,33],[121,0,196,2,"button"],[121,4,196,2,"button"],[121,10,196,8],[121,12,198,13],[122,0,199,6,"elevation"],[122,6,199,6,"elevation"],[122,15,199,15],[122,17,199,17],[122,18,198,13],[123,0,201,6,"backgroundColor"],[123,6,201,6,"backgroundColor"],[123,21,201,21],[123,23,201,23],[123,32,198,13],[124,0,202,6,"borderRadius"],[124,6,202,6,"borderRadius"],[124,18,202,18],[124,20,202,20],[125,0,198,13],[125,5,195,33],[126,0,205,2,"text"],[126,4,205,2,"text"],[126,8,205,6],[127,0,206,4,"textAlign"],[127,6,206,4,"textAlign"],[127,15,206,13],[127,17,206,15],[127,25,205,6],[128,0,207,4,"padding"],[128,6,207,4,"padding"],[128,13,207,11],[128,15,207,13],[129,0,205,6],[129,7,214,15],[130,0,215,8,"color"],[130,6,215,8,"color"],[130,11,215,13],[130,13,215,15],[130,20,214,15],[131,0,216,8,"fontWeight"],[131,6,216,8,"fontWeight"],[131,16,216,18],[131,18,216,20],[132,0,214,15],[132,5,205,6],[132,6,195,33],[133,0,220,2,"buttonDisabled"],[133,4,220,2,"buttonDisabled"],[133,18,220,16],[133,20,222,13],[134,0,223,6,"elevation"],[134,6,223,6,"elevation"],[134,15,223,15],[134,17,223,17],[134,18,222,13],[135,0,224,6,"backgroundColor"],[135,6,224,6,"backgroundColor"],[135,21,224,21],[135,23,224,23],[136,0,222,13],[136,5,195,33],[137,0,227,2,"textDisabled"],[137,4,227,2,"textDisabled"],[137,16,227,14],[137,18,231,13],[138,0,232,6,"color"],[138,6,232,6,"color"],[138,11,232,11],[138,13,232,13],[139,0,231,13],[140,0,195,33],[140,3,195,15],[140,4,195,0],[141,0,237,0,"module"],[141,2,237,0,"module"],[141,8,237,6],[141,9,237,7,"exports"],[141,16,237,0],[141,19,237,17,"Button"],[141,25,237,0]],"functionMap":{"names":["<global>","Button","render"],"mappings":"AAA;ACiI;ECC;GD6D;CDC"}},"type":"js/module"}]}