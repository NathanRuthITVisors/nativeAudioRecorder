{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends4 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  function _default() {\n    function mergeDeep(target) {\n      function isObject(item) {\n        return item && typeof item === \"object\" && !Array.isArray(item);\n      }\n\n      for (var _len2 = arguments.length, sources = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        sources[_key2 - 1] = arguments[_key2];\n      }\n\n      if (!sources.length) return target;\n      var source = sources.shift();\n\n      if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach(function (key) {\n          if (isObject(source[key])) {\n            if (!target[key]) (0, _extends4.default)(target, (0, _defineProperty2.default)({}, key, {}));\n            mergeDeep(target[key], source[key]);\n          } else {\n            (0, _extends4.default)(target, (0, _defineProperty2.default)({}, key, source[key]));\n          }\n        });\n      }\n\n      return mergeDeep.apply(void 0, [target].concat(sources));\n    }\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    return mergeDeep.apply(void 0, [{}].concat(sources));\n  }\n});","lineCount":46,"map":[[13,0,10,15],[13,22,10,37],[14,0,11,4],[14,13,11,13,"mergeDeep"],[14,22,11,4],[14,23,11,23,"target"],[14,29,11,4],[14,31,11,43],[15,0,12,8],[15,15,12,17,"isObject"],[15,23,12,8],[15,24,12,26,"item"],[15,28,12,8],[15,30,12,32],[16,0,13,12],[16,15,13,19,"item"],[16,19,13,23],[16,23,13,27],[16,30,13,34,"item"],[16,34,13,27],[16,39,13,43],[16,47,13,19],[16,51,13,55],[16,52,13,56,"Array"],[16,57,13,61],[16,58,13,62,"isArray"],[16,65,13,56],[16,66,13,70,"item"],[16,70,13,56],[16,71,13,12],[17,0,14,9],[19,0,11,43],[19,41,11,34,"sources"],[19,48,11,43],[20,0,11,34,"sources"],[20,8,11,34,"sources"],[20,15,11,43],[21,0,11,43],[23,0,15,8],[23,10,15,12],[23,11,15,13,"sources"],[23,18,15,20],[23,19,15,21,"length"],[23,25,15,8],[23,27,16,12],[23,34,16,19,"target"],[23,40,16,12],[24,0,17,8],[24,10,17,14,"source"],[24,16,17,20],[24,19,17,23,"sources"],[24,26,17,30],[24,27,17,31,"shift"],[24,32,17,23],[24,34,17,8],[26,0,18,8],[26,10,18,12,"isObject"],[26,18,18,20],[26,19,18,21,"target"],[26,25,18,20],[26,26,18,12],[26,30,18,32,"isObject"],[26,38,18,40],[26,39,18,41,"source"],[26,45,18,40],[26,46,18,8],[26,48,18,50],[27,0,19,12,"Object"],[27,8,19,12,"Object"],[27,14,19,18],[27,15,19,19,"keys"],[27,19,19,12],[27,20,19,24,"source"],[27,26,19,12],[27,28,19,32,"forEach"],[27,35,19,12],[27,36,19,40],[27,46,19,41,"key"],[27,49,19,40],[27,51,19,49],[28,0,20,16],[28,14,20,20,"isObject"],[28,22,20,28],[28,23,20,29,"source"],[28,29,20,35],[28,30,20,36,"key"],[28,33,20,35],[28,34,20,28],[28,35,20,16],[28,37,20,43],[29,0,21,20],[29,16,21,24],[29,17,21,25,"target"],[29,23,21,31],[29,24,21,32,"key"],[29,27,21,31],[29,28,21,20],[29,30,22,24],[29,53,22,38,"target"],[29,59,22,24],[29,95,22,49,"key"],[29,98,22,24],[29,100,22,55],[29,102,22,24],[30,0,23,20,"mergeDeep"],[30,12,23,20,"mergeDeep"],[30,21,23,29],[30,22,23,30,"target"],[30,28,23,36],[30,29,23,37,"key"],[30,32,23,36],[30,33,23,29],[30,35,23,43,"source"],[30,41,23,49],[30,42,23,50,"key"],[30,45,23,49],[30,46,23,29],[30,47,23,20],[31,0,24,17],[31,11,20,16],[31,17,25,21],[32,0,26,20],[32,35,26,34,"target"],[32,41,26,20],[32,77,26,45,"key"],[32,80,26,20],[32,82,26,51,"source"],[32,88,26,57],[32,89,26,58,"key"],[32,92,26,57],[32,93,26,20],[33,0,27,17],[34,0,28,13],[34,9,19,12],[35,0,29,9],[37,0,30,8],[37,13,30,15,"mergeDeep"],[37,22,30,24],[37,28,30,15],[37,38,30,25,"target"],[37,44,30,15],[37,53,30,36,"sources"],[37,60,30,15],[37,62,30,8],[38,0,31,5],[40,0,10,37],[40,38,10,28,"sources"],[40,45,10,37],[41,0,10,28,"sources"],[41,6,10,28,"sources"],[41,13,10,37],[42,0,10,37],[44,0,32,4],[44,11,32,11,"mergeDeep"],[44,20,32,20],[44,26,32,11],[44,36,32,21],[44,38,32,11],[44,47,32,28,"sources"],[44,54,32,11],[44,56,32,4],[45,0,33,1]],"functionMap":{"names":["<global>","<anonymous>","mergeDeep","isObject","Object.keys.forEach$argument_0"],"mappings":"AAA;eCS;ICC;QCC;SDE;wCEK;aFS;KDG;CDE"}},"type":"js/module"}]}