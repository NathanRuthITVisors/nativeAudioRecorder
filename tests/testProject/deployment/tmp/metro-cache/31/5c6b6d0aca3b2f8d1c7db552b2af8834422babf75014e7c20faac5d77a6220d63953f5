{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./elements/Rect","data":{"isAsync":false}},{"name":"./elements/Circle","data":{"isAsync":false}},{"name":"./elements/Ellipse","data":{"isAsync":false}},{"name":"./elements/Polygon","data":{"isAsync":false}},{"name":"./elements/Polyline","data":{"isAsync":false}},{"name":"./elements/Line","data":{"isAsync":false}},{"name":"./elements/Svg","data":{"isAsync":false}},{"name":"./elements/Path","data":{"isAsync":false}},{"name":"./elements/G","data":{"isAsync":false}},{"name":"./elements/Text","data":{"isAsync":false}},{"name":"./elements/TSpan","data":{"isAsync":false}},{"name":"./elements/TextPath","data":{"isAsync":false}},{"name":"./elements/Use","data":{"isAsync":false}},{"name":"./elements/Image","data":{"isAsync":false}},{"name":"./elements/Symbol","data":{"isAsync":false}},{"name":"./elements/Defs","data":{"isAsync":false}},{"name":"./elements/LinearGradient","data":{"isAsync":false}},{"name":"./elements/RadialGradient","data":{"isAsync":false}},{"name":"./elements/Stop","data":{"isAsync":false}},{"name":"./elements/ClipPath","data":{"isAsync":false}},{"name":"./elements/Pattern","data":{"isAsync":false}},{"name":"./elements/Mask","data":{"isAsync":false}},{"name":"./elements/Marker","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.fetchText = fetchText;\n  exports.SvgUri = SvgUri;\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = _parse;\n  exports.camelCase = exports.SvgFromUri = exports.SvgFromXml = exports.err = exports.tags = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _Rect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./elements/Rect\"));\n\n  var _Circle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./elements/Circle\"));\n\n  var _Ellipse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./elements/Ellipse\"));\n\n  var _Polygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./elements/Polygon\"));\n\n  var _Polyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./elements/Polyline\"));\n\n  var _Line = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./elements/Line\"));\n\n  var _Svg = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./elements/Svg\"));\n\n  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./elements/Path\"));\n\n  var _G = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./elements/G\"));\n\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./elements/Text\"));\n\n  var _TSpan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./elements/TSpan\"));\n\n  var _TextPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./elements/TextPath\"));\n\n  var _Use = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./elements/Use\"));\n\n  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./elements/Image\"));\n\n  var _Symbol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./elements/Symbol\"));\n\n  var _Defs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./elements/Defs\"));\n\n  var _LinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./elements/LinearGradient\"));\n\n  var _RadialGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"./elements/RadialGradient\"));\n\n  var _Stop = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"./elements/Stop\"));\n\n  var _ClipPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30], \"./elements/ClipPath\"));\n\n  var _Pattern = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31], \"./elements/Pattern\"));\n\n  var _Mask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32], \"./elements/Mask\"));\n\n  var _Marker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33], \"./elements/Marker\"));\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var tags = {\n    svg: _Svg.default,\n    circle: _Circle.default,\n    ellipse: _Ellipse.default,\n    g: _G.default,\n    text: _Text.default,\n    tspan: _TSpan.default,\n    textPath: _TextPath.default,\n    path: _Path.default,\n    polygon: _Polygon.default,\n    polyline: _Polyline.default,\n    line: _Line.default,\n    rect: _Rect.default,\n    use: _Use.default,\n    image: _Image.default,\n    symbol: _Symbol.default,\n    defs: _Defs.default,\n    linearGradient: _LinearGradient.default,\n    radialGradient: _RadialGradient.default,\n    stop: _Stop.default,\n    clipPath: _ClipPath.default,\n    pattern: _Pattern.default,\n    mask: _Mask.default,\n    marker: _Marker.default\n  };\n  exports.tags = tags;\n\n  function missingTag() {\n    return null;\n  }\n\n  function SvgAst(_ref) {\n    var ast = _ref.ast,\n        override = _ref.override;\n\n    if (!ast) {\n      return null;\n    }\n\n    var props = ast.props,\n        children = ast.children;\n    return _react.default.createElement(_Svg.default, (0, _extends2.default)({}, props, override), children);\n  }\n\n  function SvgXml(props) {\n    var xml = props.xml,\n        override = props.override;\n    var ast = (0, _react.useMemo)(function () {\n      return xml !== null ? _parse(xml) : null;\n    }, [xml]);\n    return _react.default.createElement(SvgAst, {\n      ast: ast,\n      override: override || props\n    });\n  }\n\n  function fetchText(uri) {\n    var response;\n    return _regenerator.default.async(function fetchText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(response.text());\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var err = console.error.bind(console);\n  exports.err = err;\n\n  function SvgUri(props) {\n    var uri = props.uri;\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        xml = _useState2[0],\n        setXml = _useState2[1];\n\n    (0, _react.useEffect)(function () {\n      uri ? fetchText(uri).then(setXml).catch(err) : setXml(null);\n    }, [uri]);\n    return _react.default.createElement(SvgXml, {\n      xml: xml,\n      override: props\n    });\n  }\n\n  var SvgFromXml = function (_Component) {\n    (0, _inherits2.default)(SvgFromXml, _Component);\n\n    var _super = _createSuper(SvgFromXml);\n\n    function SvgFromXml() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SvgFromXml);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        ast: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(SvgFromXml, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.parse(this.props.xml);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var xml = this.props.xml;\n\n        if (xml !== prevProps.xml) {\n          this.parse(xml);\n        }\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(xml) {\n        try {\n          this.setState({\n            ast: xml ? _parse(xml) : null\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            ast = this.state.ast;\n        return _react.default.createElement(SvgAst, {\n          ast: ast,\n          override: props.override || props\n        });\n      }\n    }]);\n    return SvgFromXml;\n  }(_react.Component);\n\n  exports.SvgFromXml = SvgFromXml;\n\n  var SvgFromUri = function (_Component2) {\n    (0, _inherits2.default)(SvgFromUri, _Component2);\n\n    var _super2 = _createSuper(SvgFromUri);\n\n    function SvgFromUri() {\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, SvgFromUri);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.state = {\n        xml: null\n      };\n      return _this2;\n    }\n\n    (0, _createClass2.default)(SvgFromUri, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.fetch(this.props.uri);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var uri = this.props.uri;\n\n        if (uri !== prevProps.uri) {\n          this.fetch(uri);\n        }\n      }\n    }, {\n      key: \"fetch\",\n      value: function fetch(uri) {\n        return _regenerator.default.async(function fetch$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.t0 = this;\n\n                if (!uri) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _regenerator.default.awrap(fetchText(uri));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 8:\n                _context2.t1 = null;\n\n              case 9:\n                _context2.t2 = _context2.t1;\n                _context2.t3 = {\n                  xml: _context2.t2\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t3);\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t4 = _context2[\"catch\"](0);\n                console.error(_context2.t4);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[0, 14]], Promise);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            xml = this.state.xml;\n        return _react.default.createElement(SvgFromXml, {\n          xml: xml,\n          override: props\n        });\n      }\n    }]);\n    return SvgFromUri;\n  }(_react.Component);\n\n  exports.SvgFromUri = SvgFromUri;\n\n  var upperCase = function upperCase(_match, letter) {\n    return letter.toUpperCase();\n  };\n\n  var camelCase = function camelCase(phrase) {\n    return phrase.replace(/[:-]([a-z])/g, upperCase);\n  };\n\n  exports.camelCase = camelCase;\n\n  function getStyle(string) {\n    var style = {};\n    var declarations = string.split(';');\n    var length = declarations.length;\n\n    for (var i = 0; i < length; i++) {\n      var declaration = declarations[i];\n\n      if (declaration.length !== 0) {\n        var split = declaration.split(':');\n        var _property = split[0];\n        var value = split[1];\n        style[camelCase(_property.trim())] = value.trim();\n      }\n    }\n\n    return style;\n  }\n\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      var Tag = value.Tag,\n          props = value.props,\n          children = value.children;\n      return _react.default.createElement(Tag, (0, _extends2.default)({\n        key: index\n      }, props), children.map(astToReact));\n    }\n\n    return value;\n  }\n\n  function repeat(str, i) {\n    var result = '';\n\n    while (i--) {\n      result += str;\n    }\n\n    return result;\n  }\n\n  var toSpaces = function toSpaces(tabs) {\n    return repeat('  ', tabs.length);\n  };\n\n  function locate(source, i) {\n    var lines = source.split('\\n');\n    var nLines = lines.length;\n    var column = i;\n    var line = 0;\n\n    for (; line < nLines; line++) {\n      var length = lines[line].length;\n\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n\n    var before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    var beforeExec = /(^|\\n).*$/.exec(before);\n    var beforeLine = beforeExec && beforeExec[0] || '';\n    var after = source.slice(i);\n    var afterExec = /.*(\\n|$)/.exec(after);\n    var afterLine = afterExec && afterExec[0];\n    var pad = repeat(' ', beforeLine.length);\n    var snippet = \"\" + beforeLine + afterLine + \"\\n\" + pad + \"^\";\n    return {\n      line: line,\n      column: column,\n      snippet: snippet\n    };\n  }\n\n  var validNameCharacters = /[a-zA-Z0-9:_-]/;\n  var whitespace = /[\\s\\t\\r\\n]/;\n  var quotemarks = /['\"]/;\n\n  function _parse(source, middleware) {\n    var length = source.length;\n    var currentElement = null;\n    var state = metadata;\n    var children = null;\n    var root;\n    var stack = [];\n\n    function error(message) {\n      var _locate = locate(source, i),\n          line = _locate.line,\n          column = _locate.column,\n          snippet = _locate.snippet;\n\n      throw new Error(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n\" + snippet);\n    }\n\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))) {\n        i++;\n      }\n\n      return neutral();\n    }\n\n    function neutral() {\n      var text = '';\n      var char;\n\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n\n      if (source[i] === '<') {\n        return openingTag;\n      }\n\n      return neutral;\n    }\n\n    function openingTag() {\n      var char = source[i];\n\n      if (char === '?') {\n        return neutral;\n      }\n\n      if (char === '!') {\n        var start = i + 1;\n\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n\n        var end = i + 8;\n\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n\n      if (char === '/') {\n        return closingTag;\n      }\n\n      var tag = getName();\n      var props = {};\n      var element = {\n        tag: tag,\n        props: props,\n        children: [],\n        parent: currentElement,\n        Tag: tags[tag] || missingTag\n      };\n\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n\n      getAttributes(props);\n      var style = props.style;\n\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n\n      var selfClosing = false;\n\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      if (!selfClosing) {\n        currentElement = element;\n        children = element.children;\n        stack.push(element);\n      }\n\n      return neutral;\n    }\n\n    function comment() {\n      var index = source.indexOf('-->', i);\n\n      if (!~index) {\n        error('expected -->');\n      }\n\n      i = index + 2;\n      return neutral;\n    }\n\n    function cdata() {\n      var index = source.indexOf(']]>', i);\n\n      if (!~index) {\n        error('expected ]]>');\n      }\n\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n\n    function closingTag() {\n      var tag = getName();\n\n      if (!tag) {\n        error('Expected tag name');\n      }\n\n      if (currentElement && tag !== currentElement.tag) {\n        error(\"Expected closing tag </\" + tag + \"> to match opening tag <\" + currentElement.tag + \">\");\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n\n      if (currentElement) {\n        var _currentElement = currentElement;\n        children = _currentElement.children;\n      }\n\n      return neutral;\n    }\n\n    function getName() {\n      var name = '';\n      var char;\n\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n\n      return name;\n    }\n\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n\n        allowSpaces();\n        var name = getName();\n\n        if (!name) {\n          return;\n        }\n\n        var value = true;\n        allowSpaces();\n\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n\n          if (!isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n\n        props[camelCase(name)] = value;\n      }\n    }\n\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n\n    function getUnquotedAttributeValue() {\n      var value = '';\n\n      do {\n        var char = source[i];\n\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n\n        value += char;\n        i += 1;\n      } while (i < length);\n\n      return value;\n    }\n\n    function getQuotedAttributeValue() {\n      var quotemark = source[i++];\n      var value = '';\n      var escaped = false;\n\n      while (i < length) {\n        var char = source[i++];\n\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n\n        value += escaped ? \"\\\\\" + char : char;\n        escaped = false;\n      }\n\n      return value;\n    }\n\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n\n    var i = 0;\n\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n\n      state = state();\n      i += 1;\n    }\n\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n\n    if (root) {\n      var xml = (middleware ? middleware(root) : root) || root;\n\n      var _ast = xml.children.map(astToReact);\n\n      var jsx = xml;\n      jsx.children = _ast;\n      return jsx;\n    }\n\n    return null;\n  }\n});","lineCount":726,"map":[[34,0,1,0],[36,0,8,0],[38,0,9,0],[40,0,10,0],[42,0,11,0],[44,0,12,0],[46,0,13,0],[48,0,14,0],[50,0,15,0],[52,0,16,0],[54,0,17,0],[56,0,18,0],[58,0,19,0],[60,0,20,0],[62,0,21,0],[64,0,22,0],[66,0,23,0],[68,0,24,0],[70,0,25,0],[72,0,26,0],[74,0,27,0],[76,0,28,0],[78,0,29,0],[80,0,30,0],[86,0,32,7],[86,6,32,13,"tags"],[86,10,32,51],[86,13,32,54],[87,0,33,2,"svg"],[87,4,33,2,"svg"],[87,7,33,5],[87,9,33,7,"Svg"],[87,21,32,54],[88,0,34,2,"circle"],[88,4,34,2,"circle"],[88,10,34,8],[88,12,34,10,"Circle"],[88,27,32,54],[89,0,35,2,"ellipse"],[89,4,35,2,"ellipse"],[89,11,35,9],[89,13,35,11,"Ellipse"],[89,29,32,54],[90,0,36,2,"g"],[90,4,36,2,"g"],[90,5,36,3],[90,7,36,5,"G"],[90,17,32,54],[91,0,37,2,"text"],[91,4,37,2,"text"],[91,8,37,6],[91,10,37,8,"Text"],[91,23,32,54],[92,0,38,2,"tspan"],[92,4,38,2,"tspan"],[92,9,38,7],[92,11,38,9,"TSpan"],[92,25,32,54],[93,0,39,2,"textPath"],[93,4,39,2,"textPath"],[93,12,39,10],[93,14,39,12,"TextPath"],[93,31,32,54],[94,0,40,2,"path"],[94,4,40,2,"path"],[94,8,40,6],[94,10,40,8,"Path"],[94,23,32,54],[95,0,41,2,"polygon"],[95,4,41,2,"polygon"],[95,11,41,9],[95,13,41,11,"Polygon"],[95,29,32,54],[96,0,42,2,"polyline"],[96,4,42,2,"polyline"],[96,12,42,10],[96,14,42,12,"Polyline"],[96,31,32,54],[97,0,43,2,"line"],[97,4,43,2,"line"],[97,8,43,6],[97,10,43,8,"Line"],[97,23,32,54],[98,0,44,2,"rect"],[98,4,44,2,"rect"],[98,8,44,6],[98,10,44,8,"Rect"],[98,23,32,54],[99,0,45,2,"use"],[99,4,45,2,"use"],[99,7,45,5],[99,9,45,7,"Use"],[99,21,32,54],[100,0,46,2,"image"],[100,4,46,2,"image"],[100,9,46,7],[100,11,46,9,"Image"],[100,25,32,54],[101,0,47,2,"symbol"],[101,4,47,2,"symbol"],[101,10,47,8],[101,12,47,10,"Symbol"],[101,27,32,54],[102,0,48,2,"defs"],[102,4,48,2,"defs"],[102,8,48,6],[102,10,48,8,"Defs"],[102,23,32,54],[103,0,49,2,"linearGradient"],[103,4,49,2,"linearGradient"],[103,18,49,16],[103,20,49,18,"LinearGradient"],[103,43,32,54],[104,0,50,2,"radialGradient"],[104,4,50,2,"radialGradient"],[104,18,50,16],[104,20,50,18,"RadialGradient"],[104,43,32,54],[105,0,51,2,"stop"],[105,4,51,2,"stop"],[105,8,51,6],[105,10,51,8,"Stop"],[105,23,32,54],[106,0,52,2,"clipPath"],[106,4,52,2,"clipPath"],[106,12,52,10],[106,14,52,12,"ClipPath"],[106,31,32,54],[107,0,53,2,"pattern"],[107,4,53,2,"pattern"],[107,11,53,9],[107,13,53,11,"Pattern"],[107,29,32,54],[108,0,54,2,"mask"],[108,4,54,2,"mask"],[108,8,54,6],[108,10,54,8,"Mask"],[108,23,32,54],[109,0,55,2,"marker"],[109,4,55,2,"marker"],[109,10,55,8],[109,12,55,10,"Marker"],[110,0,32,54],[110,3,32,7],[113,0,58,0],[113,11,58,9,"missingTag"],[113,21,58,0],[113,24,58,22],[114,0,59,2],[114,11,59,9],[114,15,59,2],[115,0,60,1],[117,0,92,7],[117,11,92,16,"SvgAst"],[117,17,92,7],[117,24,92,52],[118,0,92,52],[118,8,92,25,"ast"],[118,11,92,52],[118,19,92,25,"ast"],[118,22,92,52],[119,0,92,52],[119,8,92,30,"override"],[119,16,92,52],[119,24,92,30,"override"],[119,32,92,52],[121,0,93,2],[121,8,93,6],[121,9,93,7,"ast"],[121,12,93,2],[121,14,93,12],[122,0,94,4],[122,13,94,11],[122,17,94,4],[123,0,95,3],[125,0,92,52],[125,8,96,10,"props"],[125,13,92,52],[125,16,96,30,"ast"],[125,19,92,52],[125,20,96,10,"props"],[125,25,92,52],[126,0,92,52],[126,8,96,17,"children"],[126,16,92,52],[126,19,96,30,"ast"],[126,22,92,52],[126,23,96,17,"children"],[126,31,92,52],[127,0,97,2],[127,11,98,4],[127,40,98,5],[127,52,98,4],[127,81,98,13,"props"],[127,86,98,4],[127,88,98,24,"override"],[127,96,98,4],[127,99,99,7,"children"],[127,107,98,4],[127,108,97,2],[128,0,102,1],[130,0,104,7],[130,11,104,16,"SvgXml"],[130,17,104,7],[130,18,104,23,"props"],[130,23,104,7],[130,25,104,40],[131,0,104,40],[131,8,105,10,"xml"],[131,11,104,40],[131,14,105,28,"props"],[131,19,104,40],[131,20,105,10,"xml"],[131,23,104,40],[132,0,104,40],[132,8,105,15,"override"],[132,16,104,40],[132,19,105,28,"props"],[132,24,104,40],[132,25,105,15,"override"],[132,33,104,40],[133,0,106,2],[133,8,106,8,"ast"],[133,11,106,11],[133,14,106,14],[133,34,106,37],[134,0,106,37],[134,13,106,44,"xml"],[134,16,106,47],[134,21,106,52],[134,25,106,44],[134,28,106,59,"parse"],[134,34,106,64],[134,35,106,65,"xml"],[134,38,106,64],[134,39,106,44],[134,42,106,72],[134,46,106,37],[135,0,106,37],[135,5,106,14],[135,7,106,79],[135,8,107,4,"xml"],[135,11,106,79],[135,12,106,14],[135,13,106,2],[136,0,109,2],[136,11,109,9],[136,40,109,10],[136,46,109,9],[137,0,109,17],[137,6,109,17],[137,9,109,20],[137,11,109,22,"ast"],[137,14,109,9],[138,0,109,27],[138,6,109,27],[138,14,109,35],[138,16,109,37,"override"],[138,24,109,45],[138,28,109,49,"props"],[139,0,109,9],[139,6,109,2],[140,0,110,1],[142,0,112,7],[142,11,112,22,"fetchText"],[142,20,112,7],[142,21,112,32,"uri"],[142,24,112,7],[143,0,112,7],[144,0,112,7],[145,0,112,7],[146,0,112,7],[147,0,112,7],[148,0,112,7],[149,0,112,7],[149,46,113,25,"fetch"],[149,51,113,30],[149,52,113,31,"uri"],[149,55,113,30],[149,56,112,7],[151,0,112,7],[152,0,113,8,"response"],[152,12,113,8,"response"],[152,20,112,7],[153,0,112,7],[154,0,112,7],[154,46,114,15,"response"],[154,54,114,23],[154,55,114,24,"text"],[154,59,114,15],[154,61,112,7],[156,0,112,7],[157,0,112,7],[159,0,112,7],[160,0,112,7],[161,0,112,7],[162,0,112,7],[163,0,112,7],[164,0,112,7],[165,0,112,7],[167,0,117,7],[167,6,117,13,"err"],[167,9,117,16],[167,12,117,19,"console"],[167,19,117,26],[167,20,117,27,"error"],[167,25,117,19],[167,26,117,33,"bind"],[167,30,117,19],[167,31,117,38,"console"],[167,38,117,19],[167,39,117,7],[170,0,119,7],[170,11,119,16,"SvgUri"],[170,17,119,7],[170,18,119,23,"props"],[170,23,119,7],[170,25,119,40],[171,0,119,40],[171,8,120,10,"uri"],[171,11,119,40],[171,14,120,18,"props"],[171,19,119,40],[171,20,120,10,"uri"],[171,23,119,40],[173,0,119,40],[173,20,121,24],[173,41,121,48],[173,45,121,24],[173,46,119,40],[174,0,119,40],[175,0,119,40],[175,8,121,9,"xml"],[175,11,119,40],[176,0,119,40],[176,8,121,14,"setXml"],[176,14,119,40],[178,0,122,2],[178,26,122,12],[178,38,122,18],[179,0,123,4,"uri"],[179,6,123,4,"uri"],[179,9,123,7],[179,12,124,8,"fetchText"],[179,21,124,17],[179,22,124,18,"uri"],[179,25,124,17],[179,26,124,8],[179,27,125,11,"then"],[179,31,124,8],[179,32,125,16,"setXml"],[179,38,124,8],[179,40,126,11,"catch"],[179,45,124,8],[179,46,126,17,"err"],[179,49,124,8],[179,50,123,7],[179,53,127,8,"setXml"],[179,59,127,14],[179,60,127,15],[179,64,127,14],[179,65,123,4],[180,0,128,3],[180,5,122,2],[180,7,128,5],[180,8,128,6,"uri"],[180,11,128,5],[180,12,122,2],[181,0,129,2],[181,11,129,9],[181,40,129,10],[181,46,129,9],[182,0,129,17],[182,6,129,17],[182,9,129,20],[182,11,129,22,"xml"],[182,14,129,9],[183,0,129,27],[183,6,129,27],[183,14,129,35],[183,16,129,37,"props"],[184,0,129,9],[184,6,129,2],[185,0,130,1],[187,6,134,13,"SvgFromXml"],[187,16],[202,12,135,2,"state"],[202,17],[202,20,135,10],[203,0,135,12,"ast"],[203,8,135,12,"ast"],[203,11,135,15],[203,13,135,17],[204,0,135,10],[204,7],[210,42,136,22],[211,0,137,4],[211,13,137,9,"parse"],[211,18,137,4],[211,19,137,15],[211,24,137,20,"props"],[211,29,137,15],[211,30,137,26,"xml"],[211,33,137,4],[212,0,138,3],[215,41,139,21,"prevProps"],[215,50],[215,52,139,56],[216,0,139,56],[216,12,140,12,"xml"],[216,15,139,56],[216,18,140,20],[216,23,140,25,"props"],[216,28,139,56],[216,29,140,12,"xml"],[216,32,139,56],[218,0,141,4],[218,12,141,8,"xml"],[218,15,141,11],[218,20,141,16,"prevProps"],[218,29,141,25],[218,30,141,26,"xml"],[218,33,141,4],[218,35,141,31],[219,0,142,6],[219,15,142,11,"parse"],[219,20,142,6],[219,21,142,17,"xml"],[219,24,142,6],[220,0,143,5],[221,0,144,3],[224,28,145,8,"xml"],[224,31],[224,33,145,28],[225,0,146,4],[225,12,146,8],[226,0,147,6],[226,15,147,11,"setState"],[226,23,147,6],[226,24,147,20],[227,0,147,22,"ast"],[227,12,147,22,"ast"],[227,15,147,25],[227,17,147,27,"xml"],[227,20,147,30],[227,23,147,33,"parse"],[227,29,147,38],[227,30,147,39,"xml"],[227,33,147,38],[227,34,147,30],[227,37,147,46],[228,0,147,20],[228,11,147,6],[229,0,148,5],[229,9,146,4],[229,10,148,6],[229,17,148,13,"e"],[229,18,148,6],[229,20,148,16],[230,0,149,6,"console"],[230,10,149,6,"console"],[230,17,149,13],[230,18,149,14,"error"],[230,23,149,6],[230,24,149,20,"e"],[230,25,149,6],[231,0,150,5],[232,0,151,3],[235,31,152,11],[236,0,152,11],[236,12,154,6,"props"],[236,17,152,11],[236,20,156,8],[236,24,152,11],[236,25,154,6,"props"],[236,30,152,11],[237,0,152,11],[237,12,155,15,"ast"],[237,15,152,11],[237,18,156,8],[237,22,152,11],[237,23,155,6,"state"],[237,28,152,11],[237,29,155,15,"ast"],[237,32,152,11],[238,0,157,4],[238,15,157,11],[238,44,157,12],[238,50,157,11],[239,0,157,19],[239,10,157,19],[239,13,157,22],[239,15,157,24,"ast"],[239,18,157,11],[240,0,157,29],[240,10,157,29],[240,18,157,37],[240,20,157,39,"props"],[240,25,157,44],[240,26,157,45,"override"],[240,34,157,39],[240,38,157,57,"props"],[241,0,157,11],[241,10,157,4],[242,0,158,3],[245,4,134,32,"Component"],[245,20],[249,6,161,13,"SvgFromUri"],[249,16],[264,13,162,2,"state"],[264,18],[264,21,162,10],[265,0,162,12,"xml"],[265,8,162,12,"xml"],[265,11,162,15],[265,13,162,17],[266,0,162,10],[266,7],[272,42,163,22],[273,0,164,4],[273,13,164,9,"fetch"],[273,18,164,4],[273,19,164,15],[273,24,164,20,"props"],[273,29,164,15],[273,30,164,26,"uri"],[273,33,164,4],[274,0,165,3],[277,41,166,21,"prevProps"],[277,50],[277,52,166,56],[278,0,166,56],[278,12,167,12,"uri"],[278,15,166,56],[278,18,167,20],[278,23,167,25,"props"],[278,28,166,56],[278,29,167,12,"uri"],[278,32,166,56],[280,0,168,4],[280,12,168,8,"uri"],[280,15,168,11],[280,20,168,16,"prevProps"],[280,29,168,25],[280,30,168,26,"uri"],[280,33,168,4],[280,35,168,31],[281,0,169,6],[281,15,169,11,"fetch"],[281,20,169,6],[281,21,169,17,"uri"],[281,24,169,6],[282,0,170,5],[283,0,171,3],[286,28,172,14,"uri"],[286,31],[292,31,174,6],[292,35],[294,21,174,27,"uri"],[294,24],[300,50,174,39,"fetchText"],[300,59,174,48],[300,60,174,49,"uri"],[300,63,174,48],[300,64],[308,31,174,56],[308,35],[313,0,174,22,"xml"],[313,18,174,22,"xml"],[313,21],[316,29,174,11,"setState"],[316,37],[324,0,176,6,"console"],[324,16,176,6,"console"],[324,23,176,13],[324,24,176,14,"error"],[324,29,176,6],[335,31,179,11],[336,0,179,11],[336,12,181,6,"props"],[336,17,179,11],[336,20,183,8],[336,24,179,11],[336,25,181,6,"props"],[336,30,179,11],[337,0,179,11],[337,12,182,15,"xml"],[337,15,179,11],[337,18,183,8],[337,22,179,11],[337,23,182,6,"state"],[337,28,179,11],[337,29,182,15,"xml"],[337,32,179,11],[338,0,184,4],[338,15,184,11],[338,44,184,12],[338,54,184,11],[339,0,184,23],[339,10,184,23],[339,13,184,26],[339,15,184,28,"xml"],[339,18,184,11],[340,0,184,33],[340,10,184,33],[340,18,184,41],[340,20,184,43,"props"],[341,0,184,11],[341,10,184,4],[342,0,185,3],[345,4,161,32,"Component"],[345,20],[349,0,188,0],[349,6,188,6,"upperCase"],[349,15,188,15],[349,18,188,18],[349,27,188,6,"upperCase"],[349,36,188,18],[349,37,188,19,"_match"],[349,43,188,18],[349,45,188,35,"letter"],[349,51,188,18],[350,0,188,18],[350,11,188,54,"letter"],[350,17,188,60],[350,18,188,61,"toUpperCase"],[350,29,188,54],[350,31,188,18],[351,0,188,18],[351,3,188,0],[353,0,190,7],[353,6,190,13,"camelCase"],[353,15,190,22],[353,18,190,25],[353,27,190,13,"camelCase"],[353,36,190,25],[353,37,190,26,"phrase"],[353,43,190,25],[354,0,190,25],[354,11,191,2,"phrase"],[354,17,191,8],[354,18,191,9,"replace"],[354,25,191,2],[354,26,191,17],[354,40,191,2],[354,42,191,33,"upperCase"],[354,51,191,2],[354,52,190,25],[355,0,190,25],[355,3,190,7],[359,0,195,7],[359,11,195,16,"getStyle"],[359,19,195,7],[359,20,195,25,"string"],[359,26,195,7],[359,28,195,49],[360,0,196,2],[360,8,196,8,"style"],[360,13,196,21],[360,16,196,24],[360,18,196,2],[361,0,197,2],[361,8,197,8,"declarations"],[361,20,197,20],[361,23,197,23,"string"],[361,29,197,29],[361,30,197,30,"split"],[361,35,197,23],[361,36,197,36],[361,39,197,23],[361,40,197,2],[362,0,195,49],[362,8,198,10,"length"],[362,14,195,49],[362,17,198,21,"declarations"],[362,29,195,49],[362,30,198,10,"length"],[362,36,195,49],[364,0,199,2],[364,9,199,7],[364,13,199,11,"i"],[364,14,199,12],[364,17,199,15],[364,18,199,2],[364,20,199,18,"i"],[364,21,199,19],[364,24,199,22,"length"],[364,30,199,2],[364,32,199,30,"i"],[364,33,199,31],[364,35,199,2],[364,37,199,35],[365,0,200,4],[365,10,200,10,"declaration"],[365,21,200,21],[365,24,200,24,"declarations"],[365,36,200,36],[365,37,200,37,"i"],[365,38,200,36],[365,39,200,4],[367,0,201,4],[367,10,201,8,"declaration"],[367,21,201,19],[367,22,201,20,"length"],[367,28,201,8],[367,33,201,31],[367,34,201,4],[367,36,201,34],[368,0,202,6],[368,12,202,12,"split"],[368,17,202,17],[368,20,202,20,"declaration"],[368,31,202,31],[368,32,202,32,"split"],[368,37,202,20],[368,38,202,38],[368,41,202,20],[368,42,202,6],[369,0,203,6],[369,12,203,12,"property"],[369,21,203,20],[369,24,203,23,"split"],[369,29,203,28],[369,30,203,29],[369,31,203,28],[369,32,203,6],[370,0,204,6],[370,12,204,12,"value"],[370,17,204,17],[370,20,204,20,"split"],[370,25,204,25],[370,26,204,26],[370,27,204,25],[370,28,204,6],[371,0,205,6,"style"],[371,8,205,6,"style"],[371,13,205,11],[371,14,205,12,"camelCase"],[371,23,205,21],[371,24,205,22,"property"],[371,33,205,30],[371,34,205,31,"trim"],[371,38,205,22],[371,40,205,21],[371,41,205,11],[371,42,205,6],[371,45,205,42,"value"],[371,50,205,47],[371,51,205,48,"trim"],[371,55,205,42],[371,57,205,6],[372,0,206,5],[373,0,207,3],[375,0,208,2],[375,11,208,9,"style"],[375,16,208,2],[376,0,209,1],[378,0,211,7],[378,11,211,16,"astToReact"],[378,21,211,7],[378,22,212,2,"value"],[378,27,211,7],[378,29,213,2,"index"],[378,34,211,7],[378,36,214,24],[379,0,215,2],[379,8,215,6],[379,15,215,13,"value"],[379,20,215,6],[379,25,215,23],[379,33,215,2],[379,35,215,33],[380,0,215,33],[380,10,216,12,"Tag"],[380,13,215,33],[380,16,216,37,"value"],[380,21,215,33],[380,22,216,12,"Tag"],[380,25,215,33],[381,0,215,33],[381,10,216,17,"props"],[381,15,215,33],[381,18,216,37,"value"],[381,23,215,33],[381,24,216,17,"props"],[381,29,215,33],[382,0,215,33],[382,10,216,24,"children"],[382,18,215,33],[382,21,216,37,"value"],[382,26,215,33],[382,27,216,24,"children"],[382,35,215,33],[383,0,217,4],[383,13,218,6],[383,42,218,7],[383,45,218,6],[384,0,218,11],[384,8,218,11],[384,11,218,14],[384,13,218,16,"index"],[385,0,218,6],[385,9,218,27,"props"],[385,14,218,6],[385,17,219,10,"children"],[385,25,219,9],[385,26,219,40,"map"],[385,29,219,9],[385,30,219,44,"astToReact"],[385,40,219,9],[385,41,218,6],[385,42,217,4],[386,0,222,3],[388,0,223,2],[388,11,223,9,"value"],[388,16,223,2],[389,0,224,1],[391,0,228,0],[391,11,228,9,"repeat"],[391,17,228,0],[391,18,228,16,"str"],[391,21,228,0],[391,23,228,29,"i"],[391,24,228,0],[391,26,228,40],[392,0,229,2],[392,8,229,6,"result"],[392,14,229,12],[392,17,229,15],[392,19,229,2],[394,0,230,2],[394,11,230,9,"i"],[394,12,230,10],[394,14,230,2],[394,16,230,14],[395,0,231,4,"result"],[395,6,231,4,"result"],[395,12,231,10],[395,16,231,14,"str"],[395,19,231,4],[396,0,232,3],[398,0,233,2],[398,11,233,9,"result"],[398,17,233,2],[399,0,234,1],[401,0,236,0],[401,6,236,6,"toSpaces"],[401,14,236,14],[401,17,236,17],[401,26,236,6,"toSpaces"],[401,34,236,17],[401,35,236,18,"tabs"],[401,39,236,17],[402,0,236,17],[402,11,236,35,"repeat"],[402,17,236,41],[402,18,236,42],[402,22,236,41],[402,24,236,48,"tabs"],[402,28,236,52],[402,29,236,53,"length"],[402,35,236,41],[402,36,236,17],[403,0,236,17],[403,3,236,0],[405,0,238,0],[405,11,238,9,"locate"],[405,17,238,0],[405,18,238,16,"source"],[405,24,238,0],[405,26,238,32,"i"],[405,27,238,0],[405,29,238,43],[406,0,239,2],[406,8,239,8,"lines"],[406,13,239,13],[406,16,239,16,"source"],[406,22,239,22],[406,23,239,23,"split"],[406,28,239,16],[406,29,239,29],[406,33,239,16],[406,34,239,2],[407,0,240,2],[407,8,240,8,"nLines"],[407,14,240,14],[407,17,240,17,"lines"],[407,22,240,22],[407,23,240,23,"length"],[407,29,240,2],[408,0,241,2],[408,8,241,6,"column"],[408,14,241,12],[408,17,241,15,"i"],[408,18,241,2],[409,0,242,2],[409,8,242,6,"line"],[409,12,242,10],[409,15,242,13],[409,16,242,2],[411,0,243,2],[411,11,243,9,"line"],[411,15,243,13],[411,18,243,16,"nLines"],[411,24,243,2],[411,26,243,24,"line"],[411,30,243,28],[411,32,243,2],[411,34,243,32],[412,0,243,32],[412,10,244,12,"length"],[412,16,243,32],[412,19,244,23,"lines"],[412,24,244,28],[412,25,244,29,"line"],[412,29,244,28],[412,30,243,32],[412,31,244,12,"length"],[412,37,243,32],[414,0,245,4],[414,10,245,8,"column"],[414,16,245,14],[414,20,245,18,"length"],[414,26,245,4],[414,28,245,26],[415,0,246,6,"column"],[415,8,246,6,"column"],[415,14,246,12],[415,18,246,16,"length"],[415,24,246,6],[416,0,247,5],[416,7,245,4],[416,13,247,11],[417,0,248,6],[418,0,249,5],[419,0,250,3],[421,0,251,2],[421,8,251,8,"before"],[421,14,251,14],[421,17,251,17,"source"],[421,23,251,23],[421,24,251,24,"slice"],[421,29,251,17],[421,30,251,30],[421,31,251,17],[421,33,251,33,"i"],[421,34,251,17],[421,36,251,36,"replace"],[421,43,251,17],[421,44,251,44],[421,50,251,17],[421,52,251,52,"toSpaces"],[421,60,251,17],[421,61,251,2],[422,0,252,2],[422,8,252,8,"beforeExec"],[422,18,252,18],[422,21,252,21],[422,33,252,33,"exec"],[422,37,252,21],[422,38,252,38,"before"],[422,44,252,21],[422,45,252,2],[423,0,253,2],[423,8,253,8,"beforeLine"],[423,18,253,18],[423,21,253,22,"beforeExec"],[423,31,253,32],[423,35,253,36,"beforeExec"],[423,45,253,46],[423,46,253,47],[423,47,253,46],[423,48,253,21],[423,52,253,54],[423,54,253,2],[424,0,254,2],[424,8,254,8,"after"],[424,13,254,13],[424,16,254,16,"source"],[424,22,254,22],[424,23,254,23,"slice"],[424,28,254,16],[424,29,254,29,"i"],[424,30,254,16],[424,31,254,2],[425,0,255,2],[425,8,255,8,"afterExec"],[425,17,255,17],[425,20,255,20],[425,31,255,31,"exec"],[425,35,255,20],[425,36,255,36,"after"],[425,41,255,20],[425,42,255,2],[426,0,256,2],[426,8,256,8,"afterLine"],[426,17,256,17],[426,20,256,20,"afterExec"],[426,29,256,29],[426,33,256,33,"afterExec"],[426,42,256,42],[426,43,256,43],[426,44,256,42],[426,45,256,2],[427,0,257,2],[427,8,257,8,"pad"],[427,11,257,11],[427,14,257,14,"repeat"],[427,20,257,20],[427,21,257,21],[427,24,257,20],[427,26,257,26,"beforeLine"],[427,36,257,36],[427,37,257,37,"length"],[427,43,257,20],[427,44,257,2],[428,0,258,2],[428,8,258,8,"snippet"],[428,15,258,15],[428,23,258,21,"beforeLine"],[428,33,258,15],[428,36,258,34,"afterLine"],[428,45,258,15],[428,55,258,48,"pad"],[428,58,258,15],[428,64,258,2],[429,0,259,2],[429,11,259,9],[430,0,259,11,"line"],[430,6,259,11,"line"],[430,10,259,15],[430,12,259,11,"line"],[430,16,259,9],[431,0,259,17,"column"],[431,6,259,17,"column"],[431,12,259,23],[431,14,259,17,"column"],[431,20,259,9],[432,0,259,25,"snippet"],[432,6,259,25,"snippet"],[432,13,259,32],[432,15,259,25,"snippet"],[433,0,259,9],[433,5,259,2],[434,0,260,1],[436,0,262,0],[436,6,262,6,"validNameCharacters"],[436,25,262,25],[436,28,262,28],[436,44,262,0],[437,0,263,0],[437,6,263,6,"whitespace"],[437,16,263,16],[437,19,263,19],[437,31,263,0],[438,0,264,0],[438,6,264,6,"quotemarks"],[438,16,264,16],[438,19,264,19],[438,25,264,0],[440,0,268,7],[440,11,268,16,"parse"],[440,17,268,7],[440,18,268,22,"source"],[440,24,268,7],[440,26,268,38,"middleware"],[440,36,268,7],[440,38,268,78],[441,0,269,2],[441,8,269,8,"length"],[441,14,269,14],[441,17,269,17,"source"],[441,23,269,23],[441,24,269,24,"length"],[441,30,269,2],[442,0,270,2],[442,8,270,6,"currentElement"],[442,22,270,35],[442,25,270,38],[442,29,270,2],[443,0,271,2],[443,8,271,6,"state"],[443,13,271,11],[443,16,271,14,"metadata"],[443,24,271,2],[444,0,272,2],[444,8,272,6,"children"],[444,16,272,14],[444,19,272,17],[444,23,272,2],[445,0,273,2],[445,8,273,6,"root"],[445,12,273,2],[446,0,274,2],[446,8,274,6,"stack"],[446,13,274,21],[446,16,274,24],[446,18,274,2],[448,0,276,2],[448,13,276,11,"error"],[448,18,276,2],[448,19,276,17,"message"],[448,26,276,2],[448,28,276,34],[449,0,276,34],[449,20,277,38,"locate"],[449,26,277,44],[449,27,277,45,"source"],[449,33,277,44],[449,35,277,53,"i"],[449,36,277,44],[449,37,276,34],[450,0,276,34],[450,10,277,12,"line"],[450,14,276,34],[450,25,277,12,"line"],[450,29,276,34],[451,0,276,34],[451,10,277,18,"column"],[451,16,276,34],[451,27,277,18,"column"],[451,33,276,34],[452,0,276,34],[452,10,277,26,"snippet"],[452,17,276,34],[452,28,277,26,"snippet"],[452,35,276,34],[454,0,278,4],[454,12,278,10],[454,16,278,14,"Error"],[454,21,278,10],[454,22,279,9,"message"],[454,29,278,10],[454,39,279,21,"line"],[454,43,278,10],[454,52,279,29,"column"],[454,58,278,10],[454,137,279,109,"snippet"],[454,144,278,10],[454,145,278,4],[455,0,281,3],[457,0,283,2],[457,13,283,11,"metadata"],[457,21,283,2],[457,24,283,22],[458,0,284,4],[458,13,285,6,"i"],[458,14,285,7],[458,17,285,10],[458,18,285,6],[458,21,285,14,"length"],[458,27,285,6],[458,32,286,7,"source"],[458,38,286,13],[458,39,286,14,"i"],[458,40,286,13],[458,41,286,7],[458,46,286,21],[458,49,286,7],[458,53,286,28],[458,54,286,29,"validNameCharacters"],[458,73,286,48],[458,74,286,49,"test"],[458,78,286,29],[458,79,286,54,"source"],[458,85,286,60],[458,86,286,61,"i"],[458,87,286,62],[458,90,286,65],[458,91,286,60],[458,92,286,29],[458,93,285,6],[458,94,284,4],[458,96,287,6],[459,0,288,6,"i"],[459,8,288,6,"i"],[459,9,288,7],[460,0,289,5],[462,0,291,4],[462,13,291,11,"neutral"],[462,20,291,18],[462,22,291,4],[463,0,292,3],[465,0,294,2],[465,13,294,11,"neutral"],[465,20,294,2],[465,23,294,21],[466,0,295,4],[466,10,295,8,"text"],[466,14,295,12],[466,17,295,15],[466,19,295,4],[467,0,296,4],[467,10,296,8,"char"],[467,14,296,4],[469,0,297,4],[469,13,297,11,"i"],[469,14,297,12],[469,17,297,15,"length"],[469,23,297,11],[469,27,297,25],[469,28,297,26,"char"],[469,32,297,30],[469,35,297,33,"source"],[469,41,297,39],[469,42,297,40,"i"],[469,43,297,39],[469,44,297,25],[469,50,297,48],[469,53,297,4],[469,55,297,53],[470,0,298,6,"text"],[470,8,298,6,"text"],[470,12,298,10],[470,16,298,14,"char"],[470,20,298,6],[471,0,299,6,"i"],[471,8,299,6,"i"],[471,9,299,7],[471,13,299,11],[471,14,299,6],[472,0,300,5],[474,0,302,4],[474,10,302,8],[474,15,302,13,"test"],[474,19,302,8],[474,20,302,18,"text"],[474,24,302,8],[474,25,302,4],[474,27,302,25],[475,0,303,6,"children"],[475,8,303,6,"children"],[475,16,303,14],[475,17,303,15,"push"],[475,21,303,6],[475,22,303,20,"text"],[475,26,303,6],[476,0,304,5],[478,0,306,4],[478,10,306,8,"source"],[478,16,306,14],[478,17,306,15,"i"],[478,18,306,14],[478,19,306,8],[478,24,306,22],[478,27,306,4],[478,29,306,27],[479,0,307,6],[479,15,307,13,"openingTag"],[479,25,307,6],[480,0,308,5],[482,0,310,4],[482,13,310,11,"neutral"],[482,20,310,4],[483,0,311,3],[485,0,313,2],[485,13,313,11,"openingTag"],[485,23,313,2],[485,26,313,24],[486,0,314,4],[486,10,314,10,"char"],[486,14,314,14],[486,17,314,17,"source"],[486,23,314,23],[486,24,314,24,"i"],[486,25,314,23],[486,26,314,4],[488,0,316,4],[488,10,316,8,"char"],[488,14,316,12],[488,19,316,17],[488,22,316,4],[488,24,316,22],[489,0,317,6],[489,15,317,13,"neutral"],[489,22,317,6],[490,0,318,5],[492,0,320,4],[492,10,320,8,"char"],[492,14,320,12],[492,19,320,17],[492,22,320,4],[492,24,320,22],[493,0,321,6],[493,12,321,12,"start"],[493,17,321,17],[493,20,321,20,"i"],[493,21,321,21],[493,24,321,24],[493,25,321,6],[495,0,322,6],[495,12,322,10,"source"],[495,18,322,16],[495,19,322,17,"slice"],[495,24,322,10],[495,25,322,23,"start"],[495,30,322,10],[495,32,322,30,"i"],[495,33,322,31],[495,36,322,34],[495,37,322,10],[495,43,322,41],[495,47,322,6],[495,49,322,47],[496,0,323,8],[496,17,323,15,"comment"],[496,24,323,8],[497,0,324,7],[499,0,325,6],[499,12,325,12,"end"],[499,15,325,15],[499,18,325,18,"i"],[499,19,325,19],[499,22,325,22],[499,23,325,6],[501,0,326,6],[501,12,326,10,"source"],[501,18,326,16],[501,19,326,17,"slice"],[501,24,326,10],[501,25,326,23,"start"],[501,30,326,10],[501,32,326,30,"end"],[501,35,326,10],[501,41,326,39],[501,50,326,6],[501,52,326,50],[502,0,327,8],[502,17,327,15,"cdata"],[502,22,327,8],[503,0,328,7],[505,0,329,6],[505,12,329,10],[505,23,329,21,"test"],[505,27,329,10],[505,28,329,26,"source"],[505,34,329,32],[505,35,329,33,"slice"],[505,40,329,26],[505,41,329,39,"start"],[505,46,329,26],[505,48,329,46,"end"],[505,51,329,26],[505,52,329,10],[505,53,329,6],[505,55,329,53],[506,0,330,8],[506,17,330,15,"neutral"],[506,24,330,8],[507,0,331,7],[508,0,332,5],[510,0,334,4],[510,10,334,8,"char"],[510,14,334,12],[510,19,334,17],[510,22,334,4],[510,24,334,22],[511,0,335,6],[511,15,335,13,"closingTag"],[511,25,335,6],[512,0,336,5],[514,0,338,4],[514,10,338,10,"tag"],[514,13,338,13],[514,16,338,16,"getName"],[514,23,338,23],[514,25,338,4],[515,0,339,4],[515,10,339,10,"props"],[515,15,339,64],[515,18,339,67],[515,20,339,4],[516,0,340,4],[516,10,340,10,"element"],[516,17,340,25],[516,20,340,28],[517,0,341,6,"tag"],[517,8,341,6,"tag"],[517,11,341,9],[517,13,341,6,"tag"],[517,16,340,28],[518,0,342,6,"props"],[518,8,342,6,"props"],[518,13,342,11],[518,15,342,6,"props"],[518,20,340,28],[519,0,343,6,"children"],[519,8,343,6,"children"],[519,16,343,14],[519,18,343,16],[519,20,340,28],[520,0,344,6,"parent"],[520,8,344,6,"parent"],[520,14,344,12],[520,16,344,14,"currentElement"],[520,30,340,28],[521,0,345,6,"Tag"],[521,8,345,6,"Tag"],[521,11,345,9],[521,13,345,11,"tags"],[521,17,345,15],[521,18,345,16,"tag"],[521,21,345,15],[521,22,345,11],[521,26,345,24,"missingTag"],[522,0,340,28],[522,7,340,4],[524,0,348,4],[524,10,348,8,"currentElement"],[524,24,348,4],[524,26,348,24],[525,0,349,6,"children"],[525,8,349,6,"children"],[525,16,349,14],[525,17,349,15,"push"],[525,21,349,6],[525,22,349,20,"element"],[525,29,349,6],[526,0,350,5],[526,7,348,4],[526,13,350,11],[527,0,351,6,"root"],[527,8,351,6,"root"],[527,12,351,10],[527,15,351,13,"element"],[527,22,351,6],[528,0,352,5],[530,0,354,4,"getAttributes"],[530,6,354,4,"getAttributes"],[530,19,354,17],[530,20,354,18,"props"],[530,25,354,17],[530,26,354,4],[531,0,313,24],[531,10,356,12,"style"],[531,15,313,24],[531,18,356,22,"props"],[531,23,313,24],[531,24,356,12,"style"],[531,29,313,24],[533,0,357,4],[533,10,357,8],[533,17,357,15,"style"],[533,22,357,8],[533,27,357,25],[533,35,357,4],[533,37,357,35],[534,0,358,6,"element"],[534,8,358,6,"element"],[534,15,358,13],[534,16,358,14,"styles"],[534,22,358,6],[534,25,358,23,"style"],[534,30,358,6],[535,0,359,6,"props"],[535,8,359,6,"props"],[535,13,359,11],[535,14,359,12,"style"],[535,19,359,6],[535,22,359,20,"getStyle"],[535,30,359,28],[535,31,359,29,"style"],[535,36,359,28],[535,37,359,6],[536,0,360,5],[538,0,362,4],[538,10,362,8,"selfClosing"],[538,21,362,19],[538,24,362,22],[538,29,362,4],[540,0,364,4],[540,10,364,8,"source"],[540,16,364,14],[540,17,364,15,"i"],[540,18,364,14],[540,19,364,8],[540,24,364,22],[540,27,364,4],[540,29,364,27],[541,0,365,6,"i"],[541,8,365,6,"i"],[541,9,365,7],[541,13,365,11],[541,14,365,6],[542,0,366,6,"selfClosing"],[542,8,366,6,"selfClosing"],[542,19,366,17],[542,22,366,20],[542,26,366,6],[543,0,367,5],[545,0,369,4],[545,10,369,8,"source"],[545,16,369,14],[545,17,369,15,"i"],[545,18,369,14],[545,19,369,8],[545,24,369,22],[545,27,369,4],[545,29,369,27],[546,0,370,6,"error"],[546,8,370,6,"error"],[546,13,370,11],[546,14,370,12],[546,26,370,11],[546,27,370,6],[547,0,371,5],[549,0,373,4],[549,10,373,8],[549,11,373,9,"selfClosing"],[549,22,373,4],[549,24,373,22],[550,0,374,6,"currentElement"],[550,8,374,6,"currentElement"],[550,22,374,20],[550,25,374,23,"element"],[550,32,374,6],[551,0,375,9,"children"],[551,8,375,9,"children"],[551,16,373,22],[551,19,375,22,"element"],[551,26,373,22],[551,27,375,9,"children"],[551,35,373,22],[552,0,376,6,"stack"],[552,8,376,6,"stack"],[552,13,376,11],[552,14,376,12,"push"],[552,18,376,6],[552,19,376,17,"element"],[552,26,376,6],[553,0,377,5],[555,0,379,4],[555,13,379,11,"neutral"],[555,20,379,4],[556,0,380,3],[558,0,382,2],[558,13,382,11,"comment"],[558,20,382,2],[558,23,382,21],[559,0,383,4],[559,10,383,10,"index"],[559,15,383,15],[559,18,383,18,"source"],[559,24,383,24],[559,25,383,25,"indexOf"],[559,32,383,18],[559,33,383,33],[559,38,383,18],[559,40,383,40,"i"],[559,41,383,18],[559,42,383,4],[561,0,384,4],[561,10,384,8],[561,11,384,9],[561,12,384,10,"index"],[561,17,384,4],[561,19,384,17],[562,0,385,6,"error"],[562,8,385,6,"error"],[562,13,385,11],[562,14,385,12],[562,28,385,11],[562,29,385,6],[563,0,386,5],[565,0,388,4,"i"],[565,6,388,4,"i"],[565,7,388,5],[565,10,388,8,"index"],[565,15,388,13],[565,18,388,16],[565,19,388,4],[566,0,389,4],[566,13,389,11,"neutral"],[566,20,389,4],[567,0,390,3],[569,0,392,2],[569,13,392,11,"cdata"],[569,18,392,2],[569,21,392,19],[570,0,393,4],[570,10,393,10,"index"],[570,15,393,15],[570,18,393,18,"source"],[570,24,393,24],[570,25,393,25,"indexOf"],[570,32,393,18],[570,33,393,33],[570,38,393,18],[570,40,393,40,"i"],[570,41,393,18],[570,42,393,4],[572,0,394,4],[572,10,394,8],[572,11,394,9],[572,12,394,10,"index"],[572,17,394,4],[572,19,394,17],[573,0,395,6,"error"],[573,8,395,6,"error"],[573,13,395,11],[573,14,395,12],[573,28,395,11],[573,29,395,6],[574,0,396,5],[576,0,398,4,"children"],[576,6,398,4,"children"],[576,14,398,12],[576,15,398,13,"push"],[576,19,398,4],[576,20,398,18,"source"],[576,26,398,24],[576,27,398,25,"slice"],[576,32,398,18],[576,33,398,31,"i"],[576,34,398,32],[576,37,398,35],[576,38,398,18],[576,40,398,38,"index"],[576,45,398,18],[576,46,398,4],[577,0,400,4,"i"],[577,6,400,4,"i"],[577,7,400,5],[577,10,400,8,"index"],[577,15,400,13],[577,18,400,16],[577,19,400,4],[578,0,401,4],[578,13,401,11,"neutral"],[578,20,401,4],[579,0,402,3],[581,0,404,2],[581,13,404,11,"closingTag"],[581,23,404,2],[581,26,404,24],[582,0,405,4],[582,10,405,10,"tag"],[582,13,405,13],[582,16,405,16,"getName"],[582,23,405,23],[582,25,405,4],[584,0,407,4],[584,10,407,8],[584,11,407,9,"tag"],[584,14,407,4],[584,16,407,14],[585,0,408,6,"error"],[585,8,408,6,"error"],[585,13,408,11],[585,14,408,12],[585,33,408,11],[585,34,408,6],[586,0,409,5],[588,0,411,4],[588,10,411,8,"currentElement"],[588,24,411,22],[588,28,411,26,"tag"],[588,31,411,29],[588,36,411,34,"currentElement"],[588,50,411,48],[588,51,411,49,"tag"],[588,54,411,4],[588,56,411,54],[589,0,412,6,"error"],[589,8,412,6,"error"],[589,13,412,11],[589,42,413,34,"tag"],[589,45,412,11],[589,77,413,64,"currentElement"],[589,91,413,78],[589,92,413,79,"tag"],[589,95,412,11],[589,102,412,6],[590,0,415,5],[592,0,417,4],[592,10,417,8,"source"],[592,16,417,14],[592,17,417,15,"i"],[592,18,417,14],[592,19,417,8],[592,24,417,22],[592,27,417,4],[592,29,417,27],[593,0,418,6,"error"],[593,8,418,6,"error"],[593,13,418,11],[593,14,418,12],[593,26,418,11],[593,27,418,6],[594,0,419,5],[596,0,421,4,"stack"],[596,6,421,4,"stack"],[596,11,421,9],[596,12,421,10,"pop"],[596,15,421,4],[597,0,422,4,"currentElement"],[597,6,422,4,"currentElement"],[597,20,422,18],[597,23,422,21,"stack"],[597,28,422,26],[597,29,422,27,"stack"],[597,34,422,32],[597,35,422,33,"length"],[597,41,422,27],[597,44,422,42],[597,45,422,26],[597,46,422,4],[599,0,423,4],[599,10,423,8,"currentElement"],[599,24,423,4],[599,26,423,24],[600,0,423,24],[600,30,424,22,"currentElement"],[600,44,423,24],[601,0,424,9,"children"],[601,8,424,9,"children"],[601,16,423,24],[601,35,424,9,"children"],[601,43,423,24],[602,0,425,5],[604,0,427,4],[604,13,427,11,"neutral"],[604,20,427,4],[605,0,428,3],[607,0,430,2],[607,13,430,11,"getName"],[607,20,430,2],[607,23,430,21],[608,0,431,4],[608,10,431,8,"name"],[608,14,431,12],[608,17,431,15],[608,19,431,4],[609,0,432,4],[609,10,432,8,"char"],[609,14,432,4],[611,0,433,4],[611,13,433,11,"i"],[611,14,433,12],[611,17,433,15,"length"],[611,23,433,11],[611,27,433,25,"validNameCharacters"],[611,46,433,44],[611,47,433,45,"test"],[611,51,433,25],[611,52,433,51,"char"],[611,56,433,55],[611,59,433,58,"source"],[611,65,433,64],[611,66,433,65,"i"],[611,67,433,64],[611,68,433,25],[611,69,433,4],[611,71,433,71],[612,0,434,6,"name"],[612,8,434,6,"name"],[612,12,434,10],[612,16,434,14,"char"],[612,20,434,6],[613,0,435,6,"i"],[613,8,435,6,"i"],[613,9,435,7],[613,13,435,11],[613,14,435,6],[614,0,436,5],[616,0,438,4],[616,13,438,11,"name"],[616,17,438,4],[617,0,439,3],[619,0,441,2],[619,13,441,11,"getAttributes"],[619,26,441,2],[619,27,441,25,"props"],[619,32,441,2],[619,34,444,5],[620,0,445,4],[620,13,445,11,"i"],[620,14,445,12],[620,17,445,15,"length"],[620,23,445,4],[620,25,445,23],[621,0,446,6],[621,12,446,10],[621,13,446,11,"whitespace"],[621,23,446,21],[621,24,446,22,"test"],[621,28,446,11],[621,29,446,27,"source"],[621,35,446,33],[621,36,446,34,"i"],[621,37,446,33],[621,38,446,11],[621,39,446,6],[621,41,446,39],[622,0,447,8],[623,0,448,7],[625,0,449,6,"allowSpaces"],[625,8,449,6,"allowSpaces"],[625,19,449,17],[626,0,451,6],[626,12,451,12,"name"],[626,16,451,16],[626,19,451,19,"getName"],[626,26,451,26],[626,28,451,6],[628,0,452,6],[628,12,452,10],[628,13,452,11,"name"],[628,17,452,6],[628,19,452,17],[629,0,453,8],[630,0,454,7],[632,0,456,6],[632,12,456,10,"value"],[632,17,456,42],[632,20,456,45],[632,24,456,6],[633,0,458,6,"allowSpaces"],[633,8,458,6,"allowSpaces"],[633,19,458,17],[635,0,459,6],[635,12,459,10,"source"],[635,18,459,16],[635,19,459,17,"i"],[635,20,459,16],[635,21,459,10],[635,26,459,24],[635,29,459,6],[635,31,459,29],[636,0,460,8,"i"],[636,10,460,8,"i"],[636,11,460,9],[636,15,460,13],[636,16,460,8],[637,0,461,8,"allowSpaces"],[637,10,461,8,"allowSpaces"],[637,21,461,19],[638,0,463,8,"value"],[638,10,463,8,"value"],[638,15,463,13],[638,18,463,16,"getAttributeValue"],[638,35,463,33],[638,37,463,8],[640,0,464,8],[640,14,464,12],[640,15,464,13,"isNaN"],[640,20,464,18],[640,21,464,19],[640,22,464,20,"value"],[640,27,464,18],[640,28,464,12],[640,32,464,30,"value"],[640,37,464,35],[640,38,464,36,"trim"],[640,42,464,30],[640,49,464,47],[640,51,464,8],[640,53,464,51],[641,0,465,10,"value"],[641,12,465,10,"value"],[641,17,465,15],[641,20,465,18],[641,21,465,19,"value"],[641,26,465,10],[642,0,466,9],[643,0,467,7],[645,0,469,6,"props"],[645,8,469,6,"props"],[645,13,469,11],[645,14,469,12,"camelCase"],[645,23,469,21],[645,24,469,22,"name"],[645,28,469,21],[645,29,469,11],[645,30,469,6],[645,33,469,31,"value"],[645,38,469,6],[646,0,470,5],[647,0,471,3],[649,0,473,2],[649,13,473,11,"getAttributeValue"],[649,30,473,2],[649,33,473,39],[650,0,474,4],[650,13,474,11,"quotemarks"],[650,23,474,21],[650,24,474,22,"test"],[650,28,474,11],[650,29,474,27,"source"],[650,35,474,33],[650,36,474,34,"i"],[650,37,474,33],[650,38,474,11],[650,42,475,8,"getQuotedAttributeValue"],[650,65,475,31],[650,67,474,11],[650,70,476,8,"getUnquotedAttributeValue"],[650,95,476,33],[650,97,474,4],[651,0,477,3],[653,0,479,2],[653,13,479,11,"getUnquotedAttributeValue"],[653,38,479,2],[653,41,479,39],[654,0,480,4],[654,10,480,8,"value"],[654,15,480,13],[654,18,480,16],[654,20,480,4],[656,0,481,4],[656,9,481,7],[657,0,482,6],[657,12,482,12,"char"],[657,16,482,16],[657,19,482,19,"source"],[657,25,482,25],[657,26,482,26,"i"],[657,27,482,25],[657,28,482,6],[659,0,483,6],[659,12,483,10,"char"],[659,16,483,14],[659,21,483,19],[659,24,483,10],[659,28,483,26,"char"],[659,32,483,30],[659,37,483,35],[659,40,483,10],[659,44,483,42,"char"],[659,48,483,46],[659,53,483,51],[659,56,483,6],[659,58,483,56],[660,0,484,8],[660,17,484,15,"value"],[660,22,484,8],[661,0,485,7],[663,0,487,6,"value"],[663,8,487,6,"value"],[663,13,487,11],[663,17,487,15,"char"],[663,21,487,6],[664,0,488,6,"i"],[664,8,488,6,"i"],[664,9,488,7],[664,13,488,11],[664,14,488,6],[665,0,489,5],[665,7,481,4],[665,15,489,13,"i"],[665,16,489,14],[665,19,489,17,"length"],[665,25,481,4],[667,0,491,4],[667,13,491,11,"value"],[667,18,491,4],[668,0,492,3],[670,0,494,2],[670,13,494,11,"getQuotedAttributeValue"],[670,36,494,2],[670,39,494,37],[671,0,495,4],[671,10,495,10,"quotemark"],[671,19,495,19],[671,22,495,22,"source"],[671,28,495,28],[671,29,495,29,"i"],[671,30,495,30],[671,32,495,28],[671,33,495,4],[672,0,497,4],[672,10,497,8,"value"],[672,15,497,13],[672,18,497,16],[672,20,497,4],[673,0,498,4],[673,10,498,8,"escaped"],[673,17,498,15],[673,20,498,18],[673,25,498,4],[675,0,500,4],[675,13,500,11,"i"],[675,14,500,12],[675,17,500,15,"length"],[675,23,500,4],[675,25,500,23],[676,0,501,6],[676,12,501,12,"char"],[676,16,501,16],[676,19,501,19,"source"],[676,25,501,25],[676,26,501,26,"i"],[676,27,501,27],[676,29,501,25],[676,30,501,6],[678,0,502,6],[678,12,502,10,"char"],[678,16,502,14],[678,21,502,19,"quotemark"],[678,30,502,10],[678,34,502,32],[678,35,502,33,"escaped"],[678,42,502,6],[678,44,502,42],[679,0,503,8],[679,17,503,15,"value"],[679,22,503,8],[680,0,504,7],[682,0,506,6],[682,12,506,10,"char"],[682,16,506,14],[682,21,506,19],[682,25,506,10],[682,29,506,27],[682,30,506,28,"escaped"],[682,37,506,6],[682,39,506,37],[683,0,507,8,"escaped"],[683,10,507,8,"escaped"],[683,17,507,15],[683,20,507,18],[683,24,507,8],[684,0,508,7],[686,0,510,6,"value"],[686,8,510,6,"value"],[686,13,510,11],[686,17,510,15,"escaped"],[686,24,510,22],[686,34,510,30,"char"],[686,38,510,22],[686,41,510,39,"char"],[686,45,510,6],[687,0,511,6,"escaped"],[687,8,511,6,"escaped"],[687,15,511,13],[687,18,511,16],[687,23,511,6],[688,0,512,5],[690,0,514,4],[690,13,514,11,"value"],[690,18,514,4],[691,0,515,3],[693,0,517,2],[693,13,517,11,"allowSpaces"],[693,24,517,2],[693,27,517,25],[694,0,518,4],[694,13,518,11,"i"],[694,14,518,12],[694,17,518,15,"length"],[694,23,518,11],[694,27,518,25,"whitespace"],[694,37,518,35],[694,38,518,36,"test"],[694,42,518,25],[694,43,518,41,"source"],[694,49,518,47],[694,50,518,48,"i"],[694,51,518,47],[694,52,518,25],[694,53,518,4],[694,55,518,53],[695,0,519,6,"i"],[695,8,519,6,"i"],[695,9,519,7],[695,13,519,11],[695,14,519,6],[696,0,520,5],[697,0,521,3],[699,0,523,2],[699,8,523,6,"i"],[699,9,523,7],[699,12,523,10],[699,13,523,2],[701,0,524,2],[701,11,524,9,"i"],[701,12,524,10],[701,15,524,13,"length"],[701,21,524,2],[701,23,524,21],[702,0,525,4],[702,10,525,8],[702,11,525,9,"state"],[702,16,525,4],[702,18,525,16],[703,0,526,6,"error"],[703,8,526,6,"error"],[703,13,526,11],[703,14,526,12],[703,36,526,11],[703,37,526,6],[704,0,527,5],[706,0,528,4,"state"],[706,6,528,4,"state"],[706,11,528,9],[706,14,528,12,"state"],[706,19,528,17],[706,21,528,4],[707,0,529,4,"i"],[707,6,529,4,"i"],[707,7,529,5],[707,11,529,9],[707,12,529,4],[708,0,530,3],[710,0,532,2],[710,8,532,6,"state"],[710,13,532,11],[710,18,532,16,"neutral"],[710,25,532,2],[710,27,532,25],[711,0,533,4,"error"],[711,6,533,4,"error"],[711,11,533,9],[711,12,533,10],[711,37,533,9],[711,38,533,4],[712,0,534,3],[714,0,536,2],[714,8,536,6,"root"],[714,12,536,2],[714,14,536,12],[715,0,537,4],[715,10,537,10,"xml"],[715,13,537,21],[715,16,537,24],[715,17,537,25,"middleware"],[715,27,537,35],[715,30,537,38,"middleware"],[715,40,537,48],[715,41,537,49,"root"],[715,45,537,48],[715,46,537,35],[715,49,537,57,"root"],[715,53,537,24],[715,58,537,66,"root"],[715,62,537,4],[717,0,538,4],[717,10,538,10,"ast"],[717,14,538,39],[717,17,538,42,"xml"],[717,20,538,45],[717,21,538,46,"children"],[717,29,538,42],[717,30,538,55,"map"],[717,33,538,42],[717,34,538,59,"astToReact"],[717,44,538,42],[717,45,538,4],[719,0,539,4],[719,10,539,10,"jsx"],[719,13,539,21],[719,16,539,24,"xml"],[719,19,539,4],[720,0,540,4,"jsx"],[720,6,540,4,"jsx"],[720,9,540,7],[720,10,540,8,"children"],[720,18,540,4],[720,21,540,19,"ast"],[720,25,540,4],[721,0,541,4],[721,13,541,11,"jsx"],[721,16,541,4],[722,0,542,3],[724,0,544,2],[724,11,544,9],[724,15,544,2],[725,0,545,1]],"functionMap":{"names":["<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","fetchText","SvgUri","useEffect$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA;ACyD;CDE;OEgC;CFU;OGE;qCCE,wCD;CHI;OKE;CLG;OMI;YCG;GDM;CNE;OQI;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CRC;OaE;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CbC;kBkBE,wDlB;yBmBE;2CnBC;OoBI;CpBc;OqBE;CrBa;AsBI;CtBM;iBuBE,2CvB;AwBE;CxBsB;OyBQ;ECQ;GDK;EEE;GFS;EGE;GHiB;EIE;GJmE;EKE;GLQ;EME;GNU;EOE;GPwB;EQE;GRS;ESE;GT8B;EUE;GVI;EWE;GXa;EYE;GZqB;EaE;GbI;CzBwB"}},"type":"js/module"}]}