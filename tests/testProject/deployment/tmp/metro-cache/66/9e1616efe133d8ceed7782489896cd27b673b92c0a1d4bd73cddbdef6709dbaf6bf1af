{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], \"react-native\"),\n      NativeModules = _require.NativeModules;\n\n  var RCTAsyncStorage = NativeModules.PlatformLocalStorage || NativeModules.RNC_AsyncSQLiteDBStorage || NativeModules.RNCAsyncStorage;\n\n  if (!RCTAsyncStorage) {\n    throw new Error(\"[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.\\n\\nTo fix this issue try these steps:\\n\\n  \\u2022 Run `react-native link @react-native-community/async-storage` in the project root.\\n\\n  \\u2022 Rebuild and restart the app.\\n\\n  \\u2022 Run the packager with `--clearCache` flag.\\n\\n  \\u2022 If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app.\\n\\n  \\u2022 If this happens while testing with Jest, check out docs how to integrate AsyncStorage with it: https://github.com/react-native-community/async-storage/blob/LEGACY/docs/Jest-integration.md\\n\\nIf none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-community/react-native-async-storage/issues \\n\");\n  }\n\n  function checkValidInput(usedKey, value) {\n    var isValuePassed = arguments.length > 1;\n\n    if (typeof usedKey !== 'string') {\n      console.warn(\"[AsyncStorage] Using \" + typeof usedKey + \" type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: \" + usedKey + \"\\n\");\n    }\n\n    if (isValuePassed && typeof value !== 'string') {\n      if (value == null) {\n        throw new Error(\"[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .remove method instead.\\nPassed value: \" + value + \"\\nPassed key: \" + usedKey + \"\\n\");\n      } else {\n        console.warn(\"[AsyncStorage] The value for key \\\"\" + usedKey + \"\\\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: \" + value + \"\\nPassed key: \" + usedKey + \"\\n\");\n      }\n    }\n  }\n\n  var AsyncStorage = {\n    _getRequests: [],\n    _getKeys: [],\n    _immediate: null,\n    getItem: function getItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key);\n        RCTAsyncStorage.multiGet([key], function (errors, result) {\n          var value = result && result[0] && result[0][1] ? result[0][1] : null;\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0], value);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(value);\n          }\n        });\n      });\n    },\n    setItem: function setItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key, value);\n        RCTAsyncStorage.multiSet([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    removeItem: function removeItem(key, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key);\n        RCTAsyncStorage.multiRemove([key], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    mergeItem: function mergeItem(key, value, callback) {\n      return new Promise(function (resolve, reject) {\n        checkValidInput(key, value);\n        RCTAsyncStorage.multiMerge([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    clear: function clear(callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.clear(function (error) {\n          var err = convertError(error);\n          callback && callback(err);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    getAllKeys: function getAllKeys(callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.getAllKeys(function (error, keys) {\n          var err = convertError(error);\n          callback && callback(err, keys);\n\n          if (err) {\n            reject(err);\n          } else {\n            resolve(keys);\n          }\n        });\n      });\n    },\n    flushGetRequests: function flushGetRequests() {\n      var getRequests = this._getRequests;\n      var getKeys = this._getKeys;\n      this._getRequests = [];\n      this._getKeys = [];\n      RCTAsyncStorage.multiGet(getKeys, function (errors, result) {\n        var map = {};\n        result && result.forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          map[key] = value;\n          return value;\n        });\n        var reqLength = getRequests.length;\n\n        for (var i = 0; i < reqLength; i++) {\n          var request = getRequests[i];\n          var requestKeys = request.keys;\n          var requestResult = requestKeys.map(function (key) {\n            return [key, map[key]];\n          });\n          request.callback && request.callback(null, requestResult);\n          request.resolve && request.resolve(requestResult);\n        }\n      });\n    },\n    multiGet: function multiGet(keys, callback) {\n      var _this = this;\n\n      if (!this._immediate) {\n        this._immediate = setImmediate(function () {\n          _this._immediate = null;\n\n          _this.flushGetRequests();\n        });\n      }\n\n      var getRequest = {\n        keys: keys,\n        callback: callback,\n        keyIndex: this._getKeys.length,\n        resolve: null,\n        reject: null\n      };\n      var promiseResult = new Promise(function (resolve, reject) {\n        getRequest.resolve = resolve;\n        getRequest.reject = reject;\n      });\n\n      this._getRequests.push(getRequest);\n\n      keys.forEach(function (key) {\n        if (_this._getKeys.indexOf(key) === -1) {\n          _this._getKeys.push(key);\n        }\n      });\n      return promiseResult;\n    },\n    multiSet: function multiSet(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        keyValuePairs.forEach(function (_ref3) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n              key = _ref4[0],\n              value = _ref4[1];\n\n          checkValidInput(key, value);\n        });\n        RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiRemove: function multiRemove(keys, callback) {\n      return new Promise(function (resolve, reject) {\n        keys.forEach(function (key) {\n          return checkValidInput(key);\n        });\n        RCTAsyncStorage.multiRemove(keys, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiMerge: function multiMerge(keyValuePairs, callback) {\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    }\n  };\n\n  if (!RCTAsyncStorage.multiMerge) {\n    delete AsyncStorage.mergeItem;\n    delete AsyncStorage.multiMerge;\n  }\n\n  function convertErrors(errs) {\n    if (!errs) {\n      return null;\n    }\n\n    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {\n      return convertError(e);\n    });\n  }\n\n  function convertError(error) {\n    if (!error) {\n      return null;\n    }\n\n    var out = new Error(error.message);\n    out.key = error.key;\n    return out;\n  }\n\n  var _default = AsyncStorage;\n  exports.default = _default;\n});","lineCount":272,"map":[[2,0,12,0],[13,17,14,24,"require"],[13,28,14,31],[13,63],[14,6,14,7,"NativeModules"],[14,19],[14,31,14,7,"NativeModules"],[14,44],[16,0,16,0],[16,6,16,6,"RCTAsyncStorage"],[16,21,16,21],[16,24,17,2,"NativeModules"],[16,37,17,15],[16,38,17,16,"PlatformLocalStorage"],[16,58,17,2],[16,62,18,2,"NativeModules"],[16,75,18,15],[16,76,18,16,"RNC_AsyncSQLiteDBStorage"],[16,100,17,2],[16,104,19,2,"NativeModules"],[16,117,19,15],[16,118,19,16,"RNCAsyncStorage"],[16,133,16,0],[18,0,21,0],[18,6,21,4],[18,7,21,5,"RCTAsyncStorage"],[18,22,21,0],[18,24,21,22],[19,0,22,2],[19,10,22,8],[19,14,22,12,"Error"],[19,19,22,8],[19,794,22,2],[20,0,38,1],[22,0,55,0],[22,11,55,9,"checkValidInput"],[22,26,55,0],[22,27,55,25,"usedKey"],[22,34,55,0],[22,36,55,42,"value"],[22,41,55,0],[22,43,55,54],[23,0,56,2],[23,8,56,8,"isValuePassed"],[23,21,56,21],[23,24,56,24,"arguments"],[23,33,56,33],[23,34,56,34,"length"],[23,40,56,24],[23,43,56,43],[23,44,56,2],[25,0,58,2],[25,8,58,6],[25,15,58,13,"usedKey"],[25,22,58,6],[25,27,58,25],[25,35,58,2],[25,37,58,35],[26,0,59,4,"console"],[26,6,59,4,"console"],[26,13,59,11],[26,14,59,12,"warn"],[26,18,59,4],[26,45,60,30],[26,52,60,37,"usedKey"],[26,59,59,4],[26,177,60,157,"usedKey"],[26,184,59,4],[27,0,62,3],[29,0,64,2],[29,8,64,6,"isValuePassed"],[29,21,64,19],[29,25,64,23],[29,32,64,30,"value"],[29,37,64,23],[29,42,64,40],[29,50,64,2],[29,52,64,50],[30,0,65,4],[30,10,65,8,"value"],[30,15,65,13],[30,19,65,17],[30,23,65,4],[30,25,65,23],[31,0,66,6],[31,14,66,12],[31,18,66,16,"Error"],[31,23,66,12],[31,166,67,148,"value"],[31,171,66,12],[31,193,67,170,"usedKey"],[31,200,66,12],[31,208,66,6],[32,0,69,5],[32,7,65,4],[32,13,69,11],[33,0,70,6,"console"],[33,8,70,6,"console"],[33,15,70,13],[33,16,70,14,"warn"],[33,20,70,6],[33,61,71,45,"usedKey"],[33,68,70,6],[33,182,71,160,"value"],[33,187,70,6],[33,209,71,182,"usedKey"],[33,216,70,6],[34,0,73,5],[35,0,74,3],[36,0,75,1],[38,0,84,0],[38,6,84,6,"AsyncStorage"],[38,18,84,18],[38,21,84,21],[39,0,85,2,"_getRequests"],[39,4,85,2,"_getRequests"],[39,16,85,14],[39,18,85,17],[39,20,84,21],[40,0,86,2,"_getKeys"],[40,4,86,2,"_getKeys"],[40,12,86,10],[40,14,86,13],[40,16,84,21],[41,0,87,2,"_immediate"],[41,4,87,2,"_immediate"],[41,14,87,12],[41,16,87,15],[41,20,84,21],[42,0,94,2,"getItem"],[42,4,94,2,"getItem"],[42,11,94,9],[42,13,94,11],[42,30,95,4,"key"],[42,33,94,11],[42,35,96,4,"callback"],[42,43,94,11],[42,45,97,28],[43,0,98,4],[43,13,98,11],[43,17,98,15,"Promise"],[43,24,98,11],[43,25,98,23],[43,35,98,24,"resolve"],[43,42,98,23],[43,44,98,33,"reject"],[43,50,98,23],[43,52,98,44],[44,0,99,6,"checkValidInput"],[44,8,99,6,"checkValidInput"],[44,23,99,21],[44,24,99,22,"key"],[44,27,99,21],[44,28,99,6],[45,0,100,6,"RCTAsyncStorage"],[45,8,100,6,"RCTAsyncStorage"],[45,23,100,21],[45,24,100,22,"multiGet"],[45,32,100,6],[45,33,100,31],[45,34,100,32,"key"],[45,37,100,31],[45,38,100,6],[45,40,100,38],[45,50,100,47,"errors"],[45,56,100,38],[45,58,100,55,"result"],[45,64,100,38],[45,66,100,63],[46,0,102,8],[46,14,102,14,"value"],[46,19,102,19],[46,22,102,22,"result"],[46,28,102,28],[46,32,102,32,"result"],[46,38,102,38],[46,39,102,39],[46,40,102,38],[46,41,102,22],[46,45,102,45,"result"],[46,51,102,51],[46,52,102,52],[46,53,102,51],[46,54,102,45],[46,55,102,55],[46,56,102,45],[46,57,102,22],[46,60,102,60,"result"],[46,66,102,66],[46,67,102,67],[46,68,102,66],[46,69,102,60],[46,70,102,70],[46,71,102,60],[46,72,102,22],[46,75,102,75],[46,79,102,8],[47,0,103,8],[47,14,103,14,"errs"],[47,18,103,18],[47,21,103,21,"convertErrors"],[47,34,103,34],[47,35,103,35,"errors"],[47,41,103,34],[47,42,103,8],[48,0,104,8,"callback"],[48,10,104,8,"callback"],[48,18,104,16],[48,22,104,20,"callback"],[48,30,104,28],[48,31,104,29,"errs"],[48,35,104,33],[48,39,104,37,"errs"],[48,43,104,41],[48,44,104,42],[48,45,104,41],[48,46,104,28],[48,48,104,46,"value"],[48,53,104,28],[48,54,104,8],[50,0,105,8],[50,14,105,12,"errs"],[50,18,105,8],[50,20,105,18],[51,0,106,10,"reject"],[51,12,106,10,"reject"],[51,18,106,16],[51,19,106,17,"errs"],[51,23,106,21],[51,24,106,22],[51,25,106,21],[51,26,106,16],[51,27,106,10],[52,0,107,9],[52,11,105,8],[52,17,107,15],[53,0,108,10,"resolve"],[53,12,108,10,"resolve"],[53,19,108,17],[53,20,108,18,"value"],[53,25,108,17],[53,26,108,10],[54,0,109,9],[55,0,110,7],[55,9,100,6],[56,0,111,5],[56,7,98,11],[56,8,98,4],[57,0,112,3],[57,5,84,21],[58,0,119,2,"setItem"],[58,4,119,2,"setItem"],[58,11,119,9],[58,13,119,11],[58,30,120,4,"key"],[58,33,119,11],[58,35,121,4,"value"],[58,40,119,11],[58,42,122,4,"callback"],[58,50,119,11],[58,52,123,19],[59,0,124,4],[59,13,124,11],[59,17,124,15,"Promise"],[59,24,124,11],[59,25,124,23],[59,35,124,24,"resolve"],[59,42,124,23],[59,44,124,33,"reject"],[59,50,124,23],[59,52,124,44],[60,0,125,6,"checkValidInput"],[60,8,125,6,"checkValidInput"],[60,23,125,21],[60,24,125,22,"key"],[60,27,125,21],[60,29,125,27,"value"],[60,34,125,21],[60,35,125,6],[61,0,126,6,"RCTAsyncStorage"],[61,8,126,6,"RCTAsyncStorage"],[61,23,126,21],[61,24,126,22,"multiSet"],[61,32,126,6],[61,33,126,31],[61,34,126,32],[61,35,126,33,"key"],[61,38,126,32],[61,40,126,38,"value"],[61,45,126,32],[61,46,126,31],[61,47,126,6],[61,49,126,47],[61,59,126,56,"errors"],[61,65,126,47],[61,67,126,64],[62,0,127,8],[62,14,127,14,"errs"],[62,18,127,18],[62,21,127,21,"convertErrors"],[62,34,127,34],[62,35,127,35,"errors"],[62,41,127,34],[62,42,127,8],[63,0,128,8,"callback"],[63,10,128,8,"callback"],[63,18,128,16],[63,22,128,20,"callback"],[63,30,128,28],[63,31,128,29,"errs"],[63,35,128,33],[63,39,128,37,"errs"],[63,43,128,41],[63,44,128,42],[63,45,128,41],[63,46,128,28],[63,47,128,8],[65,0,129,8],[65,14,129,12,"errs"],[65,18,129,8],[65,20,129,18],[66,0,130,10,"reject"],[66,12,130,10,"reject"],[66,18,130,16],[66,19,130,17,"errs"],[66,23,130,21],[66,24,130,22],[66,25,130,21],[66,26,130,16],[66,27,130,10],[67,0,131,9],[67,11,129,8],[67,17,131,15],[68,0,132,10,"resolve"],[68,12,132,10,"resolve"],[68,19,132,17],[68,20,132,18],[68,24,132,17],[68,25,132,10],[69,0,133,9],[70,0,134,7],[70,9,126,6],[71,0,135,5],[71,7,124,11],[71,8,124,4],[72,0,136,3],[72,5,84,21],[73,0,143,2,"removeItem"],[73,4,143,2,"removeItem"],[73,14,143,12],[73,16,143,14],[73,36,144,4,"key"],[73,39,143,14],[73,41,145,4,"callback"],[73,49,143,14],[73,51,146,19],[74,0,147,4],[74,13,147,11],[74,17,147,15,"Promise"],[74,24,147,11],[74,25,147,23],[74,35,147,24,"resolve"],[74,42,147,23],[74,44,147,33,"reject"],[74,50,147,23],[74,52,147,44],[75,0,148,6,"checkValidInput"],[75,8,148,6,"checkValidInput"],[75,23,148,21],[75,24,148,22,"key"],[75,27,148,21],[75,28,148,6],[76,0,149,6,"RCTAsyncStorage"],[76,8,149,6,"RCTAsyncStorage"],[76,23,149,21],[76,24,149,22,"multiRemove"],[76,35,149,6],[76,36,149,34],[76,37,149,35,"key"],[76,40,149,34],[76,41,149,6],[76,43,149,41],[76,53,149,50,"errors"],[76,59,149,41],[76,61,149,58],[77,0,150,8],[77,14,150,14,"errs"],[77,18,150,18],[77,21,150,21,"convertErrors"],[77,34,150,34],[77,35,150,35,"errors"],[77,41,150,34],[77,42,150,8],[78,0,151,8,"callback"],[78,10,151,8,"callback"],[78,18,151,16],[78,22,151,20,"callback"],[78,30,151,28],[78,31,151,29,"errs"],[78,35,151,33],[78,39,151,37,"errs"],[78,43,151,41],[78,44,151,42],[78,45,151,41],[78,46,151,28],[78,47,151,8],[80,0,152,8],[80,14,152,12,"errs"],[80,18,152,8],[80,20,152,18],[81,0,153,10,"reject"],[81,12,153,10,"reject"],[81,18,153,16],[81,19,153,17,"errs"],[81,23,153,21],[81,24,153,22],[81,25,153,21],[81,26,153,16],[81,27,153,10],[82,0,154,9],[82,11,152,8],[82,17,154,15],[83,0,155,10,"resolve"],[83,12,155,10,"resolve"],[83,19,155,17],[83,20,155,18],[83,24,155,17],[83,25,155,10],[84,0,156,9],[85,0,157,7],[85,9,149,6],[86,0,158,5],[86,7,147,11],[86,8,147,4],[87,0,159,3],[87,5,84,21],[88,0,169,2,"mergeItem"],[88,4,169,2,"mergeItem"],[88,13,169,11],[88,15,169,13],[88,34,170,4,"key"],[88,37,169,13],[88,39,171,4,"value"],[88,44,169,13],[88,46,172,4,"callback"],[88,54,169,13],[88,56,173,19],[89,0,174,4],[89,13,174,11],[89,17,174,15,"Promise"],[89,24,174,11],[89,25,174,23],[89,35,174,24,"resolve"],[89,42,174,23],[89,44,174,33,"reject"],[89,50,174,23],[89,52,174,44],[90,0,175,6,"checkValidInput"],[90,8,175,6,"checkValidInput"],[90,23,175,21],[90,24,175,22,"key"],[90,27,175,21],[90,29,175,27,"value"],[90,34,175,21],[90,35,175,6],[91,0,176,6,"RCTAsyncStorage"],[91,8,176,6,"RCTAsyncStorage"],[91,23,176,21],[91,24,176,22,"multiMerge"],[91,34,176,6],[91,35,176,33],[91,36,176,34],[91,37,176,35,"key"],[91,40,176,34],[91,42,176,40,"value"],[91,47,176,34],[91,48,176,33],[91,49,176,6],[91,51,176,49],[91,61,176,58,"errors"],[91,67,176,49],[91,69,176,66],[92,0,177,8],[92,14,177,14,"errs"],[92,18,177,18],[92,21,177,21,"convertErrors"],[92,34,177,34],[92,35,177,35,"errors"],[92,41,177,34],[92,42,177,8],[93,0,178,8,"callback"],[93,10,178,8,"callback"],[93,18,178,16],[93,22,178,20,"callback"],[93,30,178,28],[93,31,178,29,"errs"],[93,35,178,33],[93,39,178,37,"errs"],[93,43,178,41],[93,44,178,42],[93,45,178,41],[93,46,178,28],[93,47,178,8],[95,0,179,8],[95,14,179,12,"errs"],[95,18,179,8],[95,20,179,18],[96,0,180,10,"reject"],[96,12,180,10,"reject"],[96,18,180,16],[96,19,180,17,"errs"],[96,23,180,21],[96,24,180,22],[96,25,180,21],[96,26,180,16],[96,27,180,10],[97,0,181,9],[97,11,179,8],[97,17,181,15],[98,0,182,10,"resolve"],[98,12,182,10,"resolve"],[98,19,182,17],[98,20,182,18],[98,24,182,17],[98,25,182,10],[99,0,183,9],[100,0,184,7],[100,9,176,6],[101,0,185,5],[101,7,174,11],[101,8,174,4],[102,0,186,3],[102,5,84,21],[103,0,195,2,"clear"],[103,4,195,2,"clear"],[103,9,195,7],[103,11,195,9],[103,26,195,18,"callback"],[103,34,195,9],[103,36,195,70],[104,0,196,4],[104,13,196,11],[104,17,196,15,"Promise"],[104,24,196,11],[104,25,196,23],[104,35,196,24,"resolve"],[104,42,196,23],[104,44,196,33,"reject"],[104,50,196,23],[104,52,196,44],[105,0,197,6,"RCTAsyncStorage"],[105,8,197,6,"RCTAsyncStorage"],[105,23,197,21],[105,24,197,22,"clear"],[105,29,197,6],[105,30,197,28],[105,40,197,37,"error"],[105,45,197,28],[105,47,197,44],[106,0,198,8],[106,14,198,14,"err"],[106,17,198,17],[106,20,198,20,"convertError"],[106,32,198,32],[106,33,198,33,"error"],[106,38,198,32],[106,39,198,8],[107,0,199,8,"callback"],[107,10,199,8,"callback"],[107,18,199,16],[107,22,199,20,"callback"],[107,30,199,28],[107,31,199,29,"err"],[107,34,199,28],[107,35,199,8],[109,0,200,8],[109,14,200,12,"err"],[109,17,200,8],[109,19,200,17],[110,0,201,10,"reject"],[110,12,201,10,"reject"],[110,18,201,16],[110,19,201,17,"err"],[110,22,201,16],[110,23,201,10],[111,0,202,9],[111,11,200,8],[111,17,202,15],[112,0,203,10,"resolve"],[112,12,203,10,"resolve"],[112,19,203,17],[112,20,203,18],[112,24,203,17],[112,25,203,10],[113,0,204,9],[114,0,205,7],[114,9,197,6],[115,0,206,5],[115,7,196,11],[115,8,196,4],[116,0,207,3],[116,5,84,21],[117,0,214,2,"getAllKeys"],[117,4,214,2,"getAllKeys"],[117,14,214,12],[117,16,214,14],[117,36,215,4,"callback"],[117,44,214,14],[117,46,216,34],[118,0,217,4],[118,13,217,11],[118,17,217,15,"Promise"],[118,24,217,11],[118,25,217,23],[118,35,217,24,"resolve"],[118,42,217,23],[118,44,217,33,"reject"],[118,50,217,23],[118,52,217,44],[119,0,218,6,"RCTAsyncStorage"],[119,8,218,6,"RCTAsyncStorage"],[119,23,218,21],[119,24,218,22,"getAllKeys"],[119,34,218,6],[119,35,218,33],[119,45,218,42,"error"],[119,50,218,33],[119,52,218,49,"keys"],[119,56,218,33],[119,58,218,55],[120,0,219,8],[120,14,219,14,"err"],[120,17,219,17],[120,20,219,20,"convertError"],[120,32,219,32],[120,33,219,33,"error"],[120,38,219,32],[120,39,219,8],[121,0,220,8,"callback"],[121,10,220,8,"callback"],[121,18,220,16],[121,22,220,20,"callback"],[121,30,220,28],[121,31,220,29,"err"],[121,34,220,28],[121,36,220,34,"keys"],[121,40,220,28],[121,41,220,8],[123,0,221,8],[123,14,221,12,"err"],[123,17,221,8],[123,19,221,17],[124,0,222,10,"reject"],[124,12,222,10,"reject"],[124,18,222,16],[124,19,222,17,"err"],[124,22,222,16],[124,23,222,10],[125,0,223,9],[125,11,221,8],[125,17,223,15],[126,0,224,10,"resolve"],[126,12,224,10,"resolve"],[126,19,224,17],[126,20,224,18,"keys"],[126,24,224,17],[126,25,224,10],[127,0,225,9],[128,0,226,7],[128,9,218,6],[129,0,227,5],[129,7,217,11],[129,8,217,4],[130,0,228,3],[130,5,84,21],[131,0,245,2,"flushGetRequests"],[131,4,245,2,"flushGetRequests"],[131,20,245,18],[131,22,245,20],[131,50,245,37],[132,0,246,4],[132,10,246,10,"getRequests"],[132,21,246,21],[132,24,246,24],[132,29,246,29,"_getRequests"],[132,41,246,4],[133,0,247,4],[133,10,247,10,"getKeys"],[133,17,247,17],[133,20,247,20],[133,25,247,25,"_getKeys"],[133,33,247,4],[134,0,249,4],[134,11,249,9,"_getRequests"],[134,23,249,4],[134,26,249,24],[134,28,249,4],[135,0,250,4],[135,11,250,9,"_getKeys"],[135,19,250,4],[135,22,250,20],[135,24,250,4],[136,0,252,4,"RCTAsyncStorage"],[136,6,252,4,"RCTAsyncStorage"],[136,21,252,19],[136,22,252,20,"multiGet"],[136,30,252,4],[136,31,252,29,"getKeys"],[136,38,252,4],[136,40,252,38],[136,50,252,47,"errors"],[136,56,252,38],[136,58,252,55,"result"],[136,64,252,38],[136,66,252,63],[137,0,259,6],[137,12,259,12,"map"],[137,15,259,15],[137,18,259,18],[137,20,259,6],[138,0,260,6,"result"],[138,8,260,6,"result"],[138,14,260,12],[138,18,261,8,"result"],[138,24,261,14],[138,25,261,15,"forEach"],[138,32,261,8],[138,33,261,23],[138,49,261,41],[139,0,261,41],[140,0,261,41],[140,14,261,25,"key"],[140,17,261,41],[141,0,261,41],[141,14,261,30,"value"],[141,19,261,41],[143,0,262,10,"map"],[143,10,262,10,"map"],[143,13,262,13],[143,14,262,14,"key"],[143,17,262,13],[143,18,262,10],[143,21,262,21,"value"],[143,26,262,10],[144,0,263,10],[144,17,263,17,"value"],[144,22,263,10],[145,0,264,9],[145,9,261,8],[145,10,260,6],[146,0,265,6],[146,12,265,12,"reqLength"],[146,21,265,21],[146,24,265,24,"getRequests"],[146,35,265,35],[146,36,265,36,"length"],[146,42,265,6],[148,0,266,6],[148,13,266,11],[148,17,266,15,"i"],[148,18,266,16],[148,21,266,19],[148,22,266,6],[148,24,266,22,"i"],[148,25,266,23],[148,28,266,26,"reqLength"],[148,37,266,6],[148,39,266,37,"i"],[148,40,266,38],[148,42,266,6],[148,44,266,42],[149,0,267,8],[149,14,267,14,"request"],[149,21,267,21],[149,24,267,24,"getRequests"],[149,35,267,35],[149,36,267,36,"i"],[149,37,267,35],[149,38,267,8],[150,0,268,8],[150,14,268,14,"requestKeys"],[150,25,268,25],[150,28,268,28,"request"],[150,35,268,35],[150,36,268,36,"keys"],[150,40,268,8],[151,0,269,8],[151,14,269,14,"requestResult"],[151,27,269,27],[151,30,269,30,"requestKeys"],[151,41,269,41],[151,42,269,42,"map"],[151,45,269,30],[151,46,269,46],[151,56,269,46,"key"],[151,59,269,49],[152,0,269,49],[152,19,269,53],[152,20,269,54,"key"],[152,23,269,53],[152,25,269,59,"map"],[152,28,269,62],[152,29,269,63,"key"],[152,32,269,62],[152,33,269,53],[152,34,269,49],[153,0,269,49],[153,11,269,30],[153,12,269,8],[154,0,270,8,"request"],[154,10,270,8,"request"],[154,17,270,15],[154,18,270,16,"callback"],[154,26,270,8],[154,30,270,28,"request"],[154,37,270,35],[154,38,270,36,"callback"],[154,46,270,28],[154,47,270,45],[154,51,270,28],[154,53,270,51,"requestResult"],[154,66,270,28],[154,67,270,8],[155,0,271,8,"request"],[155,10,271,8,"request"],[155,17,271,15],[155,18,271,16,"resolve"],[155,25,271,8],[155,29,271,27,"request"],[155,36,271,34],[155,37,271,35,"resolve"],[155,44,271,27],[155,45,271,43,"requestResult"],[155,58,271,27],[155,59,271,8],[156,0,272,7],[157,0,273,5],[157,7,252,4],[158,0,274,3],[158,5,84,21],[159,0,283,2,"multiGet"],[159,4,283,2,"multiGet"],[159,12,283,10],[159,14,283,12],[159,32,284,4,"keys"],[159,36,283,12],[159,38,285,4,"callback"],[159,46,283,12],[159,48,286,51],[160,0,286,51],[162,0,287,4],[162,10,287,8],[162,11,287,9],[162,16,287,14,"_immediate"],[162,26,287,4],[162,28,287,26],[163,0,288,6],[163,13,288,11,"_immediate"],[163,23,288,6],[163,26,288,24,"setImmediate"],[163,38,288,36],[163,39,288,37],[163,51,288,43],[164,0,289,8],[164,10,289,8],[164,15,289,12],[164,16,289,13,"_immediate"],[164,26,289,8],[164,29,289,26],[164,33,289,8],[166,0,290,8],[166,10,290,8],[166,15,290,12],[166,16,290,13,"flushGetRequests"],[166,32,290,8],[167,0,291,7],[167,9,288,36],[167,10,288,6],[168,0,292,5],[170,0,294,4],[170,10,294,10,"getRequest"],[170,20,294,34],[170,23,294,37],[171,0,295,6,"keys"],[171,8,295,6,"keys"],[171,12,295,10],[171,14,295,12,"keys"],[171,18,294,37],[172,0,296,6,"callback"],[172,8,296,6,"callback"],[172,16,296,14],[172,18,296,16,"callback"],[172,26,294,37],[173,0,298,6,"keyIndex"],[173,8,298,6,"keyIndex"],[173,16,298,14],[173,18,298,16],[173,23,298,21,"_getKeys"],[173,31,298,16],[173,32,298,30,"length"],[173,38,294,37],[174,0,299,6,"resolve"],[174,8,299,6,"resolve"],[174,15,299,13],[174,17,299,15],[174,21,294,37],[175,0,300,6,"reject"],[175,8,300,6,"reject"],[175,14,300,12],[175,16,300,14],[176,0,294,37],[176,7,294,4],[177,0,303,4],[177,10,303,10,"promiseResult"],[177,23,303,23],[177,26,303,26],[177,30,303,30,"Promise"],[177,37,303,26],[177,38,303,38],[177,48,303,39,"resolve"],[177,55,303,38],[177,57,303,48,"reject"],[177,63,303,38],[177,65,303,59],[178,0,304,6,"getRequest"],[178,8,304,6,"getRequest"],[178,18,304,16],[178,19,304,17,"resolve"],[178,26,304,6],[178,29,304,27,"resolve"],[178,36,304,6],[179,0,305,6,"getRequest"],[179,8,305,6,"getRequest"],[179,18,305,16],[179,19,305,17,"reject"],[179,25,305,6],[179,28,305,26,"reject"],[179,34,305,6],[180,0,306,5],[180,7,303,26],[180,8,303,4],[182,0,308,4],[182,11,308,9,"_getRequests"],[182,23,308,4],[182,24,308,22,"push"],[182,28,308,4],[182,29,308,27,"getRequest"],[182,39,308,4],[184,0,310,4,"keys"],[184,6,310,4,"keys"],[184,10,310,8],[184,11,310,9,"forEach"],[184,18,310,4],[184,19,310,17],[184,29,310,17,"key"],[184,32,310,20],[184,34,310,24],[185,0,311,6],[185,12,311,10],[185,17,311,14],[185,18,311,15,"_getKeys"],[185,26,311,10],[185,27,311,24,"indexOf"],[185,34,311,10],[185,35,311,32,"key"],[185,38,311,10],[185,44,311,41],[185,45,311,42],[185,46,311,6],[185,48,311,45],[186,0,312,8],[186,10,312,8],[186,15,312,12],[186,16,312,13,"_getKeys"],[186,24,312,8],[186,25,312,22,"push"],[186,29,312,8],[186,30,312,27,"key"],[186,33,312,8],[187,0,313,7],[188,0,314,5],[188,7,310,4],[189,0,316,4],[189,13,316,11,"promiseResult"],[189,26,316,4],[190,0,317,3],[190,5,84,21],[191,0,325,2,"multiSet"],[191,4,325,2,"multiSet"],[191,12,325,10],[191,14,325,12],[191,32,326,4,"keyValuePairs"],[191,45,325,12],[191,47,327,4,"callback"],[191,55,325,12],[191,57,328,19],[192,0,329,4],[192,13,329,11],[192,17,329,15,"Promise"],[192,24,329,11],[192,25,329,23],[192,35,329,24,"resolve"],[192,42,329,23],[192,44,329,33,"reject"],[192,50,329,23],[192,52,329,44],[193,0,330,6,"keyValuePairs"],[193,8,330,6,"keyValuePairs"],[193,21,330,19],[193,22,330,20,"forEach"],[193,29,330,6],[193,30,330,28],[193,47,330,46],[194,0,330,46],[195,0,330,46],[195,14,330,30,"key"],[195,17,330,46],[196,0,330,46],[196,14,330,35,"value"],[196,19,330,46],[198,0,331,8,"checkValidInput"],[198,10,331,8,"checkValidInput"],[198,25,331,23],[198,26,331,24,"key"],[198,29,331,23],[198,31,331,29,"value"],[198,36,331,23],[198,37,331,8],[199,0,332,7],[199,9,330,6],[200,0,334,6,"RCTAsyncStorage"],[200,8,334,6,"RCTAsyncStorage"],[200,23,334,21],[200,24,334,22,"multiSet"],[200,32,334,6],[200,33,334,31,"keyValuePairs"],[200,46,334,6],[200,48,334,46],[200,58,334,55,"errors"],[200,64,334,46],[200,66,334,63],[201,0,335,8],[201,14,335,14,"error"],[201,19,335,19],[201,22,335,22,"convertErrors"],[201,35,335,35],[201,36,335,36,"errors"],[201,42,335,35],[201,43,335,8],[202,0,336,8,"callback"],[202,10,336,8,"callback"],[202,18,336,16],[202,22,336,20,"callback"],[202,30,336,28],[202,31,336,29,"error"],[202,36,336,28],[202,37,336,8],[204,0,337,8],[204,14,337,12,"error"],[204,19,337,8],[204,21,337,19],[205,0,338,10,"reject"],[205,12,338,10,"reject"],[205,18,338,16],[205,19,338,17,"error"],[205,24,338,16],[205,25,338,10],[206,0,339,9],[206,11,337,8],[206,17,339,15],[207,0,340,10,"resolve"],[207,12,340,10,"resolve"],[207,19,340,17],[207,20,340,18],[207,24,340,17],[207,25,340,10],[208,0,341,9],[209,0,342,7],[209,9,334,6],[210,0,343,5],[210,7,329,11],[210,8,329,4],[211,0,344,3],[211,5,84,21],[212,0,351,2,"multiRemove"],[212,4,351,2,"multiRemove"],[212,15,351,13],[212,17,351,15],[212,38,352,4,"keys"],[212,42,351,15],[212,44,353,4,"callback"],[212,52,351,15],[212,54,354,19],[213,0,355,4],[213,13,355,11],[213,17,355,15,"Promise"],[213,24,355,11],[213,25,355,23],[213,35,355,24,"resolve"],[213,42,355,23],[213,44,355,33,"reject"],[213,50,355,23],[213,52,355,44],[214,0,356,6,"keys"],[214,8,356,6,"keys"],[214,12,356,10],[214,13,356,11,"forEach"],[214,20,356,6],[214,21,356,19],[214,31,356,19,"key"],[214,34,356,22],[215,0,356,22],[215,17,356,26,"checkValidInput"],[215,32,356,41],[215,33,356,42,"key"],[215,36,356,41],[215,37,356,22],[216,0,356,22],[216,9,356,6],[217,0,358,6,"RCTAsyncStorage"],[217,8,358,6,"RCTAsyncStorage"],[217,23,358,21],[217,24,358,22,"multiRemove"],[217,35,358,6],[217,36,358,34,"keys"],[217,40,358,6],[217,42,358,40],[217,52,358,49,"errors"],[217,58,358,40],[217,60,358,57],[218,0,359,8],[218,14,359,14,"error"],[218,19,359,19],[218,22,359,22,"convertErrors"],[218,35,359,35],[218,36,359,36,"errors"],[218,42,359,35],[218,43,359,8],[219,0,360,8,"callback"],[219,10,360,8,"callback"],[219,18,360,16],[219,22,360,20,"callback"],[219,30,360,28],[219,31,360,29,"error"],[219,36,360,28],[219,37,360,8],[221,0,361,8],[221,14,361,12,"error"],[221,19,361,8],[221,21,361,19],[222,0,362,10,"reject"],[222,12,362,10,"reject"],[222,18,362,16],[222,19,362,17,"error"],[222,24,362,16],[222,25,362,10],[223,0,363,9],[223,11,361,8],[223,17,363,15],[224,0,364,10,"resolve"],[224,12,364,10,"resolve"],[224,19,364,17],[224,20,364,18],[224,24,364,17],[224,25,364,10],[225,0,365,9],[226,0,366,7],[226,9,358,6],[227,0,367,5],[227,7,355,11],[227,8,355,4],[228,0,368,3],[228,5,84,21],[229,0,378,2,"multiMerge"],[229,4,378,2,"multiMerge"],[229,14,378,12],[229,16,378,14],[229,36,379,4,"keyValuePairs"],[229,49,378,14],[229,51,380,4,"callback"],[229,59,378,14],[229,61,381,19],[230,0,382,4],[230,13,382,11],[230,17,382,15,"Promise"],[230,24,382,11],[230,25,382,23],[230,35,382,24,"resolve"],[230,42,382,23],[230,44,382,33,"reject"],[230,50,382,23],[230,52,382,44],[231,0,383,6,"RCTAsyncStorage"],[231,8,383,6,"RCTAsyncStorage"],[231,23,383,21],[231,24,383,22,"multiMerge"],[231,34,383,6],[231,35,383,33,"keyValuePairs"],[231,48,383,6],[231,50,383,48],[231,60,383,57,"errors"],[231,66,383,48],[231,68,383,65],[232,0,384,8],[232,14,384,14,"error"],[232,19,384,19],[232,22,384,22,"convertErrors"],[232,35,384,35],[232,36,384,36,"errors"],[232,42,384,35],[232,43,384,8],[233,0,385,8,"callback"],[233,10,385,8,"callback"],[233,18,385,16],[233,22,385,20,"callback"],[233,30,385,28],[233,31,385,29,"error"],[233,36,385,28],[233,37,385,8],[235,0,386,8],[235,14,386,12,"error"],[235,19,386,8],[235,21,386,19],[236,0,387,10,"reject"],[236,12,387,10,"reject"],[236,18,387,16],[236,19,387,17,"error"],[236,24,387,16],[236,25,387,10],[237,0,388,9],[237,11,386,8],[237,17,388,15],[238,0,389,10,"resolve"],[238,12,389,10,"resolve"],[238,19,389,17],[238,20,389,18],[238,24,389,17],[238,25,389,10],[239,0,390,9],[240,0,391,7],[240,9,383,6],[241,0,392,5],[241,7,382,11],[241,8,382,4],[242,0,393,3],[243,0,84,21],[243,3,84,0],[245,0,397,0],[245,6,397,4],[245,7,397,5,"RCTAsyncStorage"],[245,22,397,20],[245,23,397,21,"multiMerge"],[245,33,397,0],[245,35,397,33],[246,0,398,2],[246,11,398,9,"AsyncStorage"],[246,23,398,21],[246,24,398,22,"mergeItem"],[246,33,398,2],[247,0,399,2],[247,11,399,9,"AsyncStorage"],[247,23,399,21],[247,24,399,22,"multiMerge"],[247,34,399,2],[248,0,400,1],[250,0,402,0],[250,11,402,9,"convertErrors"],[250,24,402,0],[250,25,402,23,"errs"],[250,29,402,0],[250,31,402,54],[251,0,403,2],[251,8,403,6],[251,9,403,7,"errs"],[251,13,403,2],[251,15,403,13],[252,0,404,4],[252,13,404,11],[252,17,404,4],[253,0,405,3],[255,0,406,2],[255,11,406,9],[255,12,406,10,"Array"],[255,17,406,15],[255,18,406,16,"isArray"],[255,25,406,10],[255,26,406,24,"errs"],[255,30,406,10],[255,34,406,32,"errs"],[255,38,406,10],[255,41,406,39],[255,42,406,40,"errs"],[255,46,406,39],[255,47,406,9],[255,49,406,47,"map"],[255,52,406,9],[255,53,406,51],[255,63,406,51,"e"],[255,64,406,52],[256,0,406,52],[256,13,406,56,"convertError"],[256,25,406,68],[256,26,406,69,"e"],[256,27,406,68],[256,28,406,52],[257,0,406,52],[257,5,406,9],[257,6,406,2],[258,0,407,1],[260,0,409,0],[260,11,409,9,"convertError"],[260,23,409,0],[260,24,409,22,"error"],[260,29,409,0],[260,31,409,37],[261,0,410,2],[261,8,410,6],[261,9,410,7,"error"],[261,14,410,2],[261,16,410,14],[262,0,411,4],[262,13,411,11],[262,17,411,4],[263,0,412,3],[265,0,413,2],[265,8,413,8,"out"],[265,11,413,11],[265,14,413,14],[265,18,413,18,"Error"],[265,23,413,14],[265,24,413,24,"error"],[265,29,413,29],[265,30,413,30,"message"],[265,37,413,14],[265,38,413,2],[266,0,415,2,"out"],[266,4,415,2,"out"],[266,7,415,5],[266,8,415,6,"key"],[266,11,415,2],[266,14,415,12,"error"],[266,19,415,17],[266,20,415,18,"key"],[266,23,415,2],[267,0,416,2],[267,11,416,9,"out"],[267,14,416,2],[268,0,417,1],[270,17,419,15,"AsyncStorage"],[270,29]],"functionMap":{"names":["<global>","checkValidInput","getItem","Promise$argument_0","RCTAsyncStorage.multiGet$argument_1","setItem","RCTAsyncStorage.multiSet$argument_1","removeItem","RCTAsyncStorage.multiRemove$argument_1","mergeItem","RCTAsyncStorage.multiMerge$argument_1","clear","RCTAsyncStorage.clear$argument_0","getAllKeys","RCTAsyncStorage.getAllKeys$argument_0","flushGetRequests","result.forEach$argument_0","requestKeys.map$argument_0","multiGet","setImmediate$argument_0","keys.forEach$argument_0","multiSet","keyValuePairs.forEach$argument_0","multiRemove","multiMerge","convertErrors","map$argument_0","convertError"],"mappings":"AAA;ACsD;CDoB;WEmB;uBCI;sCCE;ODU;KDC;GFC;WKO;uBFK;+CGE;OHQ;KEC;GLC;cOO;uBJI;yCKE;OLQ;KIC;GPC;aSU;uBNK;iDOE;OPQ;KMC;GTC;SWS;uBRC;4BSC;OTQ;KQC;GXC;caO;uBVG;iCWC;OXQ;KUC;GbC;oBeiB;sCXO;uBYS;SZG;8CaK,sBb;KWI;GfC;YkBS;qCCK;ODG;sCfY;KeG;iBEI;KFI;GlBG;YqBQ;uBlBI;4BmBC;OnBE;8CGE;OHQ;KkBC;GrBC;euBO;uBpBI;mBiBC,2BjB;wCKE;OLQ;KoBC;GvBC;cwBU;uBrBI;gDOC;OPQ;KqBC;GxBC;AyBS;mDCI,oBD;CzBC;A2BE;C3BQ"}},"type":"js/module"}]}